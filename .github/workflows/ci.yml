name: ci

on:
  push:
    branches:
      - master
      - main
  pull_request:

env:
  COMPOSER_INSTALL_FLAGS: "--prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi"

jobs:
  matrix_tests:
    name: PHP${{ matrix.php-version }} MySQL${{ matrix.mysql-version }} PgSQL${{ matrix.pgsql-version }} MSSQL${{ matrix.mssql-version }}
    if: ${{ !contains(github.event.head_commit.message, 'skip ci') }}

    runs-on: ${{ matrix.os-version }}

    strategy:
      fail-fast: false
      matrix:
        os-version: [ubuntu-22.04]
        php-version: ['8.0', '8.1', '8.2']
        mysql-version: ['5.7', '8.0']
        pgsql-version: ['14']
        mssql-version: ['2019-latest']

    services:
      mysql:
        image: mysql:${{ matrix.mysql-version }}
        env:
          MYSQL_ROOT_PASSWORD: root12345
          MYSQL_DATABASE: test0db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      postgres:
        image: postgres:${{ matrix.pgsql-version }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: yiitest
        ports:
          - 5432:5432
        options: --name=postgres --health-cmd=pg_isready --health-interval=10s --health-timeout=5s --health-retries=3

      mssql:
        image: mcr.microsoft.com/mssql/server:${{ matrix.mssql-version }}
        env:
          SA_PASSWORD: YourStrong!Passw0rd
          ACCEPT_EULA: Y
          MSSQL_PID: Developer
        ports:
          - 1433:1433
        options: --name=mssql --health-cmd="/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'YourStrong!Passw0rd' -Q 'SELECT 1'" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - run: sudo locale-gen fr_FR.UTF-8

      - uses: actions/checkout@v3

      - name: Create MSSQL Database
        run: docker exec -i mssql /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'YourStrong!Passw0rd' -Q 'CREATE DATABASE yiitest'

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: pecl
          extensions: curl, dom, imagick, intl, mbstring, mcrypt, memcached, mysql, pdo, pdo_mysql, pdo_pgsql, pdo_sqlite, pgsql, sqlite, pdo_sqlsrv
          ini-values: date.timezone='UTC', session.save_path="${{ runner.temp }}"

      - name: Install Memcached
        uses: niden/actions-memcached@v7

      - name: Install dependencies
        run: |
          rm -rf vendor/
          rm -f composer.lock
          composer self-update -vvv
          composer install $COMPOSER_INSTALL_FLAGS

      - run: git diff

      - name: PHPUnit
        run: vendor/bin/phpunit --colors=always

  container_tests:
    strategy:
      matrix:
        container-runtime:
          - ubuntu20-php80-mysql80.rv0
          - ubuntu22-php81-mysql80.rv0
          - ubuntu22-php82-mysql80.rv0
      fail-fast: false

    name: ${{ matrix.container-runtime }}
    if: ${{ !contains(github.event.head_commit.message, 'skip ci') }}

    runs-on: ubuntu-22.04

    container: charescape/web:${{ matrix.container-runtime }}

    steps:
      - uses: actions/checkout@v3

      - run: sudo ln -s /usr/local/php/bin/php /usr/local/bin/php

      - run: /usr/local/mysql/support-files/mysql.server start

      - run: composer self-update -vvv

      - name: Install dependencies
        run: |
          rm -rf vendor/
          rm -f composer.lock
          composer install --no-interaction

      - name: PHPUnit
        run: vendor/bin/phpunit --group mysql --colors=always
