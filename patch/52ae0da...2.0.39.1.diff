diff --git a/.github/SECURITY.md b/.github/SECURITY.md
index f7138475964..405acca4e76 100644
--- a/.github/SECURITY.md
+++ b/.github/SECURITY.md
@@ -3,4 +3,4 @@
 Please use the [security issue form](https://www.yiiframework.com/security) to report to us any security issue you find in Yii.
 DO NOT use the issue tracker or discuss it in the public forum as it will cause more damage than help.
 
-Please note that as a non-commerial OpenSource project we are not able to pay bounties at the moment.
+Please note that as a non-commercial OpenSource project we are not able to pay bounties at the moment.
diff --git a/.github/workflows/build.yml b/.github/workflows/build.yml
index 0498970b496..a912dbfd1b5 100644
--- a/.github/workflows/build.yml
+++ b/.github/workflows/build.yml
@@ -3,7 +3,7 @@ name: build
 on: [push, pull_request]
 
 env:
-  DEFAULT_COMPOSER_FLAGS: "--prefer-dist --no-interaction --no-progress --optimize-autoloader"
+  DEFAULT_COMPOSER_FLAGS: "--prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi"
   PHPUNIT_EXCLUDE_GROUP: mssql,oci,wincache,xcache,zenddata,cubrid
 
 jobs:
@@ -56,7 +56,7 @@ jobs:
           php-version: ${{ matrix.php }}
           tools: pecl
           extensions: apc, curl, dom, imagick, intl, mbstring, mcrypt, memcached, mysql, pdo, pdo_mysql, pdo_pgsql, pdo_sqlite, pgsql, sqlite
-          ini-values: date.timezone='UTC'
+          ini-values: date.timezone='UTC', session.save_path="${{ runner.temp }}"
       - name: Install php-sqlsrv
         run: |
             curl -sSL https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add - >/dev/null 2>&1
@@ -86,16 +86,16 @@ jobs:
       - name: Install dependencies
         run: composer update $DEFAULT_COMPOSER_FLAGS
       - name: PHP Unit tests for PHP 7.1
-        run: vendor/bin/phpunit --verbose --coverage-clover=coverage.clover --exclude-group oci,wincache,xcache,zenddata,cubrid
+        run: vendor/bin/phpunit --verbose --coverage-clover=coverage.clover --exclude-group oci,wincache,xcache,zenddata,cubrid --colors=always
         if: matrix.php == '7.1'
-      - name: PHP Unit tests for PHP 7.2 - 7.4
-        run: vendor/bin/phpunit --verbose --exclude-group $PHPUNIT_EXCLUDE_GROUP
+      - name: PHP Unit tests for PHP >= 7.2
+        run: vendor/bin/phpunit --verbose --exclude-group $PHPUNIT_EXCLUDE_GROUP --colors=always
         env:
           PHPUNIT_EXCLUDE_GROUP: oci,wincache,xcache,zenddata,cubrid
-        if: matrix.php == '7.4' || matrix.php == '7.3' || matrix.php == '7.2'
-      - name: PHP Unit tests for PHP 5.4 - 7.0
-        run: vendor/bin/phpunit --verbose --exclude-group $PHPUNIT_EXCLUDE_GROUP
-        if: matrix.php == '7.0' || matrix.php == '5.6' || matrix.php == '5.5' || matrix.php == '5.4'
+        if: matrix.php >= '7.2'
+      - name: PHP Unit tests for PHP <= 7.0
+        run: vendor/bin/phpunit --verbose --exclude-group $PHPUNIT_EXCLUDE_GROUP --colors=always
+        if: matrix.php <= '7.0'
       - name: Code coverage
         run: |
           wget https://scrutinizer-ci.com/ocular.phar
@@ -114,6 +114,7 @@ jobs:
         uses: shivammathur/setup-php@v2
         with:
           php-version: 7.2
+          ini-values: session.save_path=${{ runner.temp }}
       - name: Get composer cache directory
         id: composer-cache
         run: echo "::set-output name=dir::$(composer config cache-files-dir)"
diff --git a/.github/workflows/ci-mysql.yml b/.github/workflows/ci-mysql.yml
index d7814d5a8b2..d2049645ef6 100644
--- a/.github/workflows/ci-mysql.yml
+++ b/.github/workflows/ci-mysql.yml
@@ -74,7 +74,7 @@ jobs:
             php${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-
 
       - name: Install dependencies with composer
-        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader
+        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi
 
       - name: Run mysql tests with phpunit
-        run: vendor/bin/phpunit --group mysql
+        run: vendor/bin/phpunit --group mysql --colors=always
diff --git a/.github/workflows/ci-pgsql.yml b/.github/workflows/ci-pgsql.yml
index 2d3818129ba..9325ac2e901 100644
--- a/.github/workflows/ci-pgsql.yml
+++ b/.github/workflows/ci-pgsql.yml
@@ -78,7 +78,7 @@ jobs:
             php${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-
 
       - name: Install dependencies with composer
-        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader
+        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi
 
       - name: Run pgsql tests with phpunit
-        run: vendor/bin/phpunit --group pgsql
+        run: vendor/bin/phpunit --group pgsql --colors=always
diff --git a/Dockerfile b/Dockerfile
index 77ffdfd5a50..86f3a3a85c7 100644
--- a/Dockerfile
+++ b/Dockerfile
@@ -4,6 +4,10 @@ FROM ${DOCKER_YII2_PHP_IMAGE}
 # Project source-code
 WORKDIR /project
 ADD composer.* /project/
+# Apply testing patches
+ADD tests/phpunit_mock_objects.patch /project/tests/phpunit_mock_objects.patch
+ADD tests/phpunit_getopt.patch /project/tests/phpunit_getopt.patch
+# Install packgaes
 RUN /usr/local/bin/composer install --prefer-dist
 ADD ./ /project
 ENV PATH /project/vendor/bin:${PATH}
diff --git a/build/controllers/DevController.php b/build/controllers/DevController.php
index 45b0557d202..8962cbecfae 100644
--- a/build/controllers/DevController.php
+++ b/build/controllers/DevController.php
@@ -51,6 +51,7 @@ class DevController extends Controller
         'apidoc' => 'git@github.com:yiisoft/yii2-apidoc.git',
         'authclient' => 'git@github.com:yiisoft/yii2-authclient.git',
         'bootstrap' => 'git@github.com:yiisoft/yii2-bootstrap.git',
+        'bootstrap4' => 'git@github.com:yiisoft/yii2-bootstrap4.git',
         'codeception' => 'git@github.com:yiisoft/yii2-codeception.git',
         'composer' => 'git@github.com:yiisoft/yii2-composer.git',
         'debug' => 'git@github.com:yiisoft/yii2-debug.git',
diff --git a/build/controllers/PhpDocController.php b/build/controllers/PhpDocController.php
index bcf2731ea08..1c7c660392e 100644
--- a/build/controllers/PhpDocController.php
+++ b/build/controllers/PhpDocController.php
@@ -620,9 +620,9 @@ protected function updateDocComment($doc, $properties)
         $propertyPosition = false;
         foreach ($lines as $i => $line) {
             $line = trim($line);
-            if (strncmp($line, '* @property ', 12) === 0) {
+            if (strncmp($line, '* @property', 11) === 0) {
                 $propertyPart = true;
-            } elseif ($propertyPart && $line == '*') {
+            } elseif ($propertyPart && $line === '*') {
                 $propertyPosition = $i;
                 $propertyPart = false;
             }
@@ -635,7 +635,7 @@ protected function updateDocComment($doc, $properties)
             }
         }
 
-        // if no properties or other tags where present add properties at the end
+        // if no properties or other tags were present add properties at the end
         if ($propertyPosition === false) {
             $propertyPosition = \count($lines) - 2;
         }
@@ -722,43 +722,45 @@ protected function generateClassPropertyDocs($fileName)
                 ];
             }
 
+            if (\count($props) === 0) {
+                continue;
+            }
+
             ksort($props);
 
-            if (\count($props) > 0) {
-                $phpdoc .= " *\n";
-                foreach ($props as $propName => &$prop) {
-                    $docline = ' * @';
-                    $docline .= 'property'; // Do not use property-read and property-write as few IDEs support complex syntax.
-                    $note = '';
-                    if (isset($prop['get'], $prop['set'])) {
-                        if ($prop['get']['type'] != $prop['set']['type']) {
-                            $note = ' Note that the type of this property differs in getter and setter.'
-                                  . ' See [[get' . ucfirst($propName) . '()]] and [[set' . ucfirst($propName) . '()]] for details.';
-                        }
-                    } elseif (isset($prop['get'])) {
-                        if (!$this->hasSetterInParents($className, $propName)) {
-                            $note = ' This property is read-only.';
-                            //$docline .= '-read';
-                        }
-                    } elseif (isset($prop['set'])) {
-                        if (!$this->hasGetterInParents($className, $propName)) {
-                            $note = ' This property is write-only.';
-                            //$docline .= '-write';
-                        }
-                    } else {
-                        continue;
+            $phpdoc .= " *\n";
+            foreach ($props as $propName => &$prop) {
+                $docLine = ' * @property';
+                $note = '';
+                if (isset($prop['get'], $prop['set'])) {
+                    if ($prop['get']['type'] != $prop['set']['type']) {
+                        $note = ' Note that the type of this property differs in getter and setter.'
+                                . ' See [[get' . ucfirst($propName) . '()]] '
+                                . ' and [[set' . ucfirst($propName) . '()]] for details.';
                     }
-                    $docline .= ' ' . $this->getPropParam($prop, 'type') . " $$propName ";
-                    $comment = explode("\n", $this->getPropParam($prop, 'comment') . $note);
-                    foreach ($comment as &$cline) {
-                        $cline = ltrim($cline, '* ');
+                } elseif (isset($prop['get'])) {
+                    if (!$this->hasSetterInParents($className, $propName)) {
+                        $note = ' This property is read-only.';
+                        $docLine .= '-read';
                     }
-                    $docline = wordwrap($docline . implode(' ', $comment), 110, "\n * ") . "\n";
-
-                    $phpdoc .= $docline;
+                } elseif (isset($prop['set'])) {
+                    if (!$this->hasGetterInParents($className, $propName)) {
+                        $note = ' This property is write-only.';
+                        $docLine .= '-write';
+                    }
+                } else {
+                    continue;
+                }
+                $docLine .= ' ' . $this->getPropParam($prop, 'type') . " $$propName ";
+                $comment = explode("\n", $this->getPropParam($prop, 'comment') . $note);
+                foreach ($comment as &$cline) {
+                    $cline = ltrim($cline, '* ');
                 }
-                $phpdoc .= " *\n";
+                $docLine = wordwrap($docLine . implode(' ', $comment), 110, "\n * ") . "\n";
+
+                $phpdoc .= $docLine;
             }
+            $phpdoc .= " *\n";
         }
 
         return [$className, $phpdoc];
diff --git a/composer.json b/composer.json
index fc86b22c8e5..ced9703ef4d 100644
--- a/composer.json
+++ b/composer.json
@@ -81,7 +81,7 @@
         "bower-asset/yii2-pjax": "~2.0.1"
     },
     "require-dev": {
-        "cweagans/composer-patches": "^1.6",
+        "cweagans/composer-patches": "^1.7",
         "phpunit/phpunit": "4.8.34",
         "cebe/indent": "~1.0.2",
         "friendsofphp/php-cs-fixer": "~2.2.3",
@@ -115,10 +115,11 @@
         "composer-exit-on-patch-failure": true,
         "patches": {
             "phpunit/phpunit-mock-objects": {
-                "Fix PHP 7 compatibility": "./tests/phpunit_mock_objects.patch"
+                "Fix PHP 7 and 8 compatibility": "https://yiisoft.github.io/phpunit-patches/phpunit_mock_objects.patch"
             },
             "phpunit/phpunit": {
-                "Fix PHP 7.2 compatibility": "./tests/phpunit_getopt.patch"
+                "Fix PHP 7 compatibility": "https://yiisoft.github.io/phpunit-patches/phpunit_php7.patch",
+                "Fix PHP 8 compatibility": "https://yiisoft.github.io/phpunit-patches/phpunit_php8.patch"
             }
         }
     }
diff --git a/composer.lock b/composer.lock
index baf1cf1c87d..654dae1084e 100644
--- a/composer.lock
+++ b/composer.lock
@@ -4,7 +4,7 @@
         "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies",
         "This file is @generated automatically"
     ],
-    "content-hash": "57627068914aee26c8205110ee14f928",
+    "content-hash": "6282c196c2380b0d30b7104eccef989a",
     "packages": [
         {
             "name": "bower-asset/inputmask",
@@ -29,16 +29,16 @@
         },
         {
             "name": "bower-asset/jquery",
-            "version": "3.4.1",
+            "version": "3.5.1",
             "source": {
                 "type": "git",
-                "url": "https://github.com/jquery/jquery-dist.git",
-                "reference": "15bc73803f76bc53b654b9fdbbbc096f56d7c03d"
+                "url": "git@github.com:jquery/jquery-dist.git",
+                "reference": "4c0e4becb8263bb5b3e6dadc448d8e7305ef8215"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/jquery/jquery-dist/zipball/15bc73803f76bc53b654b9fdbbbc096f56d7c03d",
-                "reference": "15bc73803f76bc53b654b9fdbbbc096f56d7c03d"
+                "url": "https://api.github.com/repos/jquery/jquery-dist/zipball/4c0e4becb8263bb5b3e6dadc448d8e7305ef8215",
+                "reference": "4c0e4becb8263bb5b3e6dadc448d8e7305ef8215"
             },
             "type": "bower-asset",
             "license": [
@@ -50,7 +50,7 @@
             "version": "v1.3.2",
             "source": {
                 "type": "git",
-                "url": "https://github.com/bestiejs/punycode.js.git",
+                "url": "git@github.com:bestiejs/punycode.js.git",
                 "reference": "38c8d3131a82567bfef18da09f7f4db68c84f8a3"
             },
             "dist": {
@@ -58,32 +58,20 @@
                 "url": "https://api.github.com/repos/bestiejs/punycode.js/zipball/38c8d3131a82567bfef18da09f7f4db68c84f8a3",
                 "reference": "38c8d3131a82567bfef18da09f7f4db68c84f8a3"
             },
-            "type": "bower-asset-library",
-            "extra": {
-                "bower-asset-main": "punycode.js",
-                "bower-asset-ignore": [
-                    "coverage",
-                    "tests",
-                    ".*",
-                    "component.json",
-                    "Gruntfile.js",
-                    "node_modules",
-                    "package.json"
-                ]
-            }
+            "type": "bower-asset"
         },
         {
             "name": "bower-asset/yii2-pjax",
-            "version": "2.0.7.1",
+            "version": "v2.0.7",
             "source": {
                 "type": "git",
                 "url": "https://github.com/yiisoft/jquery-pjax.git",
-                "reference": "aef7b953107264f00234902a3880eb50dafc48be"
+                "reference": "885fc8c2d36c93a801b6af0ee8ad55d79df97cb1"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/yiisoft/jquery-pjax/zipball/aef7b953107264f00234902a3880eb50dafc48be",
-                "reference": "aef7b953107264f00234902a3880eb50dafc48be"
+                "url": "https://api.github.com/repos/yiisoft/jquery-pjax/zipball/885fc8c2d36c93a801b6af0ee8ad55d79df97cb1",
+                "reference": "885fc8c2d36c93a801b6af0ee8ad55d79df97cb1"
             },
             "require": {
                 "bower-asset/jquery": ">=1.8"
@@ -151,20 +139,24 @@
                 "markdown",
                 "markdown-extra"
             ],
+            "support": {
+                "issues": "https://github.com/cebe/markdown/issues",
+                "source": "https://github.com/cebe/markdown"
+            },
             "time": "2018-03-26T11:24:36+00:00"
         },
         {
             "name": "ezyang/htmlpurifier",
-            "version": "v4.12.0",
+            "version": "v4.13.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/ezyang/htmlpurifier.git",
-                "reference": "a617e55bc62a87eec73bd456d146d134ad716f03"
+                "reference": "08e27c97e4c6ed02f37c5b2b20488046c8d90d75"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/ezyang/htmlpurifier/zipball/a617e55bc62a87eec73bd456d146d134ad716f03",
-                "reference": "a617e55bc62a87eec73bd456d146d134ad716f03",
+                "url": "https://api.github.com/repos/ezyang/htmlpurifier/zipball/08e27c97e4c6ed02f37c5b2b20488046c8d90d75",
+                "reference": "08e27c97e4c6ed02f37c5b2b20488046c8d90d75",
                 "shasum": ""
             },
             "require": {
@@ -180,6 +172,9 @@
                 },
                 "files": [
                     "library/HTMLPurifier.composer.php"
+                ],
+                "exclude-from-classmap": [
+                    "/library/HTMLPurifier/Language/"
                 ]
             },
             "notification-url": "https://packagist.org/downloads/",
@@ -198,27 +193,31 @@
             "keywords": [
                 "html"
             ],
-            "time": "2019-10-28T03:44:26+00:00"
+            "support": {
+                "issues": "https://github.com/ezyang/htmlpurifier/issues",
+                "source": "https://github.com/ezyang/htmlpurifier/tree/master"
+            },
+            "time": "2020-06-29T00:56:53+00:00"
         },
         {
             "name": "yiisoft/yii2-composer",
-            "version": "2.0.8",
+            "version": "2.0.10",
             "source": {
                 "type": "git",
                 "url": "https://github.com/yiisoft/yii2-composer.git",
-                "reference": "5c7ca9836cf80b34db265332a7f2f8438eb469b9"
+                "reference": "94bb3f66e779e2774f8776d6e1bdeab402940510"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/yiisoft/yii2-composer/zipball/5c7ca9836cf80b34db265332a7f2f8438eb469b9",
-                "reference": "5c7ca9836cf80b34db265332a7f2f8438eb469b9",
+                "url": "https://api.github.com/repos/yiisoft/yii2-composer/zipball/94bb3f66e779e2774f8776d6e1bdeab402940510",
+                "reference": "94bb3f66e779e2774f8776d6e1bdeab402940510",
                 "shasum": ""
             },
             "require": {
-                "composer-plugin-api": "^1.0"
+                "composer-plugin-api": "^1.0 | ^2.0"
             },
             "require-dev": {
-                "composer/composer": "^1.0",
+                "composer/composer": "^1.0 | ^2.0@dev",
                 "phpunit/phpunit": "<7"
             },
             "type": "composer-plugin",
@@ -253,7 +252,28 @@
                 "extension installer",
                 "yii2"
             ],
-            "time": "2019-07-16T13:22:30+00:00"
+            "support": {
+                "forum": "http://www.yiiframework.com/forum/",
+                "irc": "irc://irc.freenode.net/yii",
+                "issues": "https://github.com/yiisoft/yii2-composer/issues",
+                "source": "https://github.com/yiisoft/yii2-composer",
+                "wiki": "http://www.yiiframework.com/wiki/"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/yiisoft",
+                    "type": "github"
+                },
+                {
+                    "url": "https://opencollective.com/yiisoft",
+                    "type": "open_collective"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/yiisoft/yii2-composer",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2020-06-24T00:04:01+00:00"
         }
     ],
     "packages-dev": [
@@ -288,28 +308,31 @@
                 }
             ],
             "description": "a small tool to convert text file indentation",
+            "support": {
+                "issues": "https://github.com/cebe/indent/issues",
+                "source": "https://github.com/cebe/indent/tree/master"
+            },
             "time": "2014-05-23T14:40:08+00:00"
         },
         {
             "name": "composer/semver",
-            "version": "1.5.0",
+            "version": "1.7.1",
             "source": {
                 "type": "git",
                 "url": "https://github.com/composer/semver.git",
-                "reference": "46d9139568ccb8d9e7cdd4539cab7347568a5e2e"
+                "reference": "38276325bd896f90dfcfe30029aa5db40df387a7"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/composer/semver/zipball/46d9139568ccb8d9e7cdd4539cab7347568a5e2e",
-                "reference": "46d9139568ccb8d9e7cdd4539cab7347568a5e2e",
+                "url": "https://api.github.com/repos/composer/semver/zipball/38276325bd896f90dfcfe30029aa5db40df387a7",
+                "reference": "38276325bd896f90dfcfe30029aa5db40df387a7",
                 "shasum": ""
             },
             "require": {
                 "php": "^5.3.2 || ^7.0"
             },
             "require-dev": {
-                "phpunit/phpunit": "^4.5 || ^5.0.5",
-                "phpunit/phpunit-mock-objects": "2.3.0 || ^3.0"
+                "phpunit/phpunit": "^4.5 || ^5.0.5"
             },
             "type": "library",
             "extra": {
@@ -350,20 +373,39 @@
                 "validation",
                 "versioning"
             ],
-            "time": "2019-03-19T17:25:45+00:00"
+            "support": {
+                "irc": "irc://irc.freenode.org/composer",
+                "issues": "https://github.com/composer/semver/issues",
+                "source": "https://github.com/composer/semver/tree/1.7.1"
+            },
+            "funding": [
+                {
+                    "url": "https://packagist.com",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/composer",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/composer/composer",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2020-09-27T13:13:07+00:00"
         },
         {
             "name": "composer/xdebug-handler",
-            "version": "1.4.0",
+            "version": "1.4.4",
             "source": {
                 "type": "git",
                 "url": "https://github.com/composer/xdebug-handler.git",
-                "reference": "cbe23383749496fe0f373345208b79568e4bc248"
+                "reference": "6e076a124f7ee146f2487554a94b6a19a74887ba"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/composer/xdebug-handler/zipball/cbe23383749496fe0f373345208b79568e4bc248",
-                "reference": "cbe23383749496fe0f373345208b79568e4bc248",
+                "url": "https://api.github.com/repos/composer/xdebug-handler/zipball/6e076a124f7ee146f2487554a94b6a19a74887ba",
+                "reference": "6e076a124f7ee146f2487554a94b6a19a74887ba",
                 "shasum": ""
             },
             "require": {
@@ -394,28 +436,47 @@
                 "Xdebug",
                 "performance"
             ],
-            "time": "2019-11-06T16:40:04+00:00"
+            "support": {
+                "irc": "irc://irc.freenode.org/composer",
+                "issues": "https://github.com/composer/xdebug-handler/issues",
+                "source": "https://github.com/composer/xdebug-handler/tree/1.4.4"
+            },
+            "funding": [
+                {
+                    "url": "https://packagist.com",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/composer",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/composer/composer",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2020-10-24T12:39:10+00:00"
         },
         {
             "name": "cweagans/composer-patches",
-            "version": "1.6.7",
+            "version": "1.7.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/cweagans/composer-patches.git",
-                "reference": "2e6f72a2ad8d59cd7e2b729f218bf42adb14f590"
+                "reference": "ae02121445ad75f4eaff800cc532b5e6233e2ddf"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/cweagans/composer-patches/zipball/2e6f72a2ad8d59cd7e2b729f218bf42adb14f590",
-                "reference": "2e6f72a2ad8d59cd7e2b729f218bf42adb14f590",
+                "url": "https://api.github.com/repos/cweagans/composer-patches/zipball/ae02121445ad75f4eaff800cc532b5e6233e2ddf",
+                "reference": "ae02121445ad75f4eaff800cc532b5e6233e2ddf",
                 "shasum": ""
             },
             "require": {
-                "composer-plugin-api": "^1.0",
+                "composer-plugin-api": "^1.0 || ^2.0",
                 "php": ">=5.3.0"
             },
             "require-dev": {
-                "composer/composer": "~1.0",
+                "composer/composer": "~1.0 || ~2.0",
                 "phpunit/phpunit": "~4.6"
             },
             "type": "composer-plugin",
@@ -438,7 +499,11 @@
                 }
             ],
             "description": "Provides a way to patch Composer packages.",
-            "time": "2019-08-29T20:11:49+00:00"
+            "support": {
+                "issues": "https://github.com/cweagans/composer-patches/issues",
+                "source": "https://github.com/cweagans/composer-patches/tree/1.7.0"
+            },
+            "time": "2020-09-30T17:56:20+00:00"
         },
         {
             "name": "doctrine/annotations",
@@ -506,6 +571,9 @@
                 "docblock",
                 "parser"
             ],
+            "support": {
+                "source": "https://github.com/doctrine/annotations/tree/master"
+            },
             "time": "2015-08-31T12:32:49+00:00"
         },
         {
@@ -560,6 +628,10 @@
                 "constructor",
                 "instantiate"
             ],
+            "support": {
+                "issues": "https://github.com/doctrine/instantiator/issues",
+                "source": "https://github.com/doctrine/instantiator/tree/master"
+            },
             "time": "2015-06-14T21:17:01+00:00"
         },
         {
@@ -620,6 +692,10 @@
                 "parser",
                 "php"
             ],
+            "support": {
+                "issues": "https://github.com/doctrine/lexer/issues",
+                "source": "https://github.com/doctrine/lexer/tree/1.0.2"
+            },
             "time": "2019-06-08T11:03:04+00:00"
         },
         {
@@ -708,6 +784,10 @@
                 }
             ],
             "description": "A tool to automatically fix PHP code style",
+            "support": {
+                "issues": "https://github.com/FriendsOfPHP/PHP-CS-Fixer/issues",
+                "source": "https://github.com/FriendsOfPHP/PHP-CS-Fixer/tree/2.2"
+            },
             "time": "2018-06-02T17:26:04+00:00"
         },
         {
@@ -750,6 +830,10 @@
                 "hashing",
                 "password"
             ],
+            "support": {
+                "issues": "https://github.com/ircmaxell/password_compat/issues",
+                "source": "https://github.com/ircmaxell/password_compat/tree/v1.0"
+            },
             "time": "2014-11-20T16:49:30+00:00"
         },
         {
@@ -800,20 +884,24 @@
                 "profile",
                 "slow"
             ],
+            "support": {
+                "issues": "https://github.com/johnkary/phpunit-speedtrap/issues",
+                "source": "https://github.com/johnkary/phpunit-speedtrap/tree/master"
+            },
             "time": "2015-09-13T19:01:00+00:00"
         },
         {
             "name": "paragonie/random_compat",
-            "version": "v2.0.18",
+            "version": "v2.0.19",
             "source": {
                 "type": "git",
                 "url": "https://github.com/paragonie/random_compat.git",
-                "reference": "0a58ef6e3146256cc3dc7cc393927bcc7d1b72db"
+                "reference": "446fc9faa5c2a9ddf65eb7121c0af7e857295241"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/paragonie/random_compat/zipball/0a58ef6e3146256cc3dc7cc393927bcc7d1b72db",
-                "reference": "0a58ef6e3146256cc3dc7cc393927bcc7d1b72db",
+                "url": "https://api.github.com/repos/paragonie/random_compat/zipball/446fc9faa5c2a9ddf65eb7121c0af7e857295241",
+                "reference": "446fc9faa5c2a9ddf65eb7121c0af7e857295241",
                 "shasum": ""
             },
             "require": {
@@ -849,7 +937,12 @@
                 "pseudorandom",
                 "random"
             ],
-            "time": "2019-01-03T20:59:08+00:00"
+            "support": {
+                "email": "info@paragonie.com",
+                "issues": "https://github.com/paragonie/random_compat/issues",
+                "source": "https://github.com/paragonie/random_compat"
+            },
+            "time": "2020-10-15T10:06:57+00:00"
         },
         {
             "name": "phpdocumentor/reflection-docblock",
@@ -898,37 +991,41 @@
                     "email": "mike.vanriel@naenius.com"
                 }
             ],
+            "support": {
+                "issues": "https://github.com/phpDocumentor/ReflectionDocBlock/issues",
+                "source": "https://github.com/phpDocumentor/ReflectionDocBlock/tree/release/2.x"
+            },
             "time": "2016-01-25T08:17:30+00:00"
         },
         {
             "name": "phpspec/prophecy",
-            "version": "1.9.0",
+            "version": "v1.10.3",
             "source": {
                 "type": "git",
                 "url": "https://github.com/phpspec/prophecy.git",
-                "reference": "f6811d96d97bdf400077a0cc100ae56aa32b9203"
+                "reference": "451c3cd1418cf640de218914901e51b064abb093"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/phpspec/prophecy/zipball/f6811d96d97bdf400077a0cc100ae56aa32b9203",
-                "reference": "f6811d96d97bdf400077a0cc100ae56aa32b9203",
+                "url": "https://api.github.com/repos/phpspec/prophecy/zipball/451c3cd1418cf640de218914901e51b064abb093",
+                "reference": "451c3cd1418cf640de218914901e51b064abb093",
                 "shasum": ""
             },
             "require": {
                 "doctrine/instantiator": "^1.0.2",
                 "php": "^5.3|^7.0",
                 "phpdocumentor/reflection-docblock": "^2.0|^3.0.2|^4.0|^5.0",
-                "sebastian/comparator": "^1.1|^2.0|^3.0",
-                "sebastian/recursion-context": "^1.0|^2.0|^3.0"
+                "sebastian/comparator": "^1.2.3|^2.0|^3.0|^4.0",
+                "sebastian/recursion-context": "^1.0|^2.0|^3.0|^4.0"
             },
             "require-dev": {
-                "phpspec/phpspec": "^2.5|^3.2",
+                "phpspec/phpspec": "^2.5 || ^3.2",
                 "phpunit/phpunit": "^4.8.35 || ^5.7 || ^6.5 || ^7.1"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.8.x-dev"
+                    "dev-master": "1.10.x-dev"
                 }
             },
             "autoload": {
@@ -961,7 +1058,11 @@
                 "spy",
                 "stub"
             ],
-            "time": "2019-10-03T11:07:50+00:00"
+            "support": {
+                "issues": "https://github.com/phpspec/prophecy/issues",
+                "source": "https://github.com/phpspec/prophecy/tree/v1.10.3"
+            },
+            "time": "2020-03-05T15:02:03+00:00"
         },
         {
             "name": "phpunit/php-code-coverage",
@@ -1023,6 +1124,11 @@
                 "testing",
                 "xunit"
             ],
+            "support": {
+                "irc": "irc://irc.freenode.net/phpunit",
+                "issues": "https://github.com/sebastianbergmann/php-code-coverage/issues",
+                "source": "https://github.com/sebastianbergmann/php-code-coverage/tree/2.2"
+            },
             "time": "2015-10-06T15:47:00+00:00"
         },
         {
@@ -1070,6 +1176,11 @@
                 "filesystem",
                 "iterator"
             ],
+            "support": {
+                "irc": "irc://irc.freenode.net/phpunit",
+                "issues": "https://github.com/sebastianbergmann/php-file-iterator/issues",
+                "source": "https://github.com/sebastianbergmann/php-file-iterator/tree/1.4.5"
+            },
             "time": "2017-11-27T13:52:08+00:00"
         },
         {
@@ -1111,6 +1222,10 @@
             "keywords": [
                 "template"
             ],
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/php-text-template/issues",
+                "source": "https://github.com/sebastianbergmann/php-text-template/tree/1.2.1"
+            },
             "time": "2015-06-21T13:50:34+00:00"
         },
         {
@@ -1160,6 +1275,10 @@
             "keywords": [
                 "timer"
             ],
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/php-timer/issues",
+                "source": "https://github.com/sebastianbergmann/php-timer/tree/master"
+            },
             "time": "2017-02-26T11:10:40+00:00"
         },
         {
@@ -1209,6 +1328,11 @@
             "keywords": [
                 "tokenizer"
             ],
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/php-token-stream/issues",
+                "source": "https://github.com/sebastianbergmann/php-token-stream/tree/1.4"
+            },
+            "abandoned": true,
             "time": "2017-12-04T08:55:13+00:00"
         },
         {
@@ -1256,9 +1380,6 @@
             "extra": {
                 "branch-alias": {
                     "dev-master": "4.8.x-dev"
-                },
-                "patches_applied": {
-                    "Fix PHP 7.2 compatibility": "./tests/phpunit_getopt.patch"
                 }
             },
             "autoload": {
@@ -1284,6 +1405,10 @@
                 "testing",
                 "xunit"
             ],
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/phpunit/issues",
+                "source": "https://github.com/sebastianbergmann/phpunit/tree/4.8.34"
+            },
             "time": "2017-01-26T16:15:36+00:00"
         },
         {
@@ -1316,9 +1441,6 @@
             "extra": {
                 "branch-alias": {
                     "dev-master": "2.3.x-dev"
-                },
-                "patches_applied": {
-                    "Fix PHP 7 compatibility": "./tests/phpunit_mock_objects.patch"
                 }
             },
             "autoload": {
@@ -1343,21 +1465,26 @@
                 "mock",
                 "xunit"
             ],
+            "support": {
+                "irc": "irc://irc.freenode.net/phpunit",
+                "issues": "https://github.com/sebastianbergmann/phpunit-mock-objects/issues",
+                "source": "https://github.com/sebastianbergmann/phpunit-mock-objects/tree/2.3"
+            },
             "abandoned": true,
             "time": "2015-10-02T06:51:40+00:00"
         },
         {
             "name": "psr/log",
-            "version": "1.1.2",
+            "version": "1.1.3",
             "source": {
                 "type": "git",
                 "url": "https://github.com/php-fig/log.git",
-                "reference": "446d54b4cb6bf489fc9d75f55843658e6f25d801"
+                "reference": "0f73288fd15629204f9d42b7055f72dacbe811fc"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/php-fig/log/zipball/446d54b4cb6bf489fc9d75f55843658e6f25d801",
-                "reference": "446d54b4cb6bf489fc9d75f55843658e6f25d801",
+                "url": "https://api.github.com/repos/php-fig/log/zipball/0f73288fd15629204f9d42b7055f72dacbe811fc",
+                "reference": "0f73288fd15629204f9d42b7055f72dacbe811fc",
                 "shasum": ""
             },
             "require": {
@@ -1391,7 +1518,10 @@
                 "psr",
                 "psr-3"
             ],
-            "time": "2019-11-01T11:05:21+00:00"
+            "support": {
+                "source": "https://github.com/php-fig/log/tree/1.1.3"
+            },
+            "time": "2020-03-23T09:12:05+00:00"
         },
         {
             "name": "sebastian/comparator",
@@ -1455,6 +1585,10 @@
                 "compare",
                 "equality"
             ],
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/comparator/issues",
+                "source": "https://github.com/sebastianbergmann/comparator/tree/1.2"
+            },
             "time": "2017-01-29T09:50:25+00:00"
         },
         {
@@ -1507,6 +1641,10 @@
             "keywords": [
                 "diff"
             ],
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/diff/issues",
+                "source": "https://github.com/sebastianbergmann/diff/tree/1.4"
+            },
             "time": "2017-05-22T07:24:03+00:00"
         },
         {
@@ -1557,6 +1695,10 @@
                 "environment",
                 "hhvm"
             ],
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/environment/issues",
+                "source": "https://github.com/sebastianbergmann/environment/tree/1.3"
+            },
             "time": "2016-08-18T05:49:44+00:00"
         },
         {
@@ -1624,6 +1766,10 @@
                 "export",
                 "exporter"
             ],
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/exporter/issues",
+                "source": "https://github.com/sebastianbergmann/exporter/tree/master"
+            },
             "time": "2016-06-17T09:04:28+00:00"
         },
         {
@@ -1675,6 +1821,10 @@
             "keywords": [
                 "global state"
             ],
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/global-state/issues",
+                "source": "https://github.com/sebastianbergmann/global-state/tree/1.1.1"
+            },
             "time": "2015-10-12T03:26:01+00:00"
         },
         {
@@ -1728,6 +1878,10 @@
             ],
             "description": "Provides functionality to recursively process PHP variables",
             "homepage": "http://www.github.com/sebastianbergmann/recursion-context",
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/recursion-context/issues",
+                "source": "https://github.com/sebastianbergmann/recursion-context/tree/master"
+            },
             "time": "2016-10-03T07:41:43+00:00"
         },
         {
@@ -1763,6 +1917,10 @@
             ],
             "description": "Library that helps with managing the version number of Git-hosted PHP projects",
             "homepage": "https://github.com/sebastianbergmann/version",
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/version/issues",
+                "source": "https://github.com/sebastianbergmann/version/tree/1.0.6"
+            },
             "time": "2015-06-21T13:59:46+00:00"
         },
         {
@@ -1824,6 +1982,9 @@
             ],
             "description": "Symfony Console Component",
             "homepage": "https://symfony.com",
+            "support": {
+                "source": "https://github.com/symfony/console/tree/v2.8.52"
+            },
             "time": "2018-11-20T15:55:20+00:00"
         },
         {
@@ -1881,6 +2042,9 @@
             ],
             "description": "Symfony Debug Component",
             "homepage": "https://symfony.com",
+            "support": {
+                "source": "https://github.com/symfony/debug/tree/v2.8.50"
+            },
             "time": "2018-11-11T11:18:13+00:00"
         },
         {
@@ -1941,6 +2105,9 @@
             ],
             "description": "Symfony EventDispatcher Component",
             "homepage": "https://symfony.com",
+            "support": {
+                "source": "https://github.com/symfony/event-dispatcher/tree/v2.8.50"
+            },
             "time": "2018-11-21T14:20:20+00:00"
         },
         {
@@ -1991,6 +2158,9 @@
             ],
             "description": "Symfony Filesystem Component",
             "homepage": "https://symfony.com",
+            "support": {
+                "source": "https://github.com/symfony/filesystem/tree/v2.8.52"
+            },
             "time": "2018-11-11T11:18:13+00:00"
         },
         {
@@ -2040,6 +2210,9 @@
             ],
             "description": "Symfony Finder Component",
             "homepage": "https://symfony.com",
+            "support": {
+                "source": "https://github.com/symfony/finder/tree/v2.8.50"
+            },
             "time": "2018-11-11T11:18:13+00:00"
         },
         {
@@ -2094,20 +2267,23 @@
                 "configuration",
                 "options"
             ],
+            "support": {
+                "source": "https://github.com/symfony/options-resolver/tree/v2.8.50"
+            },
             "time": "2018-11-11T11:18:13+00:00"
         },
         {
             "name": "symfony/polyfill-ctype",
-            "version": "v1.13.1",
+            "version": "v1.19.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/polyfill-ctype.git",
-                "reference": "f8f0b461be3385e56d6de3dbb5a0df24c0c275e3"
+                "reference": "aed596913b70fae57be53d86faa2e9ef85a2297b"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/polyfill-ctype/zipball/f8f0b461be3385e56d6de3dbb5a0df24c0c275e3",
-                "reference": "f8f0b461be3385e56d6de3dbb5a0df24c0c275e3",
+                "url": "https://api.github.com/repos/symfony/polyfill-ctype/zipball/aed596913b70fae57be53d86faa2e9ef85a2297b",
+                "reference": "aed596913b70fae57be53d86faa2e9ef85a2297b",
                 "shasum": ""
             },
             "require": {
@@ -2119,7 +2295,11 @@
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.13-dev"
+                    "dev-main": "1.19-dev"
+                },
+                "thanks": {
+                    "name": "symfony/polyfill",
+                    "url": "https://github.com/symfony/polyfill"
                 }
             },
             "autoload": {
@@ -2152,20 +2332,37 @@
                 "polyfill",
                 "portable"
             ],
-            "time": "2019-11-27T13:56:44+00:00"
+            "support": {
+                "source": "https://github.com/symfony/polyfill-ctype/tree/v1.19.0"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2020-10-23T09:01:57+00:00"
         },
         {
             "name": "symfony/polyfill-mbstring",
-            "version": "v1.13.1",
+            "version": "v1.19.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/polyfill-mbstring.git",
-                "reference": "7b4aab9743c30be783b73de055d24a39cf4b954f"
+                "reference": "b5f7b932ee6fa802fc792eabd77c4c88084517ce"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/polyfill-mbstring/zipball/7b4aab9743c30be783b73de055d24a39cf4b954f",
-                "reference": "7b4aab9743c30be783b73de055d24a39cf4b954f",
+                "url": "https://api.github.com/repos/symfony/polyfill-mbstring/zipball/b5f7b932ee6fa802fc792eabd77c4c88084517ce",
+                "reference": "b5f7b932ee6fa802fc792eabd77c4c88084517ce",
                 "shasum": ""
             },
             "require": {
@@ -2177,7 +2374,11 @@
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.13-dev"
+                    "dev-main": "1.19-dev"
+                },
+                "thanks": {
+                    "name": "symfony/polyfill",
+                    "url": "https://github.com/symfony/polyfill"
                 }
             },
             "autoload": {
@@ -2211,20 +2412,37 @@
                 "portable",
                 "shim"
             ],
-            "time": "2019-11-27T14:18:11+00:00"
+            "support": {
+                "source": "https://github.com/symfony/polyfill-mbstring/tree/v1.19.0"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2020-10-23T09:01:57+00:00"
         },
         {
             "name": "symfony/polyfill-php54",
-            "version": "v1.13.1",
+            "version": "v1.19.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/polyfill-php54.git",
-                "reference": "dd1618047426412036e98d159940d58a81fc392c"
+                "reference": "c248bab30dad46a5f3917e7d92907e148bdc50c6"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/polyfill-php54/zipball/dd1618047426412036e98d159940d58a81fc392c",
-                "reference": "dd1618047426412036e98d159940d58a81fc392c",
+                "url": "https://api.github.com/repos/symfony/polyfill-php54/zipball/c248bab30dad46a5f3917e7d92907e148bdc50c6",
+                "reference": "c248bab30dad46a5f3917e7d92907e148bdc50c6",
                 "shasum": ""
             },
             "require": {
@@ -2233,7 +2451,11 @@
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.13-dev"
+                    "dev-main": "1.19-dev"
+                },
+                "thanks": {
+                    "name": "symfony/polyfill",
+                    "url": "https://github.com/symfony/polyfill"
                 }
             },
             "autoload": {
@@ -2269,20 +2491,37 @@
                 "portable",
                 "shim"
             ],
-            "time": "2019-11-27T13:56:44+00:00"
+            "support": {
+                "source": "https://github.com/symfony/polyfill-php54/tree/v1.19.0"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2020-10-23T09:01:57+00:00"
         },
         {
             "name": "symfony/polyfill-php55",
-            "version": "v1.13.1",
+            "version": "v1.19.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/polyfill-php55.git",
-                "reference": "b0d838f225725e2951af1aafc784d2e5ea7b656e"
+                "reference": "248a5c9877b126493abb661e4fb47792e418035b"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/polyfill-php55/zipball/b0d838f225725e2951af1aafc784d2e5ea7b656e",
-                "reference": "b0d838f225725e2951af1aafc784d2e5ea7b656e",
+                "url": "https://api.github.com/repos/symfony/polyfill-php55/zipball/248a5c9877b126493abb661e4fb47792e418035b",
+                "reference": "248a5c9877b126493abb661e4fb47792e418035b",
                 "shasum": ""
             },
             "require": {
@@ -2292,7 +2531,11 @@
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.13-dev"
+                    "dev-main": "1.19-dev"
+                },
+                "thanks": {
+                    "name": "symfony/polyfill",
+                    "url": "https://github.com/symfony/polyfill"
                 }
             },
             "autoload": {
@@ -2325,20 +2568,37 @@
                 "portable",
                 "shim"
             ],
-            "time": "2019-11-27T13:56:44+00:00"
+            "support": {
+                "source": "https://github.com/symfony/polyfill-php55/tree/v1.19.0"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2020-10-23T09:01:57+00:00"
         },
         {
             "name": "symfony/polyfill-php70",
-            "version": "v1.13.1",
+            "version": "v1.19.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/polyfill-php70.git",
-                "reference": "af23c7bb26a73b850840823662dda371484926c4"
+                "reference": "3fe414077251a81a1b15b1c709faf5c2fbae3d4e"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/polyfill-php70/zipball/af23c7bb26a73b850840823662dda371484926c4",
-                "reference": "af23c7bb26a73b850840823662dda371484926c4",
+                "url": "https://api.github.com/repos/symfony/polyfill-php70/zipball/3fe414077251a81a1b15b1c709faf5c2fbae3d4e",
+                "reference": "3fe414077251a81a1b15b1c709faf5c2fbae3d4e",
                 "shasum": ""
             },
             "require": {
@@ -2348,7 +2608,11 @@
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.13-dev"
+                    "dev-main": "1.19-dev"
+                },
+                "thanks": {
+                    "name": "symfony/polyfill",
+                    "url": "https://github.com/symfony/polyfill"
                 }
             },
             "autoload": {
@@ -2384,20 +2648,37 @@
                 "portable",
                 "shim"
             ],
-            "time": "2019-11-27T13:56:44+00:00"
+            "support": {
+                "source": "https://github.com/symfony/polyfill-php70/tree/v1.19.0"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2020-10-23T09:01:57+00:00"
         },
         {
             "name": "symfony/polyfill-php72",
-            "version": "v1.13.1",
+            "version": "v1.19.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/polyfill-php72.git",
-                "reference": "66fea50f6cb37a35eea048d75a7d99a45b586038"
+                "reference": "beecef6b463b06954638f02378f52496cb84bacc"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/polyfill-php72/zipball/66fea50f6cb37a35eea048d75a7d99a45b586038",
-                "reference": "66fea50f6cb37a35eea048d75a7d99a45b586038",
+                "url": "https://api.github.com/repos/symfony/polyfill-php72/zipball/beecef6b463b06954638f02378f52496cb84bacc",
+                "reference": "beecef6b463b06954638f02378f52496cb84bacc",
                 "shasum": ""
             },
             "require": {
@@ -2406,7 +2687,11 @@
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.13-dev"
+                    "dev-main": "1.19-dev"
+                },
+                "thanks": {
+                    "name": "symfony/polyfill",
+                    "url": "https://github.com/symfony/polyfill"
                 }
             },
             "autoload": {
@@ -2439,7 +2724,24 @@
                 "portable",
                 "shim"
             ],
-            "time": "2019-11-27T13:56:44+00:00"
+            "support": {
+                "source": "https://github.com/symfony/polyfill-php72/tree/v1.19.0"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2020-10-23T09:01:57+00:00"
         },
         {
             "name": "symfony/process",
@@ -2488,6 +2790,9 @@
             ],
             "description": "Symfony Process Component",
             "homepage": "https://symfony.com",
+            "support": {
+                "source": "https://github.com/symfony/process/tree/v2.8.50"
+            },
             "time": "2018-11-11T11:18:13+00:00"
         },
         {
@@ -2537,6 +2842,9 @@
             ],
             "description": "Symfony Stopwatch Component",
             "homepage": "https://symfony.com",
+            "support": {
+                "source": "https://github.com/symfony/stopwatch/tree/v2.8.52"
+            },
             "time": "2018-11-11T11:18:13+00:00"
         },
         {
@@ -2587,6 +2895,9 @@
             ],
             "description": "Symfony Yaml Component",
             "homepage": "https://symfony.com",
+            "support": {
+                "source": "https://github.com/symfony/yaml/tree/v2.8.52"
+            },
             "time": "2018-11-11T11:18:13+00:00"
         }
     ],
@@ -2606,5 +2917,6 @@
     "platform-dev": [],
     "platform-overrides": {
         "php": "5.4"
-    }
+    },
+    "plugin-api-version": "2.0.0"
 }
diff --git a/docs/guide-fr/runtime-requests.md b/docs/guide-fr/runtime-requests.md
index 03315cdc8fe..e2bcdc726a9 100644
--- a/docs/guide-fr/runtime-requests.md
+++ b/docs/guide-fr/runtime-requests.md
@@ -93,7 +93,7 @@ et avant le nom du script d'entrée.
 
 
 
-## Enntêtes HTTP  <span id="http-headers"></span> 
+## Entêtes HTTP  <span id="http-headers"></span> 
 
 Vous pouvez obtenir les entêtes HTTP via la [[yii\web\HeaderCollection|collection d'entêtes]] qui est retournée par la propriété [[yii\web\Request::headers]]. Par exemple :
 
diff --git a/docs/guide-ru/caching-data.md b/docs/guide-ru/caching-data.md
index 4c8de9080ea..1dab06a2b80 100644
--- a/docs/guide-ru/caching-data.md
+++ b/docs/guide-ru/caching-data.md
@@ -32,7 +32,7 @@ $data = $cache->getOrSet($key, function () {
 ```
 
 Если в кэше есть данные по ключу `$key`, они будут сразу возвращены. 
-Иначе, будет вызвана переданная анонимная функция, вычисляющаяя значение, которое будет сохранено в кэш и возвращено
+Иначе, будет вызвана переданная анонимная функция, вычисляющая значение, которое будет сохранено в кэш и возвращено
 из метода.
 
 В случае, когда анонимной функции требуются данные из внешней области видимости, можно передать их с помощью
diff --git a/docs/guide-ru/caching-fragment.md b/docs/guide-ru/caching-fragment.md
index 9e263fa5b9d..09c43ad8013 100644
--- a/docs/guide-ru/caching-fragment.md
+++ b/docs/guide-ru/caching-fragment.md
@@ -17,9 +17,9 @@ if ($this->beginCache($id)) {
 Таким образом заключите то, что вы хотите закэшировать между вызовом [[yii\base\View::beginCache()|beginCache()]] и
 [[yii\base\View::endCache()|endCache()]]. Если содержимое будет найдено в кэше, [[yii\base\View::beginCache()|beginCache()]]
 отобразит закэшированное содержимое и вернёт `false`, минуя генерацию содержимого.
-В противном случае, будет выполнен код генерации контента и когда будет вызван [[yii\base\View::endCache()|endCache()]], то сгенерированное содержимое будет записано и сохранено в кэше.
+В противном случае будет выполнен код генерации контента и когда будет вызван [[yii\base\View::endCache()|endCache()]], то сгенерированное содержимое будет записано и сохранено в кэше.
 
-Также как и [кэширование данных](caching-data.md), для кэширования фрагментов требуется уникальный идентификатор для определения кэшируемого фрагмента.
+Так же как и [кэширование данных](caching-data.md), для кэширования фрагментов требуется уникальный идентификатор для определения кэшируемого фрагмента.
 
 
 ## Параметры кэширования <span id="caching-options"></span>
@@ -45,7 +45,7 @@ if ($this->beginCache($id, ['duration' => 3600])) {
 
 ### Зависимости <span id="dependencies"></span>
 
-Также как и [кэширование данных](caching-data.md#cache-dependencies), кэшируемое содержимое фрагмента тоже может иметь зависимости. Например, отображение содержимого сообщения зависит от того, изменено или нет это сообщение.
+Так же как и [кэширование данных](caching-data.md#cache-dependencies), кэшируемое содержимое фрагмента тоже может иметь зависимости. Например, отображение содержимого сообщения зависит от того, изменено или нет это сообщение.
 
 Для определения зависимости мы устанавливаем параметр [[yii\widgets\FragmentCache::dependency|dependency]], который может быть либо объектом [[yii\caching\Dependency]], либо массивом настроек, который может быть использован для создания объекта [[yii\caching\Dependency]]. Следующий код определяет содержимое фрагмента, зависящее от изменения значения столбца `updated_at`:
 
diff --git a/docs/guide-ru/caching-http.md b/docs/guide-ru/caching-http.md
index 20e9973e8be..d0ae15a2d3a 100644
--- a/docs/guide-ru/caching-http.md
+++ b/docs/guide-ru/caching-http.md
@@ -12,7 +12,7 @@ HTTP кэширование
 
 ## Заголовок `Last-Modified` <span id="last-modified"></span>
 
-Заголовок `Last-Modified` использует временную метку timestamp, чтобы показать была ли страница изменена после того, как клиент закэшировал её.
+Заголовок `Last-Modified` использует временную метку timestamp, чтобы показать, была ли страница изменена после того, как клиент закэшировал её.
 
 Вы можете настроить свойство [[yii\filters\HttpCache::lastModified]], чтобы включить отправку заголовка `Last-Modified`. Свойство должно содержать PHP-функцию, возвращающую временную метку UNIX timestamp времени последнего изменения страницы. Сигнатура PHP-функции должна совпадать со следующей,
 
@@ -44,7 +44,7 @@ public function behaviors()
 ```
 
 Приведенный выше код устанавливает, что HTTP кэширование должно быть включено только для действия `index`. Он
-генерирует `Last-Modified` HTTP заголовок на основе времени последнего сообщения. Когда браузер в первый раз посещает страницу `index`, то страница будет сгенерирована на сервере и отправлена в браузер; если браузер снова зайдёт на эту страницу и с тех пор ни один пост не обновится, то сервер не будет пересоздавать страницу и браузер будет использовать закэшированную на стороне клиента версию. В результате, будет пропущено как создание страницы на стороне сервера, так и передача содержания страницы клиенту.
+генерирует `Last-Modified` HTTP заголовок на основе времени последнего сообщения. Когда браузер в первый раз посещает страницу `index`, то страница будет сгенерирована на сервере и отправлена в браузер; если браузер снова зайдёт на эту страницу и с тех пор ни один пост не обновится, то сервер не будет пересоздавать страницу и браузер будет использовать закэшированную на стороне клиента версию. В результате будет пропущено как создание страницы на стороне сервера, так и передача содержания страницы клиенту.
 
 
 ## Заголовок `ETag` <span id="etag"></span>
@@ -81,7 +81,7 @@ public function behaviors()
 ```
 
 Приведенный выше код устанавливает, что HTTP кэширование должно быть включено только для действия `view`. Он
-генерирует `ETag` HTTP заголовок на основе заголовка и содержания последнего сообщения. Когда браузер в первый раз посещает страницу `view`, то страница будет сгенерирована на сервере и отправлена в браузер; если браузер снова зайдёт на эту страницу и с тех пор ни один пост не обновится, то сервер не будет пересоздавать страницу и браузер будет использовать закэшированную на стороне клиента версию. В результате, будет пропущено как создание страницы на стороне сервера, так и передача содержание страницы клиенту.
+генерирует `ETag` HTTP заголовок на основе заголовка и содержания последнего сообщения. Когда браузер в первый раз посещает страницу `view`, то страница будет сгенерирована на сервере и отправлена в браузер; если браузер снова зайдёт на эту страницу и с тех пор ни один пост не обновится, то сервер не будет пересоздавать страницу и браузер будет использовать закэшированную на стороне клиента версию. В результате будет пропущено как создание страницы на стороне сервера, так и передача содержание страницы клиенту.
 
 ETags позволяет применять более сложные и/или более точные стратегии кэширования, чем заголовок `Last-Modified`.
 Например, ETag станет невалидным (некорректным), если на сайте была включена другая тема
diff --git a/docs/guide-ru/caching-page.md b/docs/guide-ru/caching-page.md
index f85a1221965..c368d2df287 100644
--- a/docs/guide-ru/caching-page.md
+++ b/docs/guide-ru/caching-page.md
@@ -2,7 +2,7 @@
 =================
 
 Кэширование страниц — это кэширование всего содержимого страницы на стороне сервера. Позже, когда эта страница
-будет снова запрошена, сервер вернет её из кэша вместо того чтобы генерировать её заново.
+будет снова запрошена, сервер вернет её из кэша вместо того, чтобы генерировать её заново.
 
 Кэширование страниц осуществляется при помощи [фильтра действия](structure-filters.md) [[yii\filters\PageCache]] и
 может быть использовано в классе контроллера следующим образом:
diff --git a/docs/guide-ru/concept-aliases.md b/docs/guide-ru/concept-aliases.md
index d3d8dac0ea5..6f38c73413d 100644
--- a/docs/guide-ru/concept-aliases.md
+++ b/docs/guide-ru/concept-aliases.md
@@ -97,7 +97,7 @@ $cache = new FileCache([
 ]);
 ```
 
-Для того, чтобы узнать поддерживает ли метод или свойство псевдонимы, обратитесь к документации API.
+Для того, чтобы узнать, поддерживает ли метод или свойство псевдонимы, обратитесь к документации API.
 
 
 Заранее определённые псевдонимы <span id="predefined-aliases"></span>
diff --git a/docs/guide-ru/concept-autoloading.md b/docs/guide-ru/concept-autoloading.md
index 92176bf2284..f24e01674cc 100644
--- a/docs/guide-ru/concept-autoloading.md
+++ b/docs/guide-ru/concept-autoloading.md
@@ -75,7 +75,7 @@ require __DIR__ . '/../vendor/autoload.php';
 require __DIR__ . '/../vendor/yiisoft/yii2/Yii.php';
 ```
 
-Вы можете использовать автозагрузчик Composer без автозагрузчика Yii. Однако, скорость автозагрузки в этом случае
+Вы можете использовать автозагрузчик Composer без автозагрузчика Yii. Однако скорость автозагрузки в этом случае
 может уменьшится. Также вам будет необходимо следовать правилам автозагрузчика Composer.
 
 > Info: Если вы не хотите использовать автозагрузчик Yii, создайте свою версию файла `Yii.php`
diff --git a/docs/guide-ru/concept-behaviors.md b/docs/guide-ru/concept-behaviors.md
index b9749c5fda2..de7126df509 100644
--- a/docs/guide-ru/concept-behaviors.md
+++ b/docs/guide-ru/concept-behaviors.md
@@ -348,7 +348,7 @@ $user->touch('login_time');
 
 ### Плюсы поведений <span id="pros-for-behaviors"></span>
 
-Поведения, как и любые другие классы, поддерживают наследование. Трейты же можно рассматривать как копипейст
+Поведения, как и любые другие классы, поддерживают наследование. Трейты можно рассматривать как копипейст
 на уровне языка. Они наследование не поддерживают.
 
 Поведения могут быть прикреплены и отвязаны от компонента динамически, без необходимости модифицирования класса 
diff --git a/docs/guide-ru/concept-configurations.md b/docs/guide-ru/concept-configurations.md
index 360ef1f4314..c97a1141d6a 100644
--- a/docs/guide-ru/concept-configurations.md
+++ b/docs/guide-ru/concept-configurations.md
@@ -55,7 +55,7 @@ Yii::configure($object, $config);
   созданные через геттеры и сеттеры.
 * Элементы `on eventName` указывают на то, какие обработчики должны быть прикреплены к [событиям](concept-events.md) объекта.
   Обратите внимание, что ключи массива начинаются с `on `. Чтобы узнать весь список поддерживаемых видов
-  обработчиков событий обратитесь в раздел [события](concept-events.md)
+  обработчиков событий, обратитесь в раздел [события](concept-events.md)
 * Элементы `as behaviorName` указывают на то, какие [поведения](concept-behaviors.md) должны быть внедрены в объект.
   Обратите внимание, что ключи массива начинаются с `as `; а `$behaviorConfig` представляет собой конфигурацию для
   создания [поведения](concept-behaviors.md), похожую на все остальные конфигурации.
diff --git a/docs/guide-ru/concept-di-container.md b/docs/guide-ru/concept-di-container.md
index e4106ce090b..5ad53617611 100644
--- a/docs/guide-ru/concept-di-container.md
+++ b/docs/guide-ru/concept-di-container.md
@@ -110,7 +110,7 @@ $container->get('Foo', [], [
 Допустим, мы работаем над API и у нас есть:
 
 - `app\components\Request`, наследуемый от `yii\web\Request` и реализующий дополнительные возможности.
-- `app\components\Response`, наследуемый от `yii\web\Response` с свойством `format`, по умолчанию инициализируемом как `json`.
+- `app\components\Response`, наследуемый от `yii\web\Response` со свойством `format`, по умолчанию инициализируемом как `json`.
 - `app\storage\FileStorage` и `app\storage\DocumentsReader`, где реализована некая логика для работы с документами в
   неком файловом хранилище:
   
@@ -358,8 +358,11 @@ $container->setSingleton('yii\db\Connection', [
 // "db" ранее зарегистрированный псевдоним
 $db = $container->get('db');
 
-// эквивалентно: $engine = new \app\components\SearchEngine($apiKey, ['type' => 1]);
-$engine = $container->get('app\components\SearchEngine', [$apiKey], ['type' => 1]);
+// эквивалентно: $engine = new \app\components\SearchEngine($apiKey, $apiSecret, ['type' => 1]);
+$engine = $container->get('app\components\SearchEngine', [$apiKey, $apiSecret], ['type' => 1]);
+
+// эквивалентно: $api = new \app\components\Api($host, $apiKey);
+$api = $container->get('app\components\Api', ['host' => $host, 'apiKey' => $apiKey]);
 ```
 
 За кулисами, контейнер внедрения зависимостей делает гораздо больше работы, чем просто создание нового объекта.
diff --git a/docs/guide-ru/concept-events.md b/docs/guide-ru/concept-events.md
index 83413eb8bc5..f9eb47d0dcb 100644
--- a/docs/guide-ru/concept-events.md
+++ b/docs/guide-ru/concept-events.md
@@ -280,7 +280,7 @@ Event::trigger(Dog::className(), DanceEventInterface::EVENT_DANCE);
 Event::trigger(Developer::className(), DanceEventInterface::EVENT_DANCE);
 ```
 
-Однако, невозможно инициализировать событие во всех классах, которые реализуют интерфейс:
+Однако невозможно инициализировать событие во всех классах, которые реализуют интерфейс:
 
 ```php
 // НЕ БУДЕТ РАБОТАТЬ
diff --git a/docs/guide-ru/concept-service-locator.md b/docs/guide-ru/concept-service-locator.md
index ce48c191608..2f90f8b1550 100644
--- a/docs/guide-ru/concept-service-locator.md
+++ b/docs/guide-ru/concept-service-locator.md
@@ -8,7 +8,7 @@ Service Locator является объектом, предоставляющи
 В Yii Service Locator является экземпляром класса [[yii\di\ServiceLocator]] или его дочернего класса.
 
 Наиболее часто используемый Service Locator в Yii — это объект *приложения*, который можно получить через `\Yii::$app`.
-Предоставляемые им службы, такие, как компоненты `request`, `response`, `urlManager`, называют *компонентами приложения*.
+Предоставляемые им службы такие, как компоненты `request`, `response`, `urlManager`, называют *компонентами приложения*.
 Благодаря Service Locator вы легко можете настроить эти компоненты или даже заменить их собственными реализациями.
 
 Помимо объекта приложения, объект каждого модуля также является Service Locator.
diff --git a/docs/guide-ru/db-active-record.md b/docs/guide-ru/db-active-record.md
index 5436bfdfba9..2602fd600b4 100644
--- a/docs/guide-ru/db-active-record.md
+++ b/docs/guide-ru/db-active-record.md
@@ -32,7 +32,7 @@ Yii поддерживает работу с Active Record для следующ
 * SQLite 2 и 3: посредством [[yii\db\ActiveRecord]]
 * Microsoft SQL Server 2008 и выше: посредством [[yii\db\ActiveRecord]]
 * Oracle: посредством [[yii\db\ActiveRecord]]
-* CUBRID 9.3 и выше: посредством [[yii\db\ActiveRecord]] (Имейте ввиду, что вследствие
+* CUBRID 9.3 и выше: посредством [[yii\db\ActiveRecord]] (Имейте в виду, что вследствие
   [бага](http://jira.cubrid.org/browse/APIS-658) в PDO-расширении для CUBRID, заключение значений в кавычки не работает,
   поэтому необходимо использовать CUBRID версии 9.3 как на клиентской стороне, так и на сервере)
 * Sphinx: посредством [[yii\sphinx\ActiveRecord]], потребуется расширение `yii2-sphinx`
@@ -61,7 +61,7 @@ Yii поддерживает работу с Active Record для следующ
 [[yii\db\Connection::$tablePrefix|tablePrefix]] задан как `tbl_`, `Customer` преобразуется в `tbl_customer`, а
 `OrderItem` в `tbl_order_item`. 
 
-Если имя таблицы указано в формате `{{%TableName}}`, символ `%` заменяется префиксом. Например, , `{{%post}}` становится
+Если имя таблицы указано в формате `{{%TableName}}`, символ `%` заменяется префиксом. Например `{{%post}}` становится
 `{{tbl_post}}`. Фигуриные скобки используются для [экранирования в SQL-запросах](db-dao.md#quoting-table-and-column-names).
 
 В нижеследующем примере мы объявляем класс Active Record с названием `Customer` для таблицы `customer`.
@@ -385,7 +385,7 @@ $customer->save();
 
 Метод [[yii\db\ActiveRecord::save()|save()]] может вставить или обновить строку данных в зависимости от состояния
 Active Record объекта. Если объект создан с помощью оператора `new`, вызов метода [[yii\db\ActiveRecord::save()|save()]]
-приведёт к вставке новой строки данных; если же объект был получен с помощью запроса на получение данных, вызов 
+приведёт к вставке новой строки данных; если объект был получен с помощью запроса на получение данных, вызов 
 [[yii\db\ActiveRecord::save()|save()]] обновит строку таблицы, соответствующую объекту Active Record.
 
 Вы можете различать два состояния Active Record объекта с помощью проверки значения его свойства
@@ -841,7 +841,7 @@ class Order extends ActiveRecord
   ключи массива - столбцы связанных данных.
 
   Есть простой способ запомнить это правило: как вы можете увидеть в примере выше, столбец связной Active Record
-  указывается сразу же после указания самого класса Active Record. Вы видите, что `customer_id` - это свойство класса
+  указывается сразу после указания самого класса Active Record. Вы видите, что `customer_id` - это свойство класса
   `Order`, а `id` - свойство класса `Customer`.
   
 
@@ -932,7 +932,7 @@ $orders = $customer->bigOrders;
 
 При проектировании баз данных, когда между двумя таблицами имеется кратность связи many-to-many, обычно вводится 
 [промежуточная таблица](http://en.wikipedia.org/wiki/Junction_table). Например, таблицы `order` и `item` могут быть
-связаны посредством промежуточной таблицы с названием `order_item`. Один заказ будет соотносится с несколькими товарами,
+связаны посредством промежуточной таблицы с названием `order_item`. Один заказ будет соотноситься с несколькими товарами,
 в то время как один товар будет также соотноситься с несколькими заказами.
 
 При объявлении подобных связей вы можете пользоваться методом [[yii\db\ActiveQuery::via()|via()]] или методом
@@ -1147,7 +1147,7 @@ $customers = Customer::find()
 
 По умолчанию, метод [[yii\db\ActiveQuery::joinWith()|joinWith()]] будет использовать конструкцию `LEFT JOIN` для
 объединения основной таблицы со связной. Вы можете указать другой тип операции JOIN (например, `RIGHT JOIN`) с помощью
-третьего параметра этого метода - `$joinType`. Если же вам нужен `INNER JOIN`, вы можете вместо этого просто вызвать
+третьего параметра этого метода - `$joinType`. Если вам нужен `INNER JOIN`, вы можете вместо этого просто вызвать
 метод [[yii\db\ActiveQuery::innerJoinWith()|innerJoinWith()]].
 
 Вызов метода [[yii\db\ActiveQuery::joinWith()|joinWith()]] будет [жадно загружать](#lazy-eager-loading) связные данные
@@ -1214,7 +1214,7 @@ $query->joinWith([
 $query->joinWith(['orders o'])->orderBy('o.id');
 ```
 
-Этот синтаксис работает для простых связей. Если же необходимо использовать связующую таблицу, например 
+Этот синтаксис работает для простых связей. Если необходимо использовать связующую таблицу, например 
 `$query->joinWith(['orders.product'])`, то вызовы joinWith вкладываются друг в друга:
 
 ```php
diff --git a/docs/guide-ru/db-dao.md b/docs/guide-ru/db-dao.md
index f46461729a1..9fbeae164eb 100644
--- a/docs/guide-ru/db-dao.md
+++ b/docs/guide-ru/db-dao.md
@@ -202,7 +202,7 @@ $post2 = $command->queryOne();
 ```
 
 Обратите внимание что вы связываете маркер `$id` с переменной перед выполнением запроса, и затем меняете это значение
-перед каждым последующим выполнением (часто это делается в цикле). Выполнении запросов таким образом может быть значительно
+перед каждым последующим выполнением (часто это делается в цикле). Выполнение запросов таким образом может быть значительно
 более эффективным, чем выполнение запроса для каждого значения параметра.
 
 ### Выполнение Не-SELECT запросов <span id="non-select-queries"></span>
@@ -545,7 +545,7 @@ Yii::$app->db->createCommand("UPDATE user SET username='demo' WHERE id=1")->exec
 ```
 
 Конфигурация выше, определяет два основных и четыре подчинённых серверов. Компонент `Connection` поддерживает 
-балансировку нагрузки и переключение при сбое между основными серверами, также как и между подчинёнными. Различие
+балансировку нагрузки и переключение при сбое между основными серверами, так же как и между подчинёнными. Различие
 заключается в том, что когда ни к одному из основных серверов не удастся подключиться будет выброшено исключение.
 
 > Note: Когда вы используете свойство [[yii\db\Connection::masters|masters]] для настройки одного или нескольких
@@ -596,7 +596,7 @@ $rows = Yii::$app->db->useMaster(function ($db) {
 ## Работа со схемой базы данных <span id="database-schema"></span>
 
 Yii DAO предоставляет целый набор методов для управления схемой базы данных, таких как создание новых таблиц, удаление
-столбцов из таблицы, и т.д.. Эти методы описаны ниже:
+столбцов из таблицы, и т.д. Эти методы описаны ниже:
 
 * [[yii\db\Command::createTable()|createTable()]]: создание таблицы
 * [[yii\db\Command::renameTable()|renameTable()]]: переименование таблицы
@@ -632,5 +632,5 @@ $table = Yii::$app->db->getTableSchema('post');
 ```
 
 Метод вернёт объект [[yii\db\TableSchema]], который содержит информацию о столбцах таблицы, первичных ключах, внешних
-ключах, и т.д.. Вся эта информация используется главным образом для [построителя запросов](db-query-builder.md) и
+ключах, и т.д. Вся эта информация используется главным образом для [построителя запросов](db-query-builder.md) и
 [active record](db-active-record.md), чтоб помочь вам писать независимый от базы данных код.
diff --git a/docs/guide-ru/db-migrations.md b/docs/guide-ru/db-migrations.md
index 0793f4a21b7..24d1091f227 100644
--- a/docs/guide-ru/db-migrations.md
+++ b/docs/guide-ru/db-migrations.md
@@ -47,7 +47,7 @@ yii migrate/create create_news_table
 
 > Note: Поскольку аргумент `name` будет использован как часть имени класса создаваемой миграции, он должен содержать только буквы, цифры и/или символы подчеркивания.
 
-Приведенная выше команда создаст новый PHP класс с именем файла `m150101_185401_create_news_table.php` в директории `@app/migrations`. Файл содержит следующий код, который главным образом декларирует класс миграции `m150101_185401_create_news_table` с следующим каркасом кода:
+Приведенная выше команда создаст новый PHP класс с именем файла `m150101_185401_create_news_table.php` в директории `@app/migrations`. Файл содержит следующий код, который главным образом декларирует класс миграции `m150101_185401_create_news_table` со следующим каркасом кода:
 
 ```php
 <?php
@@ -84,7 +84,7 @@ class m150101_185401_create_news_table extends Migration
 Каждая миграция базы данных определяется как PHP класс расширяющийся от [[yii\db\Migration]]. Имя класса миграции автоматически создается в формате `m<YYMMDD_HHMMSS>_<Name>` (`m<ГодМесяцДень_ЧасыМинутыСекунды>_<Имя>`), где
 
 * `<YYMMDD_HHMMSS>` относится к UTC дате-времени при котором команда создания миграции была выполнена.
-* `<Name>` это тоже самое значение аргумента `name` которое вы прописываете в команду.
+* `<Name>` это то же самое значение аргумента `name` которое вы прописываете в команду.
 
 В классе миграции, вы должны прописать код в методе `up()` когда делаете изменения в структуре базы данных.
 Вы также можете написать код в методе `down()`, чтобы отменить сделанные `up()` изменения. Метод `up` вызывается для обновления базы данных с помощью данной миграции, а метод `down()` вызывается для отката изменений базы данных.
@@ -446,7 +446,7 @@ class m150811_220037_drop_position_column_from_post_table extends Migration
 
 ### Добавление промежуточной таблицы
 
-Если имя миграции задано как `create_junction_table_for_xxx_and_yyy_tables`, файл будет содержать код для создания промежуточной таблцы.
+Если имя миграции задано как `create_junction_table_for_xxx_and_yyy_tables`, файл будет содержать код для создания промежуточной таблицы.
 
 ```php
 yii migrate/create create_junction_table_for_post_and_tag_tables
@@ -553,7 +553,7 @@ class m160328_041642_create_junction_table_for_post_and_tag_tables extends Migra
 
 При выполнении сложных миграций баз данных, важно обеспечить каждую миграцию либо успехом, либо ошибкой, в целом так, чтобы база данных могла поддерживать целостность и непротиворечивость. Для достижения данной цели рекомендуется, заключить операции каждой миграции базы данных в [транзакции](db-dao.md#performing-transactions).
 
-Самый простой способ реализации транзакций миграций это прописать код миграций в методы `safeUp()` и `safeDown()`. Эти два метода отличаются от методов `up()` и `down()` тем, что они неявно заключены в транзакции. В результате, если какая-либо операция в этих методах не удается, все предыдущие операции будут отменены автоматически.
+Самый простой способ реализации транзакций миграций это прописать код миграций в методы `safeUp()` и `safeDown()`. Эти два метода отличаются от методов `up()` и `down()` тем, что они неявно заключены в транзакции. В результате если какая-либо операция в этих методах не удается, все предыдущие операции будут отменены автоматически.
 
 В следующем примере, помимо создания таблицы `news` мы также вставляем в этой таблице начальную строку.
 
@@ -628,7 +628,7 @@ class m150101_185401_create_news_table extends Migration
 
 > Info: [[yii\db\Migration]] не предоставляет методы запросов к базе данных. Это потому, что обычно не требуется отображать дополнительные сообщения об извлечении данных из базы данных. Это также, потому, что можно использовать более мощный [Построитель Запросов](db-query-builder.md) для построения и выполнения сложных запросов.
 
-> Note: при обработке данных внутри миграции, может показаться, что использование существующих классов [Active Record](db-active-record.md), со всей их готовой бизнес логикой, будет разумным решением и упросит код миграции. Однако, следует помнить, что код миграций не должен меняться, по определению. В отличии от миграций, бизнес логика приложений часто изменяется. Это может привести к нарушению работы миграции при определённых изменениях на уровне Active Record. Поэтому рекомендуется делать миграции независимыми от других частей приложения, таких как классы Active Record.
+> Note: при обработке данных внутри миграции, может показаться, что использование существующих классов [Active Record](db-active-record.md), со всей их готовой бизнес логикой, будет разумным решением и упросит код миграции. Однако следует помнить, что код миграций не должен меняться, по определению. В отличие от миграций, бизнес логика приложений часто изменяется. Это может привести к нарушению работы миграции при определённых изменениях на уровне Active Record. Поэтому рекомендуется делать миграции независимыми от других частей приложения, таких как классы Active Record.
 
 
 ## Применение Миграций <span id="applying-migrations"></span>
@@ -731,7 +731,7 @@ yii migrate/mark 1392853618                         # используя вре
   Обратите внимание, что данный каталог должен существовать, иначе команда будет выдавать ошибку.
 
 * `migrationTable`: строка - string (по умолчанию `migration`). Определяет имя таблицы в базе данных в которой хранится
-  информация о истории миграций. Эта таблица будет автоматически создана командой миграции, если её не существует.
+  информация об истории миграций. Эта таблица будет автоматически создана командой миграции, если её не существует.
   Вы также можете создать её вручную, используя структуру `version varchar(255) primary key, apply_time integer`.
 
 * `db`: строка - string (по умолчанию `db`). Определяет ID базы данных [компонента приложения](structure-application-components.md).
diff --git a/docs/guide-ru/db-query-builder.md b/docs/guide-ru/db-query-builder.md
index 385afe6b488..5db7896eef3 100644
--- a/docs/guide-ru/db-query-builder.md
+++ b/docs/guide-ru/db-query-builder.md
@@ -384,7 +384,7 @@ $query->orderBy('id ASC, name DESC');
 
 > Note: Вы должны использовать массив для указания `ORDER BY` содержащих выражения БД.
 
-Вы можете вызывать [[yii\db\Query::addOrderBy()|addOrderBy()]] для добавления столбцов в фрагмент `ORDER BY`.
+Вы можете вызывать [[yii\db\Query::addOrderBy()|addOrderBy()]] для добавления столбцов во фрагмент `ORDER BY`.
 
 ```php
 $query->orderBy('id ASC')
@@ -410,7 +410,7 @@ $query->groupBy('id, status');
 
 > Note: Вы должны использовать массив для указания `GROUP BY` содержащих выражения БД.
  
-Вы можете вызывать [[yii\db\Query::addGroupBy()|addGroupBy()]] для добавления имён столбцов в фрагмент `GROUP BY`.
+Вы можете вызывать [[yii\db\Query::addGroupBy()|addGroupBy()]] для добавления имён столбцов во фрагмент `GROUP BY`.
 Например,
 
 ```php
@@ -429,10 +429,10 @@ $query->groupBy(['id', 'status'])
 $query->having(['status' => 1]);
 ```
 
-Пожалуйста, обратитесь к документации для [where()](#where) для более подробной информации о определении условий.
+Пожалуйста, обратитесь к документации для [where()](#where) для более подробной информации об определении условий.
 
 Вы можете вызывать [[yii\db\Query::andHaving()|andHaving()]] или [[yii\db\Query::orHaving()|orHaving()]] для добавления
-дополнительных условий в фрагмент `HAVING`.
+дополнительных условий во фрагмент `HAVING`.
 
 ```php
 // ... HAVING (`status` = 1) AND (`age` > 30)
@@ -471,7 +471,7 @@ $query->join('LEFT JOIN', 'post', 'post.user_id = user.id');
 - `$type`: тип объединения, например, `'INNER JOIN'`, `'LEFT JOIN'`.
 - `$table`: имя таблицы, которая должна быть присоединена.
 - `$on`: необязательное условие объединения, то есть фрагмент `ON`. Пожалуйста, обратитесь к документации для
-  [where()](#where) для более подробной информации о определении условий. Отметим, что синтаксис массивов **не работает**
+  [where()](#where) для более подробной информации об определении условий. Отметим, что синтаксис массивов **не работает**
   для задания условий для столбцов, то есть `['user.id' => 'comment.userId']` будет означать условие, где ID пользователя
   должен быть равен строке `'comment.userId'`. Вместо этого стоит указывать условие в виде строки `'user.id = comment.userId'`.
 - `$params`: необязательные параметры присоединяемые к условию объединения.
@@ -498,7 +498,7 @@ $subQuery = (new \yii\db\Query())->from('post');
 $query->leftJoin(['u' => $subQuery], 'u.id = author_id');
 ```
 
-В этом случае, вы должны передать подзапросы в массиве и использовать ключи для определения алиасов.
+В этом случае вы должны передать подзапросы в массиве и использовать ключи для определения алиасов.
 
 
 ### [[yii\db\Query::union()|union()]] <span id="union"></span>
@@ -554,7 +554,7 @@ $row = (new \yii\db\Query())
 
 > Note: метод [[yii\db\Query::one()|one()]] вернёт только первую строку результата запроса. Он НЕ добавляет
   `LIMIT 1` в генерируемый SQL. Это хорошо и предпочтительно если вы знаете, что запрос вернёт только одну или несколько
-  строк данных (например, при запросе по первичному ключу). Однако, если запрос потенциально может вернут много
+  строк данных (например, при запросе по первичному ключу). Однако если запрос потенциально может вернут много
   строк данных, вы должны вызвать `limit(1)` для повышения производительности, Например, 
   `(new \yii\db\Query())->from('user')->limit(1)->one()`.
 
@@ -574,7 +574,7 @@ $count = (new \yii\db\Query())
 При вызове методов выборки [[yii\db\Query]], внутри на самом деле проводится следующая работа:
 
 * Вызывается [[yii\db\QueryBuilder]] для генерации SQL запроса на основе текущего [[yii\db\Query]];
-* Создаёт объект [[yii\db\Command]] с сгенерированным SQL запросом;
+* Создаёт объект [[yii\db\Command]] со сгенерированным SQL запросом;
 * Вызывается выбирающий метод (например [[yii\db\Command::queryAll()|queryAll()]]) из [[yii\db\Command]] для выполнения SQL запроса и извлечения данных.
 
 Иногда вы можете захотеть увидеть или использовать SQL запрос построенный из объекта [[yii\db\Query]]. Этой цели можно
@@ -630,7 +630,7 @@ $query = (new \yii\db\Query())
 
 ### Пакетная выборка <span id="batch-query"></span>
 
-При работе с большими объемами данных, методы на подобие [[yii\db\Query::all()]] не подходят, потому что они требуют
+При работе с большими объемами данных, методы наподобие [[yii\db\Query::all()]] не подходят, потому что они требуют
 загрузки всех данных в память. Чтобы сохранить требования к памяти минимальными, Yii предоставляет поддержку
 так называемых пакетных выборок. Пакетная выборка делает возможным курсоры данных и выборку данных пакетами.
 
@@ -662,7 +662,7 @@ SQL запрос к базе данных. Данные будут выбира
 По сравнению с [[yii\db\Query::all()]], пакетная выборка загружает только по 100 строк данных за раз в память.
 Если вы обрабатываете данные и затем сразу выбрасываете их, пакетная выборка может помочь уменьшить использование памяти.
 
-Если указать индексный столбец через [[yii\db\Query::indexBy()]], в пакетной выборке индекс будет сохранятся.
+Если указать индексный столбец через [[yii\db\Query::indexBy()]], в пакетной выборке индекс будет сохраняться.
 Например,
 
 ```php
diff --git a/docs/guide-ru/glossary.md b/docs/guide-ru/glossary.md
index d09a1837d67..a3c8b9d7c6d 100644
--- a/docs/guide-ru/glossary.md
+++ b/docs/guide-ru/glossary.md
@@ -2,13 +2,15 @@
 
 ## alias
 
-Alias это строка которую Yii использует чтобы указывать на класс или директорию, например '@app/vendor'.
+Alias - это строка, с помощью которой Yii указывает на класс или директорию, например '@app/vendor'.
 
 ## application
 
-Приложение является центральным объектом на протяжении HTTP запроса. Оно сожержит несколько компонентов и с ними получает информацию из запроса и отправляет ее для дальнейшей обработки.
+Приложение является центральным объектом на протяжении HTTP запроса. Оно содержит несколько компонентов и с ними 
+получает информацию из запроса и отправляет ее для дальнейшей обработки.
 
-Объект приложения создается в виде синглтона входным скриптом. Объект приложения доступен из любого места через `\Yii::$app`.
+Объект приложения создается в виде Singleton(шаблон проектирования Одиночка) входным скриптом. 
+Объект приложения доступен из любого места через `\Yii::$app`.
 
 ## assets
 
@@ -34,19 +36,19 @@ Bundle, известный как пакет в Yii 1.1, относится к 
 
 ## extension
 
-Расширения это набор классов, комплект ресурсов и конфигураций, которые добавляют приложению функциональность.
+Расширения - это набор классов, комплект ресурсов и конфигураций, которые добавляют приложению функциональность.
 
 # I
 
 ## installation
 
-Установка это процесс подготовки чего-либо к работе либо путем чтения readme файла или выполнением подготовленного сценария. В случае Yii он устанавливает разрешения и необходимые зависимости.
+Установка - это процесс подготовки чего-либо к работе либо путем чтения readme файла или выполнением подготовленного сценария. В случае Yii он устанавливает разрешения и необходимые зависимости.
 
 # M
 
 ## module
 
-Модуль это подпрограмма которая содержит элементы MVC, такие как модели, представления, контроллеры и т.д. и может быть использована без главного приложения. Обычно пробрасывая запросы в модуль вместо обработки контроллером.
+Модуль - это подпрограмма, которая содержит элементы MVC: модели, представления, контроллеры и т.д. Может быть использована без главного приложения. Обычно пробрасывая запросы в модуль вместо обработки контроллером.
 
 # N
 
diff --git a/docs/guide-ru/helper-array.md b/docs/guide-ru/helper-array.md
index 678575a004c..0397416849a 100644
--- a/docs/guide-ru/helper-array.md
+++ b/docs/guide-ru/helper-array.md
@@ -1,11 +1,11 @@
 ArrayHelper
 ===========
-Вдобавок к [богатому набору функций](https://secure.php.net/manual/ru/book.array.php)  для работы с массивами, которые есть в самом PHP, хелпер Yii Array предоставляет свои статические функции, которые могут быть вам полезны.
+Вдобавок к [богатому набору функций](https://secure.php.net/manual/ru/book.array.php)  для работы с массивами, которые есть в самом PHP, хелпер Yii Array предоставляет свои статические функции - возможно они могут быть вам полезны.
 
 
 ## Получение значений <span id="getting-values"></span>
 
-Извлечение значений из массива, объекта или структуры состоящей из них обоих с помощью стандартных средств PHP является довольно скучным занятием. Сперва вам нужно проверить есть ли соответствующий ключ с помощью `isset`, и если есть – получить, если нет – подставить значение по умолчанию.
+Извлечение значений из массива, объекта или структуры состоящей из них обоих с помощью стандартных средств PHP является довольно скучным занятием. Сначала вам нужно проверить есть ли соответствующий ключ с помощью `isset`, и если есть – получить, если нет – подставить значение по умолчанию.
 
 ```php
 class User
diff --git a/docs/guide-ru/helper-html.md b/docs/guide-ru/helper-html.md
index fa8ecca84a9..5ffb14c8676 100644
--- a/docs/guide-ru/helper-html.md
+++ b/docs/guide-ru/helper-html.md
@@ -101,7 +101,7 @@ echo Html::tag('div', 'Сохранить', $options);
 // выведет '<div class="btn btn-success btn-lg">Сохранить</div>'
 ```
 
-`Html::addCssClass()` предотвращает дублирование классов, поэтому можно не беспокоиться о том, что какой-либо класс
+`Html::addCssClass()` предотвращает дублирование классов, поэтому можно не беспокоиться, что какой-либо класс
 будет добавлен дважды:
 
 ```php
@@ -272,7 +272,7 @@ $decodedUserName = Html::decode($userName);
 <?= Html::activeCheckboxList($user, 'role', ArrayHelper::map($roleModels, 'id', 'name')) ?>
 ```
 
-Если же нет, используйте радио-переключатель:
+Если нет, используйте радио-переключатель:
 
 ```php
 <?= Html::radioList('roles', [16, 42], ArrayHelper::map($roleModels, 'id', 'name')) ?>
@@ -282,7 +282,7 @@ $decodedUserName = Html::decode($userName);
 
 ### Тэги label и отображение ошибок <span id="labels-and-errors"></span>
 
-Также как и для полей ввода, есть два метода формирования тэгов label для форм. Есть "active label", считывающий
+Так же как и для полей ввода, есть два метода формирования тэгов label для форм. Есть "active label", считывающий
 данные из модели и обычный тэг "label", принимающий на вход непосредственно сами данные:
 
 ```php
diff --git a/docs/guide-ru/helper-url.md b/docs/guide-ru/helper-url.md
index 83df346fd7f..ac317fc0acf 100644
--- a/docs/guide-ru/helper-url.md
+++ b/docs/guide-ru/helper-url.md
@@ -26,11 +26,11 @@ $absoluteBaseUrl = Url::base(true);
 $httpsAbsoluteBaseUrl = Url::base('https');
 ```
 
-Единственный параметр данного метода работает также как и `Url::home()`.
+Единственный параметр данного метода работает так же как и `Url::home()`.
 
 ## Создание URL <span id="creating-urls"></span>
 
-Чтобы создать URL для соответствующего роута используйте метод `Url::toRoute()`. Метод использует [[\yii\web\UrlManager]].
+Чтобы создать URL для соответствующего роута, используйте метод `Url::toRoute()`. Метод использует [[\yii\web\UrlManager]].
 Для того чтобы создать URL:
 
 ```php
@@ -62,7 +62,7 @@ $url = Url::toRoute(['product/view', 'id' => 42]);
 - Если роут начинается не со слеша (например, `site/index`), то он будет считаться относительным роутом текущего модуля
   и будет определен с помощью [[\yii\base\Module::uniqueId|uniqueId]].
 
-Начиная с версии 2.0.2, вы можете задавать роуты с помощью [псевдонимов](concept-aliases.md). В этом случае, сначала
+Начиная с версии 2.0.2, вы можете задавать роуты с помощью [псевдонимов](concept-aliases.md). В этом случае сначала
 псевдоним будет сконвертирован в соответствующий роут, который будет преобразован в абсолютный в соответствии с вышеописанными
 правилами.
 
diff --git a/docs/guide-ru/input-form-javascript.md b/docs/guide-ru/input-form-javascript.md
index 7b0f635417f..cbc495d7362 100644
--- a/docs/guide-ru/input-form-javascript.md
+++ b/docs/guide-ru/input-form-javascript.md
@@ -105,7 +105,7 @@ function (event)
 
 ### `ajaxBeforeSend`
          
-`ajaxBeforeSend` cобытие инициируется перед отправкой AJAX запроса для проверки основанной на AJAX.
+`ajaxBeforeSend` событие инициируется перед отправкой AJAX запроса для проверки основанной на AJAX.
 
 Сигнатура обработчика события должна быть:
 
diff --git a/docs/guide-ru/input-forms.md b/docs/guide-ru/input-forms.md
index a3888128381..08e332e4aef 100644
--- a/docs/guide-ru/input-forms.md
+++ b/docs/guide-ru/input-forms.md
@@ -56,9 +56,9 @@ $form = ActiveForm::begin([
 В вышеприведённом коде [[yii\widgets\ActiveForm::begin()|ActiveForm::begin()]] не только создаёт экземпляр формы, но
 также и знаменует её начало. Весь контент, расположенный между [[yii\widgets\ActiveForm::begin()|ActiveForm::begin()]]
 и [[yii\widgets\ActiveForm::end()|ActiveForm::end()]], будет завёрнут в HTML-тег `<form>`. Вы можете изменить некоторые 
-настройки виджета через передачу массива в его `begin` метод, также как и в любом другом виджете. В этом случае дополнительный CSS-класс и идентификатор будет прикреплён к открывающемуся тегу `<form>`. Для просмотра всех доступных настроек, пожалуйста, обратитесь к документации API [[yii\widgets\ActiveForm]].
+настройки виджета через передачу массива в его `begin` метод, так же как и в любом другом виджете. В этом случае дополнительный CSS-класс и идентификатор будет прикреплён к открывающемуся тегу `<form>`. Для просмотра всех доступных настроек, пожалуйста, обратитесь к документации API [[yii\widgets\ActiveForm]].
 
-Для создания в форме элемента с меткой и любой применимой валидацией с помощью JavaScript, вызывается [[yii\widgets\ActiveForm::field()|ActiveForm::field()]], который возвращает экземпляр [[yii\widgets\ActiveField]]. Когда этот метод вызывается непосредственно, то результатом будет текстовый элемент (`input type="text"`). Для того, чтобы настроить элемент, можно вызвать один за одним дополнительные методы [[yii\widgets\ActiveField|ActiveField]]:
+Для создания в форме элемента с меткой и любой применимой валидацией с помощью JavaScript, вызывается [[yii\widgets\ActiveForm::field()|ActiveForm::field()]], который возвращает экземпляр [[yii\widgets\ActiveField]]. Когда этот метод вызывается непосредственно, то результатом будет текстовый элемент (`input type="text"`). Для того, чтобы настроить элемент, можно вызвать один за другим дополнительные методы [[yii\widgets\ActiveField|ActiveField]]:
 
 ```php
 // элемент формы для ввода пароля
@@ -94,7 +94,7 @@ echo $form->field($model, 'items[]')->checkboxList(['a' => 'Item A', 'b' => 'Ite
 
 Дополнительные HTML-элементы можно добавить к форме, используя обычный HTML или методы из класса помощника [[yii\helpers\Html|Html]], как это было сделано с помощью [[yii\helpers\Html::submitButton()|Html::submitButton()]] в примере, приведённом выше. 
 
-> Tip: Если вы использует Twitter Bootstrap CSS в своём приложении, то воспользуйтесь [[yii\bootstrap\ActiveForm]] вместо [[yii\widgets\ActiveForm]]. Он добавит к ActiveForm дополнительные стили, которые сработают в рамках bootstrap CSS.
+> Tip: Если вы используете Twitter Bootstrap CSS в своём приложении, то воспользуйтесь [[yii\bootstrap\ActiveForm]] вместо [[yii\widgets\ActiveForm]]. Он добавит к ActiveForm дополнительные стили, которые сработают в рамках bootstrap CSS.
 
 > Tip: для добавления "звёздочки" к обязательным элементам формы, воспользуйтесь следующим CSS:
 >
@@ -153,7 +153,7 @@ Pjax::begin([
     ActiveForm::end();
 Pjax::end();
 ```
-> Tip: Будьте осторожны с ссылками внутри виджета [[yii\widgets\Pjax|Pjax]] так как ответ будет
+> Tip: Будьте осторожны со ссылками внутри виджета [[yii\widgets\Pjax|Pjax]] так как ответ будет
 > также отображаться внутри виджета. Чтобы ссылка работала без PJAX, добавьте к ней HTML-атрибут
 > `data-pjax="0"`.
 
diff --git a/docs/guide-ru/intro-upgrade-from-v1.md b/docs/guide-ru/intro-upgrade-from-v1.md
index 7bef06682a2..af2239a12bf 100644
--- a/docs/guide-ru/intro-upgrade-from-v1.md
+++ b/docs/guide-ru/intro-upgrade-from-v1.md
@@ -8,7 +8,7 @@
 Если прежде вы не использовали Yii 1.1, вы можете сразу перейти к разделу «[Начало работы](start-installation.md)».
 
 Также учтите, что в Yii 2.0 гораздо больше новых возможностей, чем описано далее. Настоятельно рекомендуется, изучить
-всё руководство. Вполне возможно, что то, что раньше приходилось разрабатывать самостоятельно теперь является частью
+всё руководство. Вполне возможно, что-то, что раньше приходилось разрабатывать самостоятельно теперь является частью
 фреймворка.
 
 
@@ -16,7 +16,7 @@
 --------
 
 Yii 2.0 широко использует [Composer](https://getcomposer.org/), который является основным менеджером зависимостей для PHP.
-Установка как фреймворка, так и расширений, осуществляется через Composer. Подробно о установке Yii 2.0 вы можете узнать
+Установка как фреймворка, так и расширений, осуществляется через Composer. Подробно об установке Yii 2.0 вы можете узнать
 из раздела «[Установка Yii](start-installation.md)». О том, как создавать расширения для Yii 2.0 или адаптировать
 уже имеющиеся расширения от версии 1.1, вы можете узнать из раздела «[Создание расширений](structure-extensions.md#creating-extensions)».
 
@@ -260,7 +260,7 @@ ActiveForm::end();
 
 В Yii 2.0 темы работают совершенно по-другому. Теперь они основаны на механизме сопоставления путей исходного файла
 представления с темизированным файлом. Например, если используется сопоставление путей `['/web/views' => '/web/themes/basic']`,
-то темизированная версия файла представления `/web/views/site/index.php` будет находится в `/web/themes/basic/site/index.php`.
+то темизированная версия файла представления `/web/views/site/index.php` будет находиться в `/web/themes/basic/site/index.php`.
 По этой причине темы могут быть применены к любому файлу представления, даже к представлению, отрендеренному внутри контекста
 контроллера или виджета. Также, больше не существует компонента `CThemeManager`. Вместо этого, `theme` является конфигурируемым
 свойством компонента приложения `view`.
@@ -399,7 +399,7 @@ Active Record
 построение запросов и работу со связями.
 
 Класс `CDbCriteria` версии 1.1 был заменен [[yii\db\ActiveQuery]]. Этот класс наследуется от [[yii\db\Query]] и таким
-образом получает все методы, необходимые для построения запроса. Чтобы начать строить запрос следует вызвать метод
+образом получает все методы, необходимые для построения запроса. Чтобы начать строить запрос, следует вызвать метод
 [[yii\db\ActiveRecord::find()]]:
 
 ```php
diff --git a/docs/guide-ru/intro-yii.md b/docs/guide-ru/intro-yii.md
index 10d68c8f05e..9bed6ab5f3a 100644
--- a/docs/guide-ru/intro-yii.md
+++ b/docs/guide-ru/intro-yii.md
@@ -42,7 +42,7 @@ Yii — не проект одного человека. Он поддержив
 Требования к ПО и знаниям
 -------------------------
 
-Yii 2.0 требует PHP 5.4.0 и выше и наилучшим образом работает на последней версии PHP 7. Чтобы узнать требования для отдельных возможностей вы можете запустить скрипт проверки
+Yii 2.0 требует PHP 5.4.0 и выше и наилучшим образом работает на последней версии PHP 7. Чтобы узнать требования для отдельных возможностей, вы можете запустить скрипт проверки
 требований, который поставляется с каждым релизом фреймворка.
 
 Для разработки на Yii потребуется общее понимание ООП, так как фреймворк полностью следует этой парадигме. Также стоит
diff --git a/docs/guide-ru/rest-error-handling.md b/docs/guide-ru/rest-error-handling.md
index 73106f2fbbc..ab9570a1e35 100644
--- a/docs/guide-ru/rest-error-handling.md
+++ b/docs/guide-ru/rest-error-handling.md
@@ -3,7 +3,7 @@
 
 Если при обработке запроса к RESTful API в запросе пользователя обнаруживается ошибка или происходит 
 что-то непредвиденное на сервере, вы можете просто выбрасывать исключение, чтобы уведомить пользователя о нештатной ситуации.
-Если же вы можете установить конкретную причину ошибки (например, запрошенный ресурс не существует), вам следует подумать
+Если вы можете установить конкретную причину ошибки (например, запрошенный ресурс не существует), вам следует подумать
 о том, чтобы выбрасывать исключение с соответствующим кодом состояния HTTP (например, [[yii\web\NotFoundHttpException]],
 соответствующее коду состояния 404). Yii отправит ответ с соответствующим 
 HTTP-кодом и текстом. Он также включит в тело ответа сериализованное представление 
@@ -89,4 +89,4 @@ return [
 ```
 
 Приведённый выше код изменит формат ответа (как для удачного запроса, так и для ошибок) если передан `GET`-параметр
-`suppress_response_code`.
\ No newline at end of file
+`suppress_response_code`.
diff --git a/docs/guide-ru/rest-routing.md b/docs/guide-ru/rest-routing.md
index 137dafab01a..9f1478a4d67 100644
--- a/docs/guide-ru/rest-routing.md
+++ b/docs/guide-ru/rest-routing.md
@@ -50,7 +50,7 @@
 * `OPTIONS /users/123`: список HTTP-методов, поддерживаемые точкой входа `/users/123`.
 
 Вы можете настроить опции `only` и `except`, явно указав для них список действий, которые поддерживаются или
-которые должны быть отключены, соответственно. Например:
+ должны быть отключены, соответственно. Например:
 
 ```php
 [
diff --git a/docs/guide-ru/runtime-logging.md b/docs/guide-ru/runtime-logging.md
index ec5d0e72595..cc42a8c1872 100644
--- a/docs/guide-ru/runtime-logging.md
+++ b/docs/guide-ru/runtime-logging.md
@@ -222,7 +222,7 @@ return [
 ]
 ```
 
-Из-за того, что значения максимального количества сообщений для передачи и выгрузки по умолчанию достаточно велико, при вызове метода `Yii::debug()` или любого другого метода логирования, сообщение не появится сразу в файле или таблице базы данных. Такое поведение может стать проблемой, например, в консольных приложениях с большим временем исполнения. Для того, чтобы все сообщения логов сразу же попадали в лог, необходимо установить значения свойств [[yii\log\Dispatcher::flushInterval|flushInterval]] и [[yii\log\Target::exportInterval|exportInterval]] равными 1, например так:
+Из-за того, что значения максимального количества сообщений для передачи и выгрузки по умолчанию достаточно велико, при вызове метода `Yii::debug()` или любого другого метода логирования, сообщение не появится сразу в файле или таблице базы данных. Такое поведение может стать проблемой, например, в консольных приложениях с большим временем исполнения. Для того, чтобы все сообщения логов сразу попадали в лог, необходимо установить значения свойств [[yii\log\Dispatcher::flushInterval|flushInterval]] и [[yii\log\Target::exportInterval|exportInterval]] равными 1, например так:
 
 ```php
 return [
diff --git a/docs/guide-ru/runtime-requests.md b/docs/guide-ru/runtime-requests.md
index 0ecf1583814..3ba36bfe15b 100644
--- a/docs/guide-ru/runtime-requests.md
+++ b/docs/guide-ru/runtime-requests.md
@@ -45,7 +45,7 @@ $params = $request->bodyParams;
 $param = $request->getBodyParam('id');
 ```
 
-> Info: В отличии от `GET` параметров, параметры, которые были переданы через `POST`, `PUT`, `PATCH` и д.р. отправляются в теле запроса.
+> Info: В отличие от `GET` параметров, параметры, которые были переданы через `POST`, `PUT`, `PATCH` и д.р. отправляются в теле запроса.
   Компонент `request` будет обрабатывать эти параметры, когда вы попробуете к ним обратиться через методы, описанные выше.
   Вы можете настроить способ обработки этих параметров через настройку свойства [[yii\web\Request::parsers]].
   
@@ -75,7 +75,7 @@ if ($request->isPut)  { /* текущий запрос является PUT за
 * [[yii\web\Request::absoluteUrl|absoluteUrl]]: вернёт адрес `http://example.com/admin/index.php/product?id=100`,
   который содержит полный URL, включая имя хоста.
 * [[yii\web\Request::hostInfo|hostInfo]]: вернёт адрес `http://example.com`, который содержит только имя хоста.
-* [[yii\web\Request::pathInfo|pathInfo]]: вернёт адрес `/product`, который содержит часть между адресом начального скрипта и параметрами запроса, которые идут после знака вопроса.
+* [[yii\web\Request::pathInfo|pathInfo]]: вернёт адрес `/product`, который содержит часть между адресом начального скрипта и параметрами запроса, идущих после знака вопроса.
 * [[yii\web\Request::queryString|queryString]]: вернёт адрес `id=100`, который содержит часть URL после знака вопроса. 
 * [[yii\web\Request::baseUrl|baseUrl]]: вернёт адрес `/admin`, который является частью URL после информации о хосте и перед именем входного скрипта.
 * [[yii\web\Request::scriptUrl|scriptUrl]]: вернёт адрес `/admin/index.php`, который содержит URL без информации о хосте и параметрах запроса.
@@ -138,7 +138,7 @@ $userIP = Yii::$app->request->userIP;
 [[yii\web\Request::ipHeaders|ipHeaders]] и
 [[yii\web\Request::secureProtocolHeaders|secureProtocolHeaders]]
 
-Ниже приведена конфигурация компонента `request` для приложения, которое работает за рядом обратных прокси, которые расположены в IP-сети `10.0.2.0/24`:
+Ниже приведена конфигурация компонента `request` для приложения, которое работает за рядом обратных прокси, расположенных в IP-сети `10.0.2.0/24`:
 
 ```php
 'request' => [
@@ -176,4 +176,4 @@ IP-адрес, по умолчанию, отправляется прокси-с
 ],
 ```
 В приведенной выше конфигурации все заголовки, перечисленные в `secureHeaders`, отфильтровываются из запроса, кроме заголовков `X-ProxyUser-Ip` и `Front-End-Https` в случае, если запрос создан прокси.
-В этом случае, первый используется для получения IP-адреса пользователя, настроенного в `ipHeaders`, а последний будет использоваться для определения результата [[yii\web\Request::getIsSecureConnection()]].
\ No newline at end of file
+В этом случае первый используется для получения IP-адреса пользователя, настроенного в `ipHeaders`, а последний будет использоваться для определения результата [[yii\web\Request::getIsSecureConnection()]].
diff --git a/docs/guide-ru/runtime-responses.md b/docs/guide-ru/runtime-responses.md
index af63803e803..b06b7094a18 100644
--- a/docs/guide-ru/runtime-responses.md
+++ b/docs/guide-ru/runtime-responses.md
@@ -24,7 +24,7 @@ Yii::$app->response->statusCode = 200;
 ```
 
 Однако в большинстве случаев явная установка не требуется так как значение [[yii\web\Response::statusCode]] 
-по умолчанию равно 200. Если же вам нужно показать, что запрос не удался, вы можете выбросить соответствующее
+по умолчанию равно 200. Если вам нужно показать, что запрос не удался, вы можете выбросить соответствующее
 HTTP-исключение:
 
 ```php
@@ -216,8 +216,8 @@ public function actionDownload()
 }
 ```
 
-При вызове метода отправки файла вне методов действий чтобы быть уверенным, что к ответу не будет добавлено никакое
-нежелательное содержимое, следует вызвать сразу после него [[yii\web\Response::send()]].
+Чтобы быть уверенным, что к ответу не будет добавлено никакое
+нежелательное содержимое, при вызове метода [[yii\web\Response::sendFile()]] вне методов action, следует вызвать сразу после него [[yii\web\Response::send()]].
 
 ```php
 \Yii::$app->response->sendFile('path/to/file.txt')->send();
@@ -239,7 +239,7 @@ Web-серверов:
 ## Отправка ответа <span id="sending-response"></span>
 
 Содержимое ответа не отправляется пользователю до вызова метода [[yii\web\Response::send()]]. По умолчанию он вызывается
-автоматически в конце метода [[yii\base\Application::run()]]. Однако, чтобы ответ был отправлен немедленно, вы можете
+автоматически в конце метода [[yii\base\Application::run()]]. Однако чтобы ответ был отправлен немедленно, вы можете
 вызвать этот метод явно.
 
 Для отправки ответа метод [[yii\web\Response::send()]] выполняет следующие шаги:
diff --git a/docs/guide-ru/runtime-routing.md b/docs/guide-ru/runtime-routing.md
index 4a419b6f262..578e868117c 100644
--- a/docs/guide-ru/runtime-routing.md
+++ b/docs/guide-ru/runtime-routing.md
@@ -453,8 +453,8 @@ echo Url::previous();
 ]
 ```
 
-> Note: по умолчанию [[yii\web\UrlManager::$normalizer|UrlManager::$normalizer]] отключен. Чтобы использовать
-  нормализацию его необходимо сконфигурировать.
+> Note: По умолчанию [[yii\web\UrlManager::$normalizer|UrlManager::$normalizer]] отключен. Чтобы использовать
+  нормализацию, его необходимо сконфигурировать.
 
 ### Методы HTTP <span id="http-methods"></span>
 
diff --git a/docs/guide-ru/security-authorization.md b/docs/guide-ru/security-authorization.md
index fa492108c61..d32d72efc65 100644
--- a/docs/guide-ru/security-authorization.md
+++ b/docs/guide-ru/security-authorization.md
@@ -543,7 +543,7 @@ $auth->addChild($admin, $author);
 // ... add permissions as children of $admin ...
 ```
 
-Обратите внимание, так как "author" добавлен как дочерняя роль к "admin", следовательно в реализации метода `execute()`
+Обратите внимание, так как "author" добавлен как дочерняя роль к "admin", следовательно, в реализации метода `execute()`
 класса правила вы должны учитывать эту иерархию. Именно поэтому для роли "author" метод `execute()` вернёт истину,
 если пользователь принадлежит к группам 1 или 2 (это означает, что пользователь находится в группе
 администраторов или авторов)
diff --git a/docs/guide-ru/start-forms.md b/docs/guide-ru/start-forms.md
index 1401f8ac7ed..73a766038b7 100644
--- a/docs/guide-ru/start-forms.md
+++ b/docs/guide-ru/start-forms.md
@@ -18,7 +18,7 @@
 ---------------------------------------------
 
 В файле `models/EntryForm.php` создайте класс модели `EntryForm` как показано ниже. Он будет использоваться для
-хранения данных, введённых пользователем. Подробно о именовании файлов классов читайте в разделе
+хранения данных, введённых пользователем. Подробно об именовании файлов классов читайте в разделе
 «[Автозагрузка классов](concept-autoloading.md)».
 
 ```php
diff --git a/docs/guide-ru/start-hello.md b/docs/guide-ru/start-hello.md
index d07aa57a356..e4398e70fc0 100644
--- a/docs/guide-ru/start-hello.md
+++ b/docs/guide-ru/start-hello.md
@@ -109,10 +109,10 @@ http://hostname/index.php?r=site%2Fsay&message=Привет+мир
 
 Параметр `r` в нашем URL требует дополнительных пояснений. Он связан с [маршрутом (route)](runtime-routing.md), который представляет
 собой уникальный идентификатор, указывающий на действие. Его формат `ControllerID/ActionID`. Когда приложение получает
-запрос, оно проверяет параметр `r` и, используя `ControllerID`, определяет какой контроллер следует использовать для
-обработки запроса. Затем, контроллер использует часть `ActionID`, чтобы определить какое действие выполняет реальную работу.
+запрос, оно проверяет параметр `r` и, используя `ControllerID`, определяет какой контроллер использовать для
+обработки запроса. Затем, контроллер использует часть `ActionID`, чтобы определить, какое действие выполняет реальную работу.
 В нашем случае маршрут `site/say` будет соответствовать контроллеру `SiteController` и его действию `say`. 
-В результате, для обработки запроса будет вызван метод `SiteController::actionSay()`.
+В результате для обработки запроса будет вызван метод `SiteController::actionSay()`.
 
 > Info: Как и действия, контроллеры также имеют идентификаторы, которые однозначно определяют их в приложении.
   Идентификаторы контроллеров используют те же правила именования, что и идентификаторы действий. Имена классов
diff --git a/docs/guide-ru/start-workflow.md b/docs/guide-ru/start-workflow.md
index ca0847ee1b6..2357de2714d 100644
--- a/docs/guide-ru/start-workflow.md
+++ b/docs/guide-ru/start-workflow.md
@@ -76,7 +76,7 @@ basic/                  корневой каталог приложения
 
 1. Пользователь обращается к [точке входа](structure-entry-scripts.md) `web/index.php`.
 2. Скрипт загружает конфигурацию [configuration](concept-configurations.md) и создает экземпляр [приложения](structure-applications.md) для дальнейшей обработки запроса.
-3. Приложение определяет [маршрут](runtime-routing.md) запроса при помощи компонента приложения  [запрос](runtime-requests.md).
+3. Приложение определяет [маршрут](runtime-routing.md) запроса при помощи компонента приложения [запрос](runtime-requests.md).
 4. Приложение создает экземпляр [контроллера](structure-controllers.md) для выполнения запроса.
 5. Контроллер, в свою очередь, создает [действие](structure-controllers.md) и накладывает на него фильтры.
 6. Если хотя бы один фильтр дает сбой, выполнение приложения останавливается.
diff --git a/docs/guide-ru/structure-applications.md b/docs/guide-ru/structure-applications.md
index 7425784267a..df5238ddbe1 100644
--- a/docs/guide-ru/structure-applications.md
+++ b/docs/guide-ru/structure-applications.md
@@ -56,7 +56,7 @@ $config = require __DIR__ . '/../config/web.php';
 #### [[yii\base\Application::basePath|basePath]] <span id="basePath"></span>
 
 Свойство [[yii\base\Application::basePath|basePath]] указывает на корневую директорию приложения. Эта директория содержит
-весь защищенный исходный код приложения. В данной директории обычно могут находится поддиректории `models`, `views`,
+весь защищенный исходный код приложения. В данной директории обычно могут находиться поддиректории `models`, `views`,
 `controllers`, содержащие код, соответствующий шаблону проектирования MVC.
 
 Вы можете задать свойство [[yii\base\Application::basePath|basePath]] используя путь к директории или используя
@@ -71,7 +71,7 @@ $config = require __DIR__ . '/../config/web.php';
 
 ### Важные свойства <span id="important-properties"></span>
 
-Свойства, указанные в этом подразделе, часто нуждаются в преднастройке т.к. они разнятся от приложения к приложению.
+Свойства, указанные в этом подразделе, часто нуждаются в предварительной настройке т.к. они разнятся от приложения к приложению.
 
 
 #### [[yii\base\Application::aliases|aliases]] <span id="aliases"></span>
@@ -373,7 +373,7 @@ $width = \Yii::$app->params['thumbnail.size'][0];
 
 #### [[yii\base\Application::charset|charset]] <span id="charset"></span>
 
-Свойство указывает кодировку, которую использует приложение. По-умолчанию значение равно `'UTF-8'`, которое должно быть
+Свойство указывает кодировку, которую использует приложение. По-умолчанию значение равно `'UTF-8'` - должно быть
 оставлено как есть для большинства приложения, только если вы не работаете с устаревшим кодом, который использует большее
 количество данных не юникода.
 
@@ -509,7 +509,7 @@ $width = \Yii::$app->params['thumbnail.size'][0];
 
 ### [[yii\base\Application::EVENT_BEFORE_REQUEST|EVENT_BEFORE_REQUEST]] <span id="beforeRequest"></span>
 
-Данное событие возникает *до* того как приложение начинает обрабатывать входящий запрос. 
+Данное событие возникает *до* того, как приложение начинает обрабатывать входящий запрос. 
 Настоящее имя события - `beforeRequest`.
 
 На момент возникновения данного события, объект приложения уже создан и проинициализирован. Таким образом, это
@@ -520,7 +520,7 @@ $width = \Yii::$app->params['thumbnail.size'][0];
 
 ### [[yii\base\Application::EVENT_AFTER_REQUEST|EVENT_AFTER_REQUEST]] <span id="afterRequest"></span>
 
-Данное событие возникает *после* того как приложение заканчивает обработку запроса, но *до* того как произойдет 
+Данное событие возникает *после* того, как приложение заканчивает обработку запроса, но *до* того как произойдет 
 отправка ответа. Настоящее имя события - `afterRequest`.
 
 На момент возникновения данного события, обработка запроса завершена и вы можете воспользоваться этим для произведения постобработки
@@ -532,7 +532,7 @@ $width = \Yii::$app->params['thumbnail.size'][0];
 
 ### [[yii\base\Application::EVENT_BEFORE_ACTION|EVENT_BEFORE_ACTION]] <span id="beforeAction"></span>
 
-Событие возникает *до* того как будет выполнено [действие контроллера](structure-controllers.md).
+Событие возникает *до* того, как будет выполнено [действие контроллера](structure-controllers.md).
 Настоящее имя события - `beforeAction`.
 
 Событие является объектом [[yii\base\ActionEvent]]. Обработчик события может устанавливать
@@ -571,7 +571,7 @@ $width = \Yii::$app->params['thumbnail.size'][0];
 [
     'on afterAction' => function ($event) {
         if (некоторое условие) {
-            // modify $event->result
+            // обрабатываем $event->result
         } else {
         }
     },
diff --git a/docs/guide-ru/structure-controllers.md b/docs/guide-ru/structure-controllers.md
index 966765dab23..59bf52ec148 100644
--- a/docs/guide-ru/structure-controllers.md
+++ b/docs/guide-ru/structure-controllers.md
@@ -188,7 +188,7 @@ ID контроллеров также могут содержать префи
 
 ## Создание действий <span id="creating-actions"></span>
 
-Создание действий не представляет сложностей также как и объявление так называемых *методов действий* в классе контроллера. Метод действия
+Создание действий не представляет сложностей так же как и объявление так называемых *методов действий* в классе контроллера. Метод действия
 это *public* метод, имя которого начинается со слова `action`. Возвращаемое значение метода действия представляет собой ответные данные,
 которые будут высланы конечному пользователю. Приведенный ниже код определяет два действия `index` и `hello-world`:
 
@@ -305,7 +305,7 @@ class HelloWorldAction extends Action
 в качестве ответа.
 
 * Для [[yii\web\Application|Веб приложений]], возвращаемое значение также может быть произвольными данными, которые будут
-  присвоены [[yii\web\Response::data]], а затем сконвертированы в строку, представляющую тело ответа.
+  присвоены [[yii\web\Response::data]], а затем конвертированы в строку, представляющую тело ответа.
 * Для [[yii\console\Application|Консольных приложений]], возвращаемое значение также может быть числом, представляющим
   [[yii\console\Response::exitStatus|статус выхода]] исполнения команды.
 
@@ -367,7 +367,7 @@ public function actionView(array $id, $version = null)
 
 Теперь, если запрос будет содержать URL `http://hostname/index.php?r=post/view&id[]=123`, то параметр `$id` примет значение
 `['123']`. Если запрос будет содержать URL `http://hostname/index.php?r=post/view&id=123`, то параметр `$id` все равно будет
-содержать массив, т. к. скалярное значение `'123'` будет автоматически сконвертировано в массив.
+содержать массив, т. к. скалярное значение `'123'` будет автоматически конвертировано в массив.
 
 Вышеприведенные примеры в основном показывают как параметры действий работают для Веб приложений. Больше информации
 о параметрах консольных приложений представлено в секции [Консольные команды](tutorial-console.md).
diff --git a/docs/guide-ru/structure-models.md b/docs/guide-ru/structure-models.md
index e5e63e2dff8..b2452dc7bd4 100644
--- a/docs/guide-ru/structure-models.md
+++ b/docs/guide-ru/structure-models.md
@@ -143,7 +143,7 @@ $model = new User(['scenario' => User::SCENARIO_LOGIN]);
 ```
 
 По умолчанию сценарии, поддерживаемые моделью, определяются [правилами валидации](#validation-rules) объявленными
-в модели. Однако, Вы можете изменить это поведение путем переопределения метода [[yii\base\Model::scenarios()]] как показано ниже:
+в модели. Однако Вы можете изменить это поведение путем переопределения метода [[yii\base\Model::scenarios()]] как показано ниже:
 
 ```php
 namespace app\models;
@@ -169,7 +169,7 @@ class User extends ActiveRecord
 
 Метод `scenarios()` возвращает массив, ключами которого являются имена сценариев, а значения - соответствующие *активные атрибуты*. Активные атрибуты могут быть [массово присвоены](#massive-assignment) и подлежат [валидации](#validation-rules). В приведенном выше примере, атрибуты `username` и `password` это активные атрибуты сценария `login`, а в сценарии `register` так же активным атрибутом является `email` вместе с `username` и `password`.
 
-По умолчанию реализация `scenarios()` вернёт все найденные сценарии в правилах валидации задекларированных в методе [[yii\base\Model::rules()]]. При переопределении метода `scenarios()`, если Вы хотите ввести новые сценарии помимо стандартных, Вы можете написать код на основе следующего примера:
+По умолчанию реализация `scenarios()` вернёт все найденные сценарии в правилах валидации, задекларированных в методе [[yii\base\Model::rules()]]. При переопределении метода `scenarios()`, если Вы хотите ввести новые сценарии помимо стандартных, Вы можете написать код на основе следующего примера:
 
 ```php
 namespace app\models;
@@ -326,14 +326,14 @@ $model->secret = $secret;
 Часто нужно экспортировать модели в различные форматы. Например, может потребоваться преобразовать коллекцию моделей в JSON или Excel формат. Процесс экспорта может быть разбит на два самостоятельных шага. На первом этапе модели преобразуются в массивы; на втором этапе массивы преобразуются в целевые форматы. Вы можете сосредоточиться только на первом шаге потому, что второй шаг может быть достигнут путем универсального инструмента форматирования данных, такого как [[yii\web\JsonResponseFormatter]].
 
 Самый простой способ преобразования модели в массив - использовать свойство [[yii\base\Model::$attributes]].
-Например,
+Например
 
 ```php
 $post = \app\models\Post::findOne(100);
 $array = $post->attributes;
 ```
 
-По умолчанию, свойство [[yii\base\Model::$attributes]] возвращает значения *всех* атрибутов объявленных в [[yii\base\Model::attributes()]].
+По умолчанию свойство [[yii\base\Model::$attributes]] возвращает значения *всех* атрибутов объявленных в [[yii\base\Model::attributes()]].
 
 Более гибкий и мощный способ конвертирования модели в массив - использовать метод [[yii\base\Model::toArray()]]. Его поведение по умолчанию такое же как и у [[yii\base\Model::$attributes]]. Тем не менее, он позволяет выбрать, какие элементы данных, называемые *полями*, поставить в результирующий массив и как они должны быть отформатированы. На самом деле, этот способ экспорта моделей по умолчанию применяется при разработке в RESTful Web service, как описано в [Response Formatting](rest-response-formatting.md).
 
diff --git a/docs/guide-ru/structure-modules.md b/docs/guide-ru/structure-modules.md
index ec9d57429f3..8b1fce134f6 100644
--- a/docs/guide-ru/structure-modules.md
+++ b/docs/guide-ru/structure-modules.md
@@ -1,7 +1,7 @@
 Модули
 =======
 
-Модули - это законченные программные блоки, состоящие из [моделей](structure-models.md), [представлений](structure-views.md), [контроллеров](structure-controllers.md) и других вспомогательных компонентов. При установке модулей в [приложение](structure-applications.md), конечный пользователь получает доступ к их контроллерам. По этой причине модули часто рассматриваются как миниатюрные приложения. В отличии от [приложений](structure-applications.md), модули нельзя развертывать отдельно. Модули должны находиться внутри приложений.
+Модули - это законченные программные блоки, состоящие из [моделей](structure-models.md), [представлений](structure-views.md), [контроллеров](structure-controllers.md) и других вспомогательных компонентов. При установке модулей в [приложение](structure-applications.md), конечный пользователь получает доступ к их контроллерам. По этой причине модули часто рассматриваются как миниатюрные приложения. В отличие от [приложений](structure-applications.md), модули нельзя развертывать отдельно. Модули должны находиться внутри приложений.
 
 
 ## Создание модулей <span id="creating-modules"></span>
diff --git a/docs/guide-ru/test-environment-setup.md b/docs/guide-ru/test-environment-setup.md
index bc537476cf7..a85c61243be 100644
--- a/docs/guide-ru/test-environment-setup.md
+++ b/docs/guide-ru/test-environment-setup.md
@@ -14,7 +14,7 @@ Yii 2 официально поддерживает интеграцию с фр
 [`yii2-basic`](https://github.com/yiisoft/yii2-app-basic) и
 [`yii2-advanced`](https://github.com/yiisoft/yii2-app-advanced).
 
-Для того, чтобы запустить тесты необходимо установить [Codeception](https://github.com/Codeception/Codeception).
+Для того, чтобы запустить тесты, необходимо установить [Codeception](https://github.com/Codeception/Codeception).
 Сделать это можно как локально, то есть только для текущего проекта, так и глобально для компьютера разработчика.
 
 Для локальной установки используйте следующие команды:
diff --git a/docs/guide-ru/test-fixtures.md b/docs/guide-ru/test-fixtures.md
index 75abc4ace16..56a054ccb09 100644
--- a/docs/guide-ru/test-fixtures.md
+++ b/docs/guide-ru/test-fixtures.md
@@ -11,7 +11,7 @@
 загружаете один или несколько объектов фикстур перед запуском теста и выгружаете их после его завершения.
 
 Фикстура может зависеть от других фикстур, заданных через свойство [[yii\test\Fixture::depends]].
-Когда фикстура загружается, фикстуры от которых она зависит будут автоматически загружены ДО нее, а когда она 
+Когда фикстура загружается, фикстуры, от которых она зависит, будут автоматически загружены ДО нее, а когда она 
 выгружается все зависимые фикстуры будут выгружены ПОСЛЕ нее.
  
 
diff --git a/docs/guide-ru/test-overview.md b/docs/guide-ru/test-overview.md
index 3c7668e1ffd..544993ad6c0 100644
--- a/docs/guide-ru/test-overview.md
+++ b/docs/guide-ru/test-overview.md
@@ -14,7 +14,7 @@
 
 Процесс разработки фичи следующий:
 
-- Создать новый тест, который описывает функцию, которая будет реализована.
+- Создать новый тест, описывающий функцию, которая будет реализована.
 - Запустить новый тест и убедиться, что он терпит неудачу. Это ожидаемо, т.к. на данный момент еще нет конкретной реализации.
 - Написать простой код, чтобы новый тест отрабатывал без ошибок.
 - Запустить все тесты и убедиться, что они отрабатывают без ошибок
diff --git a/docs/guide-ru/tutorial-i18n.md b/docs/guide-ru/tutorial-i18n.md
index fad413a83bb..d010588353c 100644
--- a/docs/guide-ru/tutorial-i18n.md
+++ b/docs/guide-ru/tutorial-i18n.md
@@ -497,7 +497,7 @@ class TranslationEventHandler
 
 Переводы могут храниться в [[yii\i18n\PhpMessageSource|PHP-файлах]], [[yii\i18n\GettextMessageSource|файлах .po]] или в [[yii\i18n\DbMessageSource|базе данных]]. См. соответствующие классы для дополнительных опций.
 
-Прежде всего, вам необходимо создать конфигурационный файл. Решите где вы хотите хранить его и затем выполните команду
+Прежде всего, вам необходимо создать конфигурационный файл. Решите, где вы хотите хранить его и затем выполните команду
 
 ```bash
 ./yii message/config-template path/to/config.php
@@ -557,7 +557,7 @@ class TranslationEventHandler
 Для работы с большей частью функций интернационализации Yii использует [PHP-расширение intl](https://secure.php.net/manual/ru/book.intl.php).
 Например, это расширение используют классы, отвечающие за форматирование чисел и дат [[yii\i18n\Formatter]] и за форматирование
 строк [[yii\i18n\MessageFormatter]]. Оба класса поддерживают базовый функционал даже в том случае, если расширение `intl` не
-установлено. Однако, этот запасной вариант более-менее будет работать только для сайтов на английском языке, хотя даже для
+установлено. Однако этот запасной вариант более или менее будет работать только для сайтов на английском языке, хотя даже для
 них большая часть широких возможностей расширения `intl` не будет доступна, поэтому его установка настоятельно рекомендуется.
 
 [PHP-расширение intl](https://secure.php.net/manual/ru/book.intl.php) основано на [библиотеке ICU](http://site.icu-project.org/), которая
diff --git a/docs/guide-ru/tutorial-performance-tuning.md b/docs/guide-ru/tutorial-performance-tuning.md
index 090f225d2ce..fa9162bad3a 100644
--- a/docs/guide-ru/tutorial-performance-tuning.md
+++ b/docs/guide-ru/tutorial-performance-tuning.md
@@ -19,7 +19,7 @@
 
 При запуске приложения в производственном режиме, вам нужно отключить режим отладки. Yii использует значение константы
 `YII_DEBUG` чтобы указать, следует ли включить режим отладки. Когда режим отладки включен, Yii тратит дополнительное 
-время чтобы создать и записать отладочную информацию.
+время, чтобы создать и записать отладочную информацию.
 
 Вы можете разместить следующую строку кода в начале [входного скрипта](structure-entry-scripts.md) чтобы 
 отключить режим отладки:
@@ -154,7 +154,7 @@ CREATE TABLE session (
 ## Использование обычных массивов <span id="using-arrays"></span>
 
 Хотя [Active Record](db-active-record.md) очень удобно использовать, это не так эффективно, как использование простых 
-массивов, когда вам нужно получить большое количество данных из БД. В этом случае, вы можете вызвать `asArray()` при 
+массивов, когда вам нужно получить большое количество данных из БД. В этом случае вы можете вызвать `asArray()` при 
 использовании Active Record для получения данных, чтобы извлеченные данные были представлены в виде массивов вместо 
 громоздких записей Active Record. Например,
 
@@ -189,7 +189,7 @@ composer dumpautoload -o
 
 ## Асинхронная обработка данных <span id="processing-data-offline"></span>
 
-Когда запрос включает в себя некоторые ресурсоемкие операции, вы должны подумать о том, чтобы выполнить эти операции 
+Когда запрос включает в себя некоторые ресурсоёмкие операции, вы должны подумать о том, чтобы выполнить эти операции 
 асинхронно, не заставляя пользователя ожидать их окончания.
 
 Существует два метода асинхронной обработки данных: pull и push. 
diff --git a/docs/guide-ru/tutorial-yii-as-micro-framework.md b/docs/guide-ru/tutorial-yii-as-micro-framework.md
index a4e5f2f6609..39a7b25ff84 100644
--- a/docs/guide-ru/tutorial-yii-as-micro-framework.md
+++ b/docs/guide-ru/tutorial-yii-as-micro-framework.md
@@ -122,7 +122,7 @@ micro-app/
 
 ## Создание REST API
 
-Чтобы продемонстрировать использование нашей "микроархитектуры" мы создадим простой REST API для сообщений.
+Чтобы продемонстрировать использование нашей "микроархитектуры", мы создадим простой REST API для сообщений.
 
 Чтобы этот API обслуживал некоторые данные, нам нужна база данных. Добавим конфигурацию подключения базы данных
 к конфигурации приложения:
diff --git a/docs/guide-zh-CN/README.md b/docs/guide-zh-CN/README.md
index cf450d88b86..ddb2baa1737 100644
--- a/docs/guide-zh-CN/README.md
+++ b/docs/guide-zh-CN/README.md
@@ -79,10 +79,10 @@ Yii 2.0 权威指南
 * [查询生成器（Query Builder）](db-query-builder.md): 使用简单抽象层查询数据库
 * [活动记录（Active Record）](db-active-record.md): 活动记录对象关系映射（ORM），检索和操作记录、定义关联关系
 * [数据库迁移（Migrations）](db-migrations.md): 在团体开发中对你的数据库使用版本控制
-* [Sphinx](https://github.com/yiisoft/yii2-sphinx/blob/master/docs/guide-zh-CN/README.md)
-* [Redis（yii2-redis）](yii2-redis.md): yii2-redis 扩展详解
-* [MongoDB](https://github.com/yiisoft/yii2-mongodb/blob/master/docs/guide-zh-CN/README.md)
-* [ElasticSearch](https://github.com/yiisoft/yii2-elasticsearch/blob/master/docs/guide-zh-CN/README.md)
+* [Sphinx](https://www.yiiframework.com/extension/yiisoft/yii2-sphinx/doc/guide)
+* [Redis（yii2-redis）](https://www.yiiframework.com/extension/yiisoft/yii2-redis/doc/guide/2.0/zh-cn): yii2-redis 扩展详解
+* [MongoDB](https://www.yiiframework.com/extension/yiisoft/yii2-mongodb/doc/guide)
+* [ElasticSearch](https://www.yiiframework.com/extension/yiisoft/yii2-elasticsearch/doc/guide)
 
 
 接收用户数据（Getting Data from Users）
diff --git a/docs/guide-zh-CN/concept-properties.md b/docs/guide-zh-CN/concept-properties.md
index ec9fc5f4bb7..9dff1da2b4d 100644
--- a/docs/guide-zh-CN/concept-properties.md
+++ b/docs/guide-zh-CN/concept-properties.md
@@ -16,11 +16,11 @@ $object->label = trim($label);
 就不得不修改所有给 `label` 属性赋值的代码。这种代码的重复会导致 bug，
 这种实践显然需要尽可能避免。
 
-为解决该问题，Yii 引入了一个名为 [[yii\base\Object]] 的基类，
+为解决该问题，Yii 引入了一个名为 [[yii\base\BaseObject]] 的基类，
 它支持基于类内的 *getter* 和 *setter*（读取器和设定器）方法来定义属性。
-如果某类需要支持这个特性，只需要继承 [[yii\base\Object]] 或其子类即可。
+如果某类需要支持这个特性，只需要继承 [[yii\base\BaseObject]] 或其子类即可。
 
-> Info: 几乎每个 Yii 框架的核心类都继承自 [[yii\base\Object]] 或其子类。
+> Info: 几乎每个 Yii 框架的核心类都继承自 [[yii\base\BaseObject]] 或其子类。
   这意味着只要在核心类中见到 getter 或 setter 方法，就可以像调用属性一样调用它。
 
 getter 方法是名称以 `get` 开头的方法，而 setter 方法名以 `set` 开头。
diff --git a/docs/guide/concept-di-container.md b/docs/guide/concept-di-container.md
index cbb050a4d2e..b771a3d1750 100644
--- a/docs/guide/concept-di-container.md
+++ b/docs/guide/concept-di-container.md
@@ -241,6 +241,9 @@ $db = $container->get('db');
 
 // equivalent to: $engine = new \app\components\SearchEngine($apiKey, $apiSecret, ['type' => 1]);
 $engine = $container->get('app\components\SearchEngine', [$apiKey, $apiSecret], ['type' => 1]);
+
+// equivalent to: $api = new \app\components\Api($host, $apiKey);
+$api = $container->get('app\components\Api', ['host' => $host, 'apiKey' => $apiKey]);
 ```
 
 Behind the scene, the DI container does much more work than just creating a new object.
diff --git a/docs/guide/runtime-sessions-cookies.md b/docs/guide/runtime-sessions-cookies.md
index 92e07604761..384b62b3b8e 100644
--- a/docs/guide/runtime-sessions-cookies.md
+++ b/docs/guide/runtime-sessions-cookies.md
@@ -403,3 +403,4 @@ To use this feature across different PHP versions check the version first. E.g.
 As [noted in PHP manual](https://www.php.net/manual/en/session.security.ini.php), `php.ini` has important
 session security settings. Please ensure recommended settings are applied. Especially `session.use_strict_mode`
 that is not enabled by default in PHP installations.
+This setting can also be set with [[yii\web\Session::useStrictMode]].
diff --git a/docs/guide/tutorial-core-validators.md b/docs/guide/tutorial-core-validators.md
index d731ba9dd88..1b5a7e4a102 100644
--- a/docs/guide/tutorial-core-validators.md
+++ b/docs/guide/tutorial-core-validators.md
@@ -155,7 +155,8 @@ specified via [[yii\validators\DateValidator::timestampAttribute|timestampAttrib
   [[yii\validators\DateValidator::$timestampAttributeTimeZone|$timestampAttributeTimeZone]].
   
   Note, that when using `timestampAttribute`, the input value will be converted to a unix timestamp, which by definition is in UTC, so
-  a conversion from the [[yii\validators\DateValidator::timeZone|input time zone]] to UTC will be performed.
+  a conversion from the [[yii\validators\DateValidator::timeZone|input time zone]] to UTC will be performed (this behavior 
+  can be changed by setting [[yii\validators\DateValidator::$defaultTimeZone|$defaultTimeZone]] since 2.0.39).
 
 - Since version 2.0.4 it is also possible to specify a [[yii\validators\DateValidator::$min|minimum]] or
   [[yii\validators\DateValidator::$max|maximum]] timestamp.
@@ -191,8 +192,8 @@ or `1970-01-01` in the input field of a date picker.
 This validator does not validate data. Instead, it assigns a default value to the attributes being validated
 if the attributes are empty.
 
-- `value`: the default value or a PHP callable that returns the default value which will be assigned to
-  the attributes being validated if they are empty. The signature of the PHP callable should be as follows,
+- `value`: the default value or a closure as callback that returns the default value which will be assigned to
+  the attributes being validated if they are empty. The signature of the closure should be as follows,
 
 ```php
 function foo($model, $attribute) {
diff --git a/src/BaseYii.php b/src/BaseYii.php
index e2c4097e42a..6aebd46bbee 100644
--- a/src/BaseYii.php
+++ b/src/BaseYii.php
@@ -93,7 +93,7 @@ class BaseYii
      */
     public static function getVersion()
     {
-        return '2.0.38-dev';
+        return '2.0.39.1';
     }
 
     /**
diff --git a/src/CHANGELOG.md b/src/CHANGELOG.md
index 255deb74e6a..3480bcb26d0 100644
--- a/src/CHANGELOG.md
+++ b/src/CHANGELOG.md
@@ -1,24 +1,53 @@
 Yii Framework 2 Change Log
 ==========================
 
-2.0.38 under development
+2.0.39.1 November 10, 2020
+--------------------------
+
+- Bug #18373: Fix not taking default value when unable to resolve non-exing class via DI container (vjik)
+- Enh #18370: Add option to provide a string replacement for `null` value in `yii\data\DataFilter` (bizley)
+
+
+2.0.39 November 10, 2020
 ------------------------
 
-- Enh #18213: Do not load fixtures with circular dependencies twice instead of throwing an exception (JesseHines0)
-- Bug #18066: Fix `yii\db\Query::create()` wasn't using all info from `withQuery()` (maximkou)
-- Bug #18269: Fix integer safe attribute to work properly in `yii\base\Model` (Ladone)
-- Enh #18236: Allow `yii\filters\RateLimiter` to accept a closure function for the `$user` property in order to assign values on runtime (nadar)
-- Bug #18248: Render only one stack trace on a console for chained exceptions (mikehaertl)
-- Bug #18233: Add PHP 8 support (samdark)
-- Enh #18196: `yii\rbac\DbManager::$checkAccessAssignments` is now `protected` (alex-code)
-- Bug #18239: Fix support of no-extension files for `FileValidator::validateExtension()` (darkdef)
-- Bug #18229: Add a flag to specify SyBase database when used with pdo_dblib (darkdef)
+- Bug #16418: Fix `yii\data\Pagination::getLinks()` to return links to the first and the last pages regardless of the current page (ptz-nerf, bizley)
+- Bug #16831: Fix console Table widget does not render correctly in combination with ANSI formatting (issidorov, cebe)
+- Bug #18160, #18192: Fix `registerFile` with set argument `depends` does not take `position` and `appendTimestamp` into account (baleeny)
+- Bug #18263: Fix writing `\yii\caching\FileCache` files to the same directory when `keyPrefix` is set (githubjeka)
+- Bug #18287: Fix for `OUTPUT INSERTED` and computed columns. Add flag to mark computed values in table schema (darkdef)
+- Bug #18290: Fix response with non-seekable streams (schmunk42)
+- Bug #18297: Replace usage of deprecated `ReflectionParameter::isArray()` method in PHP8 (baletskyi)
+- Bug #18303: Fix creating migration for column methods used after `defaultValues` (wsaid)
+- Bug #18308: Fix `\yii\base\Model::getErrorSummary()` reverse order (DrDeath72)
+- Bug #18313: Fix multipart form data parsing with double quotes (wsaid)
+- Bug #18317: Additional PHP 8 compatibility fixes (samdark, bizley)
+- Enh #18247: Add support for the 'session.use_strict_mode' ini directive in `yii\web\Session` (rhertogh)
+- Enh #18285: Enhanced DI container to allow passing parameters by name in a constructor (vjik)
+- Enh #18304: Add support of constructor parameters with default values to DI container (vjik)
+- Enh #18351: Add option to change default timezone for parsing formats without time part in `yii\validators\DateValidator` (bizley)
+
+
+2.0.38 September 14, 2020
+-------------------------
+
 - Bug #13973: Correct alterColumn for MSSQL & drop constraints before dropping a column (darkdef)
-- Bug #18040: Display width specification for integer data types was deprecated in MySQL 8.0.19 (terabytesoftw)
 - Bug #15265: PostgreSQL > 10.0 is not pass tests with default value of timestamp CURRENT_TIMESTAMP (terabytesoftw)
-- Bug #18232: Fail tests pgsql v-10.14, v-11.9, v-12-latest (terabytesoftw)
 - Bug #16892: Validation error class was not applied to checkbox and radio when validationStateOn = self::VALIDATION_STATE_ON_INPUT (dan-szabo, samdark)
+- Bug #18040: Display width specification for integer data types was deprecated in MySQL 8.0.19 (terabytesoftw)
+- Bug #18066: Fix `yii\db\Query::create()` wasn't using all info from `withQuery()` (maximkou)
+- Bug #18229: Add a flag to specify SyBase database when used with pdo_dblib (darkdef)
+- Bug #18232: Fail tests pgsql v-10.14, v-11.9, v-12-latest (terabytesoftw)
+- Bug #18233: Add PHP 8 support (samdark)
+- Bug #18239: Fix support of no-extension files for `FileValidator::validateExtension()` (darkdef)
 - Bug #18245: Make resolving DI references inside of arrays in dependencies optional (SamMousa, samdark, hiqsol)
+- Bug #18248: Render only one stack trace on a console for chained exceptions (mikehaertl)
+- Bug #18269: Fix integer safe attribute to work properly in `yii\base\Model` (Ladone)
+- Bug: (CVE-2020-15148): Disable unserialization of `yii\db\BatchQueryResult` to prevent remote code execution in case application calls unserialize() on user input containing specially crafted string (samdark, russtone)
+- Enh #18196: `yii\rbac\DbManager::$checkAccessAssignments` is now `protected` (alex-code)
+- Enh #18213: Do not load fixtures with circular dependencies twice instead of throwing an exception (JesseHines0)
+- Enh #18236: Allow `yii\filters\RateLimiter` to accept a closure function for the `$user` property in order to assign values on runtime (nadar)
+
 
 2.0.37 August 07, 2020
 ----------------------
diff --git a/src/UPGRADE.md b/src/UPGRADE.md
index b151c334537..0796fb183e4 100644
--- a/src/UPGRADE.md
+++ b/src/UPGRADE.md
@@ -51,6 +51,47 @@ if you want to upgrade from version A to version C and there is
 version B between A and C, you need to follow the instructions
 for both A and B.
 
+Upgrade from Yii 2.0.38
+-----------------------
+
+* The storage structure of the file cache has been changed when you use `\yii\caching\FileCache::$keyPrefix`.
+It is worth warming up the cache again if there is a logical dependency when working with the file cache.
+
+* `yii\web\Session` now respects the 'session.use_strict_mode' ini directive.
+  In case you use a custom `Session` class and have overwritten the `Session::openSession()` and/or 
+  `Session::writeSession()` functions changes might be required:
+  * When in strict mode the `openSession()` function should check if the requested session id exists
+    (and mark it for forced regeneration if not).
+    For example, the `DbSession` does this at the beginning of the function as follows:
+    ```php
+    if ($this->getUseStrictMode()) {
+        $id = $this->getId();
+        if (!$this->getReadQuery($id)->exists()) {
+            //This session id does not exist, mark it for forced regeneration
+            $this->_forceRegenerateId = $id;
+        }
+    }
+    // ... normal function continues ...
+    ``` 
+  * When in strict mode the `writeSession()` function should ignore writing the session under the old id.
+    For example, the `DbSession` does this at the beginning of the function as follows:
+    ```php
+    if ($this->getUseStrictMode() && $id === $this->_forceRegenerateId) {
+        //Ignore write when forceRegenerate is active for this id
+        return true;
+    }
+    // ... normal function continues ...
+    ```
+  > Note: The sample code above is specific for the `yii\web\DbSession` class.
+    Make sure you use the correct implementation based on your parent class,
+    e.g. `yii\web\CacheSession`, `yii\redis\Session`, `yii\mongodb\Session`, etc.
+  
+  > Note: In case your custom functions call their `parent` functions, there are probably no changes needed to your 
+    code if those parents implement the `useStrictMode` checks.
+
+  > Warning: in case `openSession()` and/or `writeSession()` functions do not implement the `useStrictMode` code
+    the session could be stored under a malicious id without warning even if `useStrictMode` is enabled.
+
 Upgrade from Yii 2.0.37
 -----------------------
 
diff --git a/src/base/Action.php b/src/base/Action.php
index bf6464e1c09..5a9413cf296 100644
--- a/src/base/Action.php
+++ b/src/base/Action.php
@@ -30,7 +30,7 @@
  *
  * For more details and usage information on Action, see the [guide article on actions](guide:structure-controllers).
  *
- * @property string $uniqueId The unique ID of this action among the whole application. This property is
+ * @property-read string $uniqueId The unique ID of this action among the whole application. This property is
  * read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
diff --git a/src/base/Application.php b/src/base/Application.php
index d7771bf636f..94f4be11787 100644
--- a/src/base/Application.php
+++ b/src/base/Application.php
@@ -14,33 +14,39 @@
  *
  * For more details and usage information on Application, see the [guide article on applications](guide:structure-applications).
  *
- * @property \yii\web\AssetManager $assetManager The asset manager application component. This property is
- * read-only.
- * @property \yii\rbac\ManagerInterface $authManager The auth manager application component. Null is returned
- * if auth manager is not configured. This property is read-only.
+ * @property-read \yii\web\AssetManager $assetManager The asset manager application component. This property
+ * is read-only.
+ * @property-read \yii\rbac\ManagerInterface $authManager The auth manager application component. Null is
+ * returned if auth manager is not configured. This property is read-only.
  * @property string $basePath The root directory of the application.
- * @property \yii\caching\CacheInterface $cache The cache application component. Null if the component is not
- * enabled. This property is read-only.
- * @property array $container Values given in terms of name-value pairs. This property is write-only.
- * @property \yii\db\Connection $db The database connection. This property is read-only.
- * @property \yii\web\ErrorHandler|\yii\console\ErrorHandler $errorHandler The error handler application
+ * @property-read \yii\caching\CacheInterface $cache The cache application component. Null if the component is
+ * not enabled. This property is read-only.
+ * @property-write array $container Values given in terms of name-value pairs. This property is write-only.
+ * @property-read \yii\db\Connection $db The database connection. This property is read-only.
+ * @property-read \yii\web\ErrorHandler|\yii\console\ErrorHandler $errorHandler The error handler application
  * component. This property is read-only.
- * @property \yii\i18n\Formatter $formatter The formatter application component. This property is read-only.
- * @property \yii\i18n\I18N $i18n The internationalization application component. This property is read-only.
- * @property \yii\log\Dispatcher $log The log dispatcher application component. This property is read-only.
- * @property \yii\mail\MailerInterface $mailer The mailer application component. This property is read-only.
- * @property \yii\web\Request|\yii\console\Request $request The request component. This property is read-only.
- * @property \yii\web\Response|\yii\console\Response $response The response component. This property is
+ * @property-read \yii\i18n\Formatter $formatter The formatter application component. This property is
+ * read-only.
+ * @property-read \yii\i18n\I18N $i18n The internationalization application component. This property is
+ * read-only.
+ * @property-read \yii\log\Dispatcher $log The log dispatcher application component. This property is
+ * read-only.
+ * @property-read \yii\mail\MailerInterface $mailer The mailer application component. This property is
+ * read-only.
+ * @property-read \yii\web\Request|\yii\console\Request $request The request component. This property is
+ * read-only.
+ * @property-read \yii\web\Response|\yii\console\Response $response The response component. This property is
  * read-only.
  * @property string $runtimePath The directory that stores runtime files. Defaults to the "runtime"
  * subdirectory under [[basePath]].
- * @property \yii\base\Security $security The security application component. This property is read-only.
+ * @property-read \yii\base\Security $security The security application component. This property is read-only.
  * @property string $timeZone The time zone used by this application.
- * @property string $uniqueId The unique ID of the module. This property is read-only.
- * @property \yii\web\UrlManager $urlManager The URL manager for this application. This property is read-only.
+ * @property-read string $uniqueId The unique ID of the module. This property is read-only.
+ * @property-read \yii\web\UrlManager $urlManager The URL manager for this application. This property is
+ * read-only.
  * @property string $vendorPath The directory that stores vendor files. Defaults to "vendor" directory under
  * [[basePath]].
- * @property View|\yii\web\View $view The view application component that is used to render various view
+ * @property-read View|\yii\web\View $view The view application component that is used to render various view
  * files. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
diff --git a/src/base/Component.php b/src/base/Component.php
index 89bd36a29fc..65516e281fc 100644
--- a/src/base/Component.php
+++ b/src/base/Component.php
@@ -93,7 +93,8 @@
  *
  * For more details and usage information on Component, see the [guide article on components](guide:concept-components).
  *
- * @property Behavior[] $behaviors List of behaviors attached to this component. This property is read-only.
+ * @property-read Behavior[] $behaviors List of behaviors attached to this component. This property is
+ * read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/base/Controller.php b/src/base/Controller.php
index 79e4dc1efef..e15b091eb0f 100644
--- a/src/base/Controller.php
+++ b/src/base/Controller.php
@@ -16,12 +16,12 @@
  *
  * For more details and usage information on Controller, see the [guide article on controllers](guide:structure-controllers).
  *
- * @property Module[] $modules All ancestor modules that this controller is located within. This property is
- * read-only.
- * @property string $route The route (module ID, controller ID and action ID) of the current request. This
+ * @property-read Module[] $modules All ancestor modules that this controller is located within. This property
+ * is read-only.
+ * @property-read string $route The route (module ID, controller ID and action ID) of the current request.
+ * This property is read-only.
+ * @property-read string $uniqueId The controller ID that is prefixed with the module ID (if any). This
  * property is read-only.
- * @property string $uniqueId The controller ID that is prefixed with the module ID (if any). This property is
- * read-only.
  * @property View|\yii\web\View $view The view object that can be used to render views or view files.
  * @property string $viewPath The directory containing the view files for this controller.
  *
diff --git a/src/base/ErrorException.php b/src/base/ErrorException.php
index f3ba4d90bb1..c06111b57dd 100644
--- a/src/base/ErrorException.php
+++ b/src/base/ErrorException.php
@@ -33,14 +33,14 @@ class ErrorException extends \ErrorException
     /**
      * Constructs the exception.
      * @link https://secure.php.net/manual/en/errorexception.construct.php
-     * @param $message [optional]
-     * @param $code [optional]
-     * @param $severity [optional]
-     * @param $filename [optional]
-     * @param $lineno [optional]
-     * @param $previous [optional]
+     * @param string $message [optional]
+     * @param int $code [optional]
+     * @param int $severity [optional]
+     * @param string $filename [optional]
+     * @param int $lineno [optional]
+     * @param \Throwable|\Exception $previous [optional]
      */
-    public function __construct($message = '', $code = 0, $severity = 1, $filename = __FILE__, $lineno = __LINE__, \Exception $previous = null)
+    public function __construct($message = '', $code = 0, $severity = 1, $filename = __FILE__, $lineno = __LINE__, $previous = null)
     {
         parent::__construct($message, $code, $severity, $filename, $lineno, $previous);
 
diff --git a/src/base/ErrorHandler.php b/src/base/ErrorHandler.php
index 07b3c3cc168..8d98dafe789 100644
--- a/src/base/ErrorHandler.php
+++ b/src/base/ErrorHandler.php
@@ -298,7 +298,7 @@ public function handleFatalError()
 
     /**
      * Renders the exception.
-     * @param \Exception $exception the exception to be rendered.
+     * @param \Exception|\Error|\Throwable $exception the exception to be rendered.
      */
     abstract protected function renderException($exception);
 
@@ -336,7 +336,7 @@ public function clearOutput()
      *
      * This method can be used to convert exceptions inside of methods like `__toString()`
      * to PHP errors because exceptions cannot be thrown inside of them.
-     * @param \Exception $exception the exception to convert to a PHP error.
+     * @param \Exception|\Throwable $exception the exception to convert to a PHP error.
      */
     public static function convertExceptionToError($exception)
     {
@@ -345,7 +345,7 @@ public static function convertExceptionToError($exception)
 
     /**
      * Converts an exception into a simple string.
-     * @param \Exception|\Error $exception the exception being converted
+     * @param \Exception|\Error|\Throwable $exception the exception being converted
      * @return string the string representation of the exception.
      */
     public static function convertExceptionToString($exception)
@@ -363,7 +363,7 @@ public static function convertExceptionToString($exception)
 
     /**
      * Converts an exception into a string that has verbose information about the exception and its trace.
-     * @param \Exception|\Error $exception the exception being converted
+     * @param \Exception|\Error|\Throwable $exception the exception being converted
      * @return string the string representation of the exception.
      *
      * @since 2.0.14
diff --git a/src/base/ExitException.php b/src/base/ExitException.php
index 9197b0f9aac..4fde6a8e800 100644
--- a/src/base/ExitException.php
+++ b/src/base/ExitException.php
@@ -28,9 +28,9 @@ class ExitException extends \Exception
      * @param int $status the exit status code
      * @param string $message error message
      * @param int $code error code
-     * @param \Exception $previous The previous exception used for the exception chaining.
+     * @param \Throwable|\Exception $previous The previous exception used for the exception chaining.
      */
-    public function __construct($status = 0, $message = null, $code = 0, \Exception $previous = null)
+    public function __construct($status = 0, $message = null, $code = 0, $previous = null)
     {
         $this->statusCode = $status;
         parent::__construct($message, $code, $previous);
diff --git a/src/base/Model.php b/src/base/Model.php
index b525b169447..085ec1a992b 100644
--- a/src/base/Model.php
+++ b/src/base/Model.php
@@ -37,19 +37,20 @@
  *
  * For more details and usage information on Model, see the [guide article on models](guide:structure-models).
  *
- * @property \yii\validators\Validator[] $activeValidators The validators applicable to the current
+ * @property-read \yii\validators\Validator[] $activeValidators The validators applicable to the current
  * [[scenario]]. This property is read-only.
  * @property array $attributes Attribute values (name => value).
- * @property array $errors An array of errors for all attributes. Empty array is returned if no error. The
- * result is a two-dimensional array. See [[getErrors()]] for detailed description. This property is read-only.
- * @property array $firstErrors The first errors. The array keys are the attribute names, and the array values
- * are the corresponding error messages. An empty array will be returned if there is no error. This property is
+ * @property-read array $errors An array of errors for all attributes. Empty array is returned if no error.
+ * The result is a two-dimensional array. See [[getErrors()]] for detailed description. This property is
  * read-only.
- * @property ArrayIterator $iterator An iterator for traversing the items in the list. This property is
+ * @property-read array $firstErrors The first errors. The array keys are the attribute names, and the array
+ * values are the corresponding error messages. An empty array will be returned if there is no error. This
+ * property is read-only.
+ * @property-read ArrayIterator $iterator An iterator for traversing the items in the list. This property is
  * read-only.
  * @property string $scenario The scenario that this model is in. Defaults to [[SCENARIO_DEFAULT]].
- * @property ArrayObject|\yii\validators\Validator[] $validators All the validators declared in the model.
- * This property is read-only.
+ * @property-read ArrayObject|\yii\validators\Validator[] $validators All the validators declared in the
+ * model. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
@@ -639,7 +640,7 @@ public function getErrorSummary($showAllErrors)
         $lines = [];
         $errors = $showAllErrors ? $this->getErrors() : $this->getFirstErrors();
         foreach ($errors as $es) {
-            $lines = array_merge((array)$es, $lines);
+            $lines = array_merge($lines, (array)$es);
         }
         return $lines;
     }
diff --git a/src/base/Module.php b/src/base/Module.php
index d5954162cbe..d8577d482ed 100644
--- a/src/base/Module.php
+++ b/src/base/Module.php
@@ -23,17 +23,17 @@
  *
  * For more details and usage information on Module, see the [guide article on modules](guide:structure-modules).
  *
- * @property array $aliases List of path aliases to be defined. The array keys are alias names (must start
- * with `@`) and the array values are the corresponding paths or aliases. See [[setAliases()]] for an example.
- * This property is write-only.
+ * @property-write array $aliases List of path aliases to be defined. The array keys are alias names (must
+ * start with `@`) and the array values are the corresponding paths or aliases. See [[setAliases()]] for an
+ * example. This property is write-only.
  * @property string $basePath The root directory of the module.
- * @property string $controllerPath The directory that contains the controller classes. This property is
+ * @property-read string $controllerPath The directory that contains the controller classes. This property is
  * read-only.
  * @property string $layoutPath The root directory of layout files. Defaults to "[[viewPath]]/layouts".
  * @property array $modules The modules (indexed by their IDs).
- * @property string $uniqueId The unique ID of the module. This property is read-only.
+ * @property-read string $uniqueId The unique ID of the module. This property is read-only.
  * @property string $version The version of this module. Note that the type of this property differs in getter
- * and setter. See [[getVersion()]] and [[setVersion()]] for details.
+ * and setter. See [[getVersion()]]  and [[setVersion()]] for details.
  * @property string $viewPath The root directory of view files. Defaults to "[[basePath]]/views".
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
diff --git a/src/base/View.php b/src/base/View.php
index d9584a3f176..d5b64c668c1 100644
--- a/src/base/View.php
+++ b/src/base/View.php
@@ -20,7 +20,7 @@
  *
  * For more details and usage information on View, see the [guide article on views](guide:structure-views).
  *
- * @property string|bool $viewFile The view file currently being rendered. False if no view file is being
+ * @property-read string|bool $viewFile The view file currently being rendered. False if no view file is being
  * rendered. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
diff --git a/src/base/Widget.php b/src/base/Widget.php
index d578ae485ae..ab27f028f2f 100644
--- a/src/base/Widget.php
+++ b/src/base/Widget.php
@@ -15,10 +15,11 @@
  *
  * For more details and usage information on Widget, see the [guide article on widgets](guide:structure-widgets).
  *
- * @property string $id ID of the widget.
+ * @property string|null $id ID of the widget. Note that the type of this property differs in getter and
+ * setter. See [[getId()]]  and [[setId()]] for details.
  * @property \yii\web\View $view The view object that can be used to render views or view files. Note that the
- * type of this property differs in getter and setter. See [[getView()]] and [[setView()]] for details.
- * @property string $viewPath The directory containing the view files for this widget. This property is
+ * type of this property differs in getter and setter. See [[getView()]]  and [[setView()]] for details.
+ * @property-read string $viewPath The directory containing the view files for this widget. This property is
  * read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
@@ -156,7 +157,7 @@ public static function widget($config = [])
     /**
      * Returns the ID of the widget.
      * @param bool $autoGenerate whether to generate an ID if it is not set previously
-     * @return string ID of the widget.
+     * @return string|null ID of the widget.
      */
     public function getId($autoGenerate = true)
     {
diff --git a/src/caching/FileCache.php b/src/caching/FileCache.php
index 08f292084e9..da71b179300 100644
--- a/src/caching/FileCache.php
+++ b/src/caching/FileCache.php
@@ -197,24 +197,31 @@ protected function deleteValue($key)
     }
 
     /**
-     * Returns the cache file path given the cache key.
-     * @param string $key cache key
+     * Returns the cache file path given the normalized cache key.
+     * @param string $normalizedKey normalized cache key by [[buildKey]] method
      * @return string the cache file path
      */
-    protected function getCacheFile($key)
+    protected function getCacheFile($normalizedKey)
     {
+        $cacheKey = $normalizedKey;
+
+        if ($this->keyPrefix !== '') {
+            // Remove key prefix to avoid generating constant directory levels
+            $lenKeyPrefix = strlen($this->keyPrefix);
+            $cacheKey = substr_replace($normalizedKey, '', 0, $lenKeyPrefix);
+        }
+
+        $cachePath = $this->cachePath;
+
         if ($this->directoryLevel > 0) {
-            $base = $this->cachePath;
             for ($i = 0; $i < $this->directoryLevel; ++$i) {
-                if (($prefix = substr($key, $i + $i, 2)) !== false) {
-                    $base .= DIRECTORY_SEPARATOR . $prefix;
+                if (($subDirectory = substr($cacheKey, $i + $i, 2)) !== false) {
+                    $cachePath .= DIRECTORY_SEPARATOR . $subDirectory;
                 }
             }
-
-            return $base . DIRECTORY_SEPARATOR . $key . $this->cacheFileSuffix;
         }
 
-        return $this->cachePath . DIRECTORY_SEPARATOR . $key . $this->cacheFileSuffix;
+        return $cachePath . DIRECTORY_SEPARATOR . $normalizedKey . $this->cacheFileSuffix;
     }
 
     /**
diff --git a/src/caching/MemCache.php b/src/caching/MemCache.php
index 0f2bcdcd04a..2a83e5d3fff 100644
--- a/src/caching/MemCache.php
+++ b/src/caching/MemCache.php
@@ -55,10 +55,10 @@
  *
  * For more details and usage information on Cache, see the [guide article on caching](guide:caching-overview).
  *
- * @property \Memcache|\Memcached $memcache The memcache (or memcached) object used by this cache component.
- * This property is read-only.
+ * @property-read \Memcache|\Memcached $memcache The memcache (or memcached) object used by this cache
+ * component. This property is read-only.
  * @property MemCacheServer[] $servers List of memcache server configurations. Note that the type of this
- * property differs in getter and setter. See [[getServers()]] and [[setServers()]] for details.
+ * property differs in getter and setter. See [[getServers()]]  and [[setServers()]] for details.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/captcha/CaptchaAction.php b/src/captcha/CaptchaAction.php
index 3ded638459e..40e1aa03a0a 100644
--- a/src/captcha/CaptchaAction.php
+++ b/src/captcha/CaptchaAction.php
@@ -31,7 +31,7 @@
  *    to be validated by the 'captcha' validator.
  * 3. In the controller view, insert a [[Captcha]] widget in the form.
  *
- * @property string $verifyCode The verification code. This property is read-only.
+ * @property-read string $verifyCode The verification code. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/console/Application.php b/src/console/Application.php
index 431198a3614..51d81e43b5c 100644
--- a/src/console/Application.php
+++ b/src/console/Application.php
@@ -50,9 +50,10 @@
  * yii help
  * ```
  *
- * @property ErrorHandler $errorHandler The error handler application component. This property is read-only.
- * @property Request $request The request component. This property is read-only.
- * @property Response $response The response component. This property is read-only.
+ * @property-read ErrorHandler $errorHandler The error handler application component. This property is
+ * read-only.
+ * @property-read Request $request The request component. This property is read-only.
+ * @property-read Response $response The response component. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/console/Controller.php b/src/console/Controller.php
index fca945e4a1d..4288f93c822 100644
--- a/src/console/Controller.php
+++ b/src/console/Controller.php
@@ -28,12 +28,14 @@
  * where `<route>` is a route to a controller action and the params will be populated as properties of a command.
  * See [[options()]] for details.
  *
- * @property string $help This property is read-only.
- * @property string $helpSummary This property is read-only.
- * @property array $passedOptionValues The properties corresponding to the passed options. This property is
- * read-only.
- * @property array $passedOptions The names of the options passed during execution. This property is
+ * @property-read string $help This property is read-only.
+ * @property-read string $helpSummary This property is read-only.
+ * @property-read array $passedOptionValues The properties corresponding to the passed options. This property
+ * is read-only.
+ * @property-read array $passedOptions The names of the options passed during execution. This property is
  * read-only.
+ * @property Request $request
+ * @property Response $response
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
@@ -211,7 +213,12 @@ public function bindActionParams($action, $params)
             }
 
             if ($key !== null) {
-                if ($param->isArray()) {
+                if (PHP_VERSION_ID >= 80000) {
+                    $isArray = ($type = $param->getType()) instanceof \ReflectionNamedType && $type->getName() === 'array';
+                } else {
+                    $isArray = $param->isArray();
+                }
+                if ($isArray) {
                     $params[$key] = $params[$key] === '' ? [] : preg_split('/\s*,\s*/', $params[$key]);
                 }
                 $args[] = $actionParams[$key] = $params[$key];
@@ -550,7 +557,13 @@ public function getActionArgsHelp($action)
 
         /** @var \ReflectionParameter $reflection */
         foreach ($method->getParameters() as $i => $reflection) {
-            if ($reflection->getClass() !== null) {
+            if (PHP_VERSION_ID >= 80000) {
+                $class = $reflection->getType();
+            } else {
+                $class = $reflection->getClass();
+            }
+
+            if ($class !== null) {
                 continue;
             }
             $name = $reflection->getName();
diff --git a/src/console/controllers/AssetController.php b/src/console/controllers/AssetController.php
index 4f2e492dcea..fe106f79bfd 100644
--- a/src/console/controllers/AssetController.php
+++ b/src/console/controllers/AssetController.php
@@ -39,7 +39,7 @@
  * check [[jsCompressor]] and [[cssCompressor]] for more details.
  *
  * @property \yii\web\AssetManager $assetManager Asset manager instance. Note that the type of this property
- * differs in getter and setter. See [[getAssetManager()]] and [[setAssetManager()]] for details.
+ * differs in getter and setter. See [[getAssetManager()]]  and [[setAssetManager()]] for details.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @author Paul Klimov <klimov.paul@gmail.com>
diff --git a/src/console/controllers/HelpController.php b/src/console/controllers/HelpController.php
index b4db783c159..5185f4e011b 100644
--- a/src/console/controllers/HelpController.php
+++ b/src/console/controllers/HelpController.php
@@ -30,7 +30,7 @@
  * In the above, if the command name is not provided, all
  * available commands will be displayed.
  *
- * @property array $commands All available command names. This property is read-only.
+ * @property-read array $commands All available command names. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/console/controllers/MigrateController.php b/src/console/controllers/MigrateController.php
index 4d89ebb85e7..aa2625ea06c 100644
--- a/src/console/controllers/MigrateController.php
+++ b/src/console/controllers/MigrateController.php
@@ -581,7 +581,7 @@ protected function parseFields()
     protected function splitFieldIntoChunks($field)
     {
         $hasDoubleQuotes = false;
-        preg_match_all('/defaultValue\(.*?:.*?\)/', $field, $matches);
+        preg_match_all('/defaultValue\(["\'].*?:?.*?["\']\)/', $field, $matches, PREG_SET_ORDER, 0);
         if (isset($matches[0][0])) {
             $hasDoubleQuotes = true;
             $originalDefaultValue = $matches[0][0];
diff --git a/src/console/widgets/Table.php b/src/console/widgets/Table.php
index f38bb81eb15..99fd5d23234 100644
--- a/src/console/widgets/Table.php
+++ b/src/console/widgets/Table.php
@@ -40,8 +40,8 @@
  *     ],
  * ]);
  *
- * @property string $listPrefix List prefix. This property is write-only.
- * @property int $screenWidth Screen width. This property is write-only.
+ * @property-write string $listPrefix List prefix. This property is write-only.
+ * @property-write int $screenWidth Screen width. This property is write-only.
  *
  * @author Daniel Gomez Pan <pana_1990@hotmail.com>
  * @since 2.0.13
@@ -243,36 +243,35 @@ protected function renderRow(array $row, $spanLeft, $spanMiddle, $spanRight)
 
         $buffer = '';
         $arrayPointer = [];
-        $finalChunk = [];
-        $alreadyPrintedCells = [];
+        $renderedChunkTexts = [];
         for ($i = 0, ($max = $this->calculateRowHeight($row)) ?: $max = 1; $i < $max; $i++) {
             $buffer .= $spanLeft . ' ';
             foreach ($size as $index => $cellSize) {
                 $cell = isset($row[$index]) ? $row[$index] : null;
                 $prefix = '';
-                $chunk = '';
                 if ($index !== 0) {
                     $buffer .= $spanMiddle . ' ';
                 }
                 if (is_array($cell)) {
-                    if (empty($finalChunk[$index])) {
-                        $finalChunk[$index] = '';
+                    if (empty($renderedChunkTexts[$index])) {
+                        $renderedChunkTexts[$index] = '';
+                        $start = 0;
                         $prefix = $this->listPrefix;
                         if (!isset($arrayPointer[$index])) {
                             $arrayPointer[$index] = 0;
                         }
+                    } else {
+                        $start = mb_strwidth($renderedChunkTexts[$index], Yii::$app->charset);
                     }
-                    $chunk = $cell[$arrayPointer[$index]];
-                    $finalChunk[$index] .= $chunk;
-                    if (isset($cell[$arrayPointer[$index] + 1]) && $finalChunk[$index] === $cell[$arrayPointer[$index]]) {
+                    $chunk = Console::ansiColorizedSubstr($cell[$arrayPointer[$index]], $start, $cellSize - 4);
+                    $renderedChunkTexts[$index] .= Console::stripAnsiFormat($chunk);
+                    $fullChunkText = Console::stripAnsiFormat($cell[$arrayPointer[$index]]);
+                    if (isset($cell[$arrayPointer[$index] + 1]) && $renderedChunkTexts[$index] === $fullChunkText) {
                         $arrayPointer[$index]++;
-                        $finalChunk[$index] = '';
+                        $renderedChunkTexts[$index] = '';
                     }
                 } else {
-                    if (!isset($alreadyPrintedCells[$index])) {
-                        $chunk = $cell;
-                    }
-                    $alreadyPrintedCells[$index] = true;
+                    $chunk = Console::ansiColorizedSubstr($cell, ($cellSize * $i) - ($i * 2), $cellSize - 2);
                 }
                 $chunk = $prefix . $chunk;
                 $repeat = $cellSize - Console::ansiStrwidth($chunk) - 1;
@@ -346,15 +345,23 @@ protected function calculateRowsSize()
             $totalWidth += $columnWidth;
         }
 
-        $relativeWidth = $screenWidth / $totalWidth;
-
         if ($totalWidth > $screenWidth) {
+            $minWidth = 3;
+            $fixWidths = [];
+            $relativeWidth = $screenWidth / $totalWidth;
+            foreach ($this->columnWidths as $j => $width) {
+                $scaledWidth = (int) ($width * $relativeWidth);
+                if ($scaledWidth < $minWidth) {
+                    $fixWidths[$j] = 3;
+                }
+            }
+
+            $totalFixWidth = array_sum($fixWidths);
+            $relativeWidth = ($screenWidth - $totalFixWidth) / ($totalWidth - $totalFixWidth);
             foreach ($this->columnWidths as $j => $width) {
-                $this->columnWidths[$j] = (int) ($width * $relativeWidth);
-                if ($j === count($this->columnWidths)) {
-                    $this->columnWidths = $totalWidth;
+                if (!array_key_exists($j, $fixWidths)) {
+                    $this->columnWidths[$j] = (int) ($width * $relativeWidth);
                 }
-                $totalWidth -= $this->columnWidths[$j];
             }
         }
     }
diff --git a/src/data/ActiveDataFilter.php b/src/data/ActiveDataFilter.php
index 5ca65539ec4..88ad36254c2 100644
--- a/src/data/ActiveDataFilter.php
+++ b/src/data/ActiveDataFilter.php
@@ -54,7 +54,7 @@ class ActiveDataFilter extends DataFilter
      *
      * Usually the map can be left empty as filter operator names are consistent with the ones
      * used in [[\yii\db\QueryInterface::where()]]. However, you may want to adjust it in some special cases.
-     * For example, when using PosgreSQL you may want to setup the following map:
+     * For example, when using PostgreSQL you may want to setup the following map:
      *
      * ```php
      * [
diff --git a/src/data/BaseDataProvider.php b/src/data/BaseDataProvider.php
index 82ac0d7fb92..97214cf602c 100644
--- a/src/data/BaseDataProvider.php
+++ b/src/data/BaseDataProvider.php
@@ -16,15 +16,15 @@
  *
  * For more details and usage information on BaseDataProvider, see the [guide article on data providers](guide:output-data-providers).
  *
- * @property int $count The number of data models in the current page. This property is read-only.
+ * @property-read int $count The number of data models in the current page. This property is read-only.
  * @property array $keys The list of key values corresponding to [[models]]. Each data model in [[models]] is
  * uniquely identified by the corresponding key value in this array.
  * @property array $models The list of data models in the current page.
  * @property Pagination|false $pagination The pagination object. If this is false, it means the pagination is
- * disabled. Note that the type of this property differs in getter and setter. See [[getPagination()]] and
+ * disabled. Note that the type of this property differs in getter and setter. See [[getPagination()]]  and
  * [[setPagination()]] for details.
  * @property Sort|bool $sort The sorting object. If this is false, it means the sorting is disabled. Note that
- * the type of this property differs in getter and setter. See [[getSort()]] and [[setSort()]] for details.
+ * the type of this property differs in getter and setter. See [[getSort()]]  and [[setSort()]] for details.
  * @property int $totalCount Total number of possible data models.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
diff --git a/src/data/DataFilter.php b/src/data/DataFilter.php
index a10177fbf3a..18f218f3622 100644
--- a/src/data/DataFilter.php
+++ b/src/data/DataFilter.php
@@ -113,12 +113,13 @@
  * @see ActiveDataFilter
  *
  * @property array $errorMessages Error messages in format `[errorKey => message]`. Note that the type of this
- * property differs in getter and setter. See [[getErrorMessages()]] and [[setErrorMessages()]] for details.
+ * property differs in getter and setter. See [[getErrorMessages()]]  and [[setErrorMessages()]] for details.
  * @property mixed $filter Raw filter value.
  * @property array $searchAttributeTypes Search attribute type map. Note that the type of this property
- * differs in getter and setter. See [[getSearchAttributeTypes()]] and [[setSearchAttributeTypes()]] for details.
+ * differs in getter and setter. See [[getSearchAttributeTypes()]]  and [[setSearchAttributeTypes()]] for
+ * details.
  * @property Model $searchModel Model instance. Note that the type of this property differs in getter and
- * setter. See [[getSearchModel()]] and [[setSearchModel()]] for details.
+ * setter. See [[getSearchModel()]]  and [[setSearchModel()]] for details.
  *
  * @author Paul Klimov <klimov.paul@gmail.com>
  * @since 2.0.13
@@ -239,6 +240,11 @@ class DataFilter extends Model
      * Attribute map will be applied to filter condition in [[normalize()]] method.
      */
     public $attributeMap = [];
+    /**
+     * @var string representation of `null` instead of literal `null` in case the latter cannot be used.
+     * @since 2.0.40
+     */
+    public $nullValue = 'NULL';
 
     /**
      * @var array|\Closure list of error messages responding to invalid filter structure, in format: `[errorKey => message]`.
@@ -359,24 +365,24 @@ protected function detectSearchAttributeType(Validator $validator)
         if ($validator instanceof BooleanValidator) {
             return self::TYPE_BOOLEAN;
         }
-        
+
         if ($validator instanceof NumberValidator) {
             return $validator->integerOnly ? self::TYPE_INTEGER : self::TYPE_FLOAT;
         }
-        
+
         if ($validator instanceof StringValidator) {
             return self::TYPE_STRING;
         }
-        
+
         if ($validator instanceof EachValidator) {
             return self::TYPE_ARRAY;
         }
-        
+
         if ($validator instanceof DateValidator) {
             if ($validator->type == DateValidator::TYPE_DATETIME) {
                 return self::TYPE_DATETIME;
             }
-            
+
             if ($validator->type == DateValidator::TYPE_TIME) {
                 return self::TYPE_TIME;
             }
@@ -659,7 +665,7 @@ protected function validateAttributeValue($attribute, $value)
             return;
         }
 
-        $model->{$attribute} = $value;
+        $model->{$attribute} = $value === $this->nullValue ? null : $value;
         if (!$model->validate([$attribute])) {
             $this->addError($this->filterAttributeName, $model->getFirstError($attribute));
             return;
@@ -753,6 +759,8 @@ private function normalizeComplexFilter(array $filter)
             }
             if (is_array($value)) {
                 $result[$key] = $this->normalizeComplexFilter($value);
+            } elseif ($value === $this->nullValue) {
+                $result[$key] = null;
             } else {
                 $result[$key] = $value;
             }
diff --git a/src/data/Pagination.php b/src/data/Pagination.php
index 5006d9ea0bd..f593d9a9481 100644
--- a/src/data/Pagination.php
+++ b/src/data/Pagination.php
@@ -58,15 +58,15 @@
  *
  * For more details and usage information on Pagination, see the [guide article on pagination](guide:output-pagination).
  *
- * @property int $limit The limit of the data. This may be used to set the LIMIT value for a SQL statement for
- * fetching the current page of data. Note that if the page size is infinite, a value -1 will be returned. This
- * property is read-only.
- * @property array $links The links for navigational purpose. The array keys specify the purpose of the links
- * (e.g. [[LINK_FIRST]]), and the array values are the corresponding URLs. This property is read-only.
- * @property int $offset The offset of the data. This may be used to set the OFFSET value for a SQL statement
- * for fetching the current page of data. This property is read-only.
+ * @property-read int $limit The limit of the data. This may be used to set the LIMIT value for a SQL
+ * statement for fetching the current page of data. Note that if the page size is infinite, a value -1 will be
+ * returned. This property is read-only.
+ * @property-read array $links The links for navigational purpose. The array keys specify the purpose of the
+ * links (e.g. [[LINK_FIRST]]), and the array values are the corresponding URLs. This property is read-only.
+ * @property-read int $offset The offset of the data. This may be used to set the OFFSET value for a SQL
+ * statement for fetching the current page of data. This property is read-only.
  * @property int $page The zero-based current page number.
- * @property int $pageCount Number of pages. This property is read-only.
+ * @property-read int $pageCount Number of pages. This property is read-only.
  * @property int $pageSize The number of items per page. If it is less than 1, it means the page size is
  * infinite, and thus a single page contains all items.
  *
@@ -319,16 +319,17 @@ public function getLinks($absolute = false)
     {
         $currentPage = $this->getPage();
         $pageCount = $this->getPageCount();
-        $links = [
-            Link::REL_SELF => $this->createUrl($currentPage, null, $absolute),
-        ];
-        if ($currentPage > 0) {
+
+        $links = [Link::REL_SELF => $this->createUrl($currentPage, null, $absolute)];
+        if ($pageCount > 0) {
             $links[self::LINK_FIRST] = $this->createUrl(0, null, $absolute);
-            $links[self::LINK_PREV] = $this->createUrl($currentPage - 1, null, $absolute);
-        }
-        if ($currentPage < $pageCount - 1) {
-            $links[self::LINK_NEXT] = $this->createUrl($currentPage + 1, null, $absolute);
             $links[self::LINK_LAST] = $this->createUrl($pageCount - 1, null, $absolute);
+            if ($currentPage > 0) {
+                $links[self::LINK_PREV] = $this->createUrl($currentPage - 1, null, $absolute);
+            }
+            if ($currentPage < $pageCount - 1) {
+                $links[self::LINK_NEXT] = $this->createUrl($currentPage + 1, null, $absolute);
+            }
         }
 
         return $links;
diff --git a/src/data/Sort.php b/src/data/Sort.php
index 78cc868a82e..d96178e1321 100644
--- a/src/data/Sort.php
+++ b/src/data/Sort.php
@@ -70,9 +70,9 @@
  *
  * @property array $attributeOrders Sort directions indexed by attribute names. Sort direction can be either
  * `SORT_ASC` for ascending order or `SORT_DESC` for descending order. Note that the type of this property
- * differs in getter and setter. See [[getAttributeOrders()]] and [[setAttributeOrders()]] for details.
- * @property array $orders The columns (keys) and their corresponding sort directions (values). This can be
- * passed to [[\yii\db\Query::orderBy()]] to construct a DB query. This property is read-only.
+ * differs in getter and setter. See [[getAttributeOrders()]]  and [[setAttributeOrders()]] for details.
+ * @property-read array $orders The columns (keys) and their corresponding sort directions (values). This can
+ * be passed to [[\yii\db\Query::orderBy()]] to construct a DB query. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/db/ActiveRecordInterface.php b/src/db/ActiveRecordInterface.php
index 5b67f788030..dfa9ed3096e 100644
--- a/src/db/ActiveRecordInterface.php
+++ b/src/db/ActiveRecordInterface.php
@@ -296,7 +296,7 @@ public static function findAll($condition);
      *
      * @param array $attributes attribute values (name-value pairs) to be saved for the record.
      * Unlike [[update()]] these are not going to be validated.
-     * @param array $condition the condition that matches the records that should get updated.
+     * @param mixed $condition the condition that matches the records that should get updated.
      * Please refer to [[QueryInterface::where()]] on how to specify this parameter.
      * An empty condition will match all records.
      * @return int the number of rows updated
diff --git a/src/db/ActiveRelationTrait.php b/src/db/ActiveRelationTrait.php
index a5a8cbe0ac2..f2c22e125f3 100644
--- a/src/db/ActiveRelationTrait.php
+++ b/src/db/ActiveRelationTrait.php
@@ -17,8 +17,8 @@
  * @author Carsten Brandt <mail@cebe.cc>
  * @since 2.0
  *
- * @method ActiveRecordInterface one()
- * @method ActiveRecordInterface[] all()
+ * @method ActiveRecordInterface one($db = null)
+ * @method ActiveRecordInterface[] all($db = null)
  * @property ActiveRecord $modelClass
  */
 trait ActiveRelationTrait
diff --git a/src/db/BaseActiveRecord.php b/src/db/BaseActiveRecord.php
index c50ce07d742..ead5f5c7d6e 100644
--- a/src/db/BaseActiveRecord.php
+++ b/src/db/BaseActiveRecord.php
@@ -23,19 +23,19 @@
  *
  * See [[\yii\db\ActiveRecord]] for a concrete implementation.
  *
- * @property array $dirtyAttributes The changed attribute values (name-value pairs). This property is
+ * @property-read array $dirtyAttributes The changed attribute values (name-value pairs). This property is
  * read-only.
  * @property bool $isNewRecord Whether the record is new and should be inserted when calling [[save()]].
  * @property array $oldAttributes The old attribute values (name-value pairs). Note that the type of this
- * property differs in getter and setter. See [[getOldAttributes()]] and [[setOldAttributes()]] for details.
- * @property mixed $oldPrimaryKey The old primary key value. An array (column name => column value) is
+ * property differs in getter and setter. See [[getOldAttributes()]]  and [[setOldAttributes()]] for details.
+ * @property-read mixed $oldPrimaryKey The old primary key value. An array (column name => column value) is
  * returned if the primary key is composite. A string is returned otherwise (null will be returned if the key
  * value is null). This property is read-only.
- * @property mixed $primaryKey The primary key value. An array (column name => column value) is returned if
- * the primary key is composite. A string is returned otherwise (null will be returned if the key value is null).
- * This property is read-only.
- * @property array $relatedRecords An array of related records indexed by relation names. This property is
- * read-only.
+ * @property-read mixed $primaryKey The primary key value. An array (column name => column value) is returned
+ * if the primary key is composite. A string is returned otherwise (null will be returned if the key value is
+ * null). This property is read-only.
+ * @property-read array $relatedRecords An array of related records indexed by relation names. This property
+ * is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @author Carsten Brandt <mail@cebe.cc>
diff --git a/src/db/BatchQueryResult.php b/src/db/BatchQueryResult.php
index 68fd03fc926..c08b8745cfa 100644
--- a/src/db/BatchQueryResult.php
+++ b/src/db/BatchQueryResult.php
@@ -223,4 +223,15 @@ private function getDbDriverName()
 
         return null;
     }
+
+    /**
+     * Unserialization is disabled to prevent remote code execution in case application
+     * calls unserialize() on user input containing specially crafted string.
+     * @see CVE-2020-15148
+     * @since 2.0.38
+     */
+    public function __wakeup()
+    {
+        throw new \BadMethodCallException('Cannot unserialize ' . __CLASS__);
+    }
 }
diff --git a/src/db/Command.php b/src/db/Command.php
index 27909fa2cf4..3d61e93a7e9 100644
--- a/src/db/Command.php
+++ b/src/db/Command.php
@@ -246,6 +246,9 @@ public function prepare($forRead = null)
         }
 
         $sql = $this->getSql();
+        if ($sql === '') {
+            return;
+        }
 
         if ($this->db->getTransaction()) {
             // master is in a transaction. use the same connection.
@@ -264,6 +267,9 @@ public function prepare($forRead = null)
             $message = $e->getMessage() . "\nFailed to prepare SQL: $sql";
             $errorInfo = $e instanceof \PDOException ? $e->errorInfo : null;
             throw new Exception($message, $errorInfo, (int) $e->getCode(), $e);
+        } catch (\Throwable $e) {
+            $message = $e->getMessage() . "\nFailed to prepare SQL: $sql";
+            throw new Exception($message, null, (int) $e->getCode(), $e);
         }
     }
 
diff --git a/src/db/Connection.php b/src/db/Connection.php
index d69cb58edf5..5e2bd45a79c 100644
--- a/src/db/Connection.php
+++ b/src/db/Connection.php
@@ -111,24 +111,24 @@
  * ```
  *
  * @property string $driverName Name of the DB driver.
- * @property bool $isActive Whether the DB connection is established. This property is read-only.
- * @property string $lastInsertID The row ID of the last row inserted, or the last value retrieved from the
- * sequence object. This property is read-only.
- * @property Connection $master The currently active master connection. `null` is returned if there is no
+ * @property-read bool $isActive Whether the DB connection is established. This property is read-only.
+ * @property-read string $lastInsertID The row ID of the last row inserted, or the last value retrieved from
+ * the sequence object. This property is read-only.
+ * @property-read Connection $master The currently active master connection. `null` is returned if there is no
  * master available. This property is read-only.
- * @property PDO $masterPdo The PDO instance for the currently active master connection. This property is
+ * @property-read PDO $masterPdo The PDO instance for the currently active master connection. This property is
  * read-only.
  * @property QueryBuilder $queryBuilder The query builder for the current DB connection. Note that the type of
- * this property differs in getter and setter. See [[getQueryBuilder()]] and [[setQueryBuilder()]] for details.
- * @property Schema $schema The schema information for the database opened by this connection. This property
- * is read-only.
- * @property string $serverVersion Server version as a string. This property is read-only.
- * @property Connection $slave The currently active slave connection. `null` is returned if there is no slave
- * available and `$fallbackToMaster` is false. This property is read-only.
- * @property PDO $slavePdo The PDO instance for the currently active slave connection. `null` is returned if
- * no slave connection is available and `$fallbackToMaster` is false. This property is read-only.
- * @property Transaction|null $transaction The currently active transaction. Null if no active transaction.
- * This property is read-only.
+ * this property differs in getter and setter. See [[getQueryBuilder()]]  and [[setQueryBuilder()]] for details.
+ * @property-read Schema $schema The schema information for the database opened by this connection. This
+ * property is read-only.
+ * @property-read string $serverVersion Server version as a string. This property is read-only.
+ * @property-read Connection $slave The currently active slave connection. `null` is returned if there is no
+ * slave available and `$fallbackToMaster` is false. This property is read-only.
+ * @property-read PDO $slavePdo The PDO instance for the currently active slave connection. `null` is returned
+ * if no slave connection is available and `$fallbackToMaster` is false. This property is read-only.
+ * @property-read Transaction|null $transaction The currently active transaction. Null if no active
+ * transaction. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/db/DataReader.php b/src/db/DataReader.php
index f2ef1eb312f..50a2d7dadc3 100644
--- a/src/db/DataReader.php
+++ b/src/db/DataReader.php
@@ -40,10 +40,10 @@
  * [[fetchMode]]. See the [PHP manual](https://secure.php.net/manual/en/function.PDOStatement-setFetchMode.php)
  * for more details about possible fetch mode.
  *
- * @property int $columnCount The number of columns in the result set. This property is read-only.
- * @property int $fetchMode Fetch mode. This property is write-only.
- * @property bool $isClosed Whether the reader is closed or not. This property is read-only.
- * @property int $rowCount Number of rows contained in the result. This property is read-only.
+ * @property-read int $columnCount The number of columns in the result set. This property is read-only.
+ * @property-write int $fetchMode Fetch mode. This property is write-only.
+ * @property-read bool $isClosed Whether the reader is closed or not. This property is read-only.
+ * @property-read int $rowCount Number of rows contained in the result. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/db/Exception.php b/src/db/Exception.php
index c0cff469dad..ae16407f85d 100644
--- a/src/db/Exception.php
+++ b/src/db/Exception.php
@@ -27,9 +27,9 @@ class Exception extends \yii\base\Exception
      * @param string $message PDO error message
      * @param array $errorInfo PDO error info
      * @param string $code PDO error code
-     * @param \Exception $previous The previous exception used for the exception chaining.
+     * @param \Throwable|\Exception $previous The previous exception used for the exception chaining.
      */
-    public function __construct($message, $errorInfo = [], $code = '', \Exception $previous = null)
+    public function __construct($message, $errorInfo = [], $code = '', $previous = null)
     {
         parent::__construct($message, 0, $previous);
         $this->errorInfo = $errorInfo;
diff --git a/src/db/Query.php b/src/db/Query.php
index 471f22f9f37..59dcb8382aa 100644
--- a/src/db/Query.php
+++ b/src/db/Query.php
@@ -42,7 +42,7 @@
  *
  * A more detailed usage guide on how to work with Query can be found in the [guide article on Query Builder](guide:db-query-builder).
  *
- * @property string[] $tablesUsedInFrom Table names indexed by aliases. This property is read-only.
+ * @property-read string[] $tablesUsedInFrom Table names indexed by aliases. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @author Carsten Brandt <mail@cebe.cc>
diff --git a/src/db/QueryBuilder.php b/src/db/QueryBuilder.php
index 5015d3ba3fc..c6f74872313 100644
--- a/src/db/QueryBuilder.php
+++ b/src/db/QueryBuilder.php
@@ -22,10 +22,10 @@
  *
  * For more details and usage information on QueryBuilder, see the [guide article on query builders](guide:db-query-builder).
  *
- * @property string[] $conditionClasses Map of condition aliases to condition classes. For example: ```php
- * ['LIKE' => yii\db\condition\LikeCondition::class] ``` . This property is write-only.
- * @property string[] $expressionBuilders Array of builders that should be merged with the pre-defined ones in
- * [[expressionBuilders]] property. This property is write-only.
+ * @property-write string[] $conditionClasses Map of condition aliases to condition classes. For example:
+ * ```php ['LIKE' => yii\db\condition\LikeCondition::class] ``` . This property is write-only.
+ * @property-write string[] $expressionBuilders Array of builders that should be merged with the pre-defined
+ * ones in [[expressionBuilders]] property. This property is write-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/db/Schema.php b/src/db/Schema.php
index c0ed7227c20..c11a22be210 100644
--- a/src/db/Schema.php
+++ b/src/db/Schema.php
@@ -21,17 +21,18 @@
  *
  * Schema represents the database schema information that is DBMS specific.
  *
- * @property string $lastInsertID The row ID of the last row inserted, or the last value retrieved from the
- * sequence object. This property is read-only.
- * @property QueryBuilder $queryBuilder The query builder for this connection. This property is read-only.
- * @property string[] $schemaNames All schema names in the database, except system schemas. This property is
+ * @property-read string $lastInsertID The row ID of the last row inserted, or the last value retrieved from
+ * the sequence object. This property is read-only.
+ * @property-read QueryBuilder $queryBuilder The query builder for this connection. This property is
  * read-only.
- * @property string $serverVersion Server version as a string. This property is read-only.
- * @property string[] $tableNames All table names in the database. This property is read-only.
- * @property TableSchema[] $tableSchemas The metadata for all tables in the database. Each array element is an
- * instance of [[TableSchema]] or its child class. This property is read-only.
- * @property string $transactionIsolationLevel The transaction isolation level to use for this transaction.
- * This can be one of [[Transaction::READ_UNCOMMITTED]], [[Transaction::READ_COMMITTED]],
+ * @property-read string[] $schemaNames All schema names in the database, except system schemas. This property
+ * is read-only.
+ * @property-read string $serverVersion Server version as a string. This property is read-only.
+ * @property-read string[] $tableNames All table names in the database. This property is read-only.
+ * @property-read TableSchema[] $tableSchemas The metadata for all tables in the database. Each array element
+ * is an instance of [[TableSchema]] or its child class. This property is read-only.
+ * @property-write string $transactionIsolationLevel The transaction isolation level to use for this
+ * transaction. This can be one of [[Transaction::READ_UNCOMMITTED]], [[Transaction::READ_COMMITTED]],
  * [[Transaction::REPEATABLE_READ]] and [[Transaction::SERIALIZABLE]] but also a string containing DBMS specific
  * syntax to be used after `SET TRANSACTION ISOLATION LEVEL`. This property is write-only.
  *
diff --git a/src/db/SqlToken.php b/src/db/SqlToken.php
index 77497ee22f6..0e947c17458 100644
--- a/src/db/SqlToken.php
+++ b/src/db/SqlToken.php
@@ -13,10 +13,10 @@
  * SqlToken represents SQL tokens produced by [[SqlTokenizer]] or its child classes.
  *
  * @property SqlToken[] $children Child tokens.
- * @property bool $hasChildren Whether the token has children. This property is read-only.
- * @property bool $isCollection Whether the token represents a collection of tokens. This property is
+ * @property-read bool $hasChildren Whether the token has children. This property is read-only.
+ * @property-read bool $isCollection Whether the token represents a collection of tokens. This property is
  * read-only.
- * @property string $sql SQL code. This property is read-only.
+ * @property-read string $sql SQL code. This property is read-only.
  *
  * @author Sergey Makinen <sergey@makinen.ru>
  * @since 2.0.13
diff --git a/src/db/TableSchema.php b/src/db/TableSchema.php
index 33e2c128864..899ddb8abb9 100644
--- a/src/db/TableSchema.php
+++ b/src/db/TableSchema.php
@@ -13,7 +13,7 @@
 /**
  * TableSchema represents the metadata of a database table.
  *
- * @property array $columnNames List of column names. This property is read-only.
+ * @property-read array $columnNames List of column names. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/db/Transaction.php b/src/db/Transaction.php
index 3935a2380ec..e6c1cbe93a2 100644
--- a/src/db/Transaction.php
+++ b/src/db/Transaction.php
@@ -39,13 +39,13 @@
  * > with PHP 5.x and PHP 7.x. `\Exception` implements the [`\Throwable` interface](https://secure.php.net/manual/en/class.throwable.php)
  * > since PHP 7.0, so you can skip the part with `\Exception` if your app uses only PHP 7.0 and higher.
  *
- * @property bool $isActive Whether this transaction is active. Only an active transaction can [[commit()]] or
- * [[rollBack()]]. This property is read-only.
- * @property string $isolationLevel The transaction isolation level to use for this transaction. This can be
- * one of [[READ_UNCOMMITTED]], [[READ_COMMITTED]], [[REPEATABLE_READ]] and [[SERIALIZABLE]] but also a string
- * containing DBMS specific syntax to be used after `SET TRANSACTION ISOLATION LEVEL`. This property is
+ * @property-read bool $isActive Whether this transaction is active. Only an active transaction can
+ * [[commit()]] or [[rollBack()]]. This property is read-only.
+ * @property-write string $isolationLevel The transaction isolation level to use for this transaction. This
+ * can be one of [[READ_UNCOMMITTED]], [[READ_COMMITTED]], [[REPEATABLE_READ]] and [[SERIALIZABLE]] but also a
+ * string containing DBMS specific syntax to be used after `SET TRANSACTION ISOLATION LEVEL`. This property is
  * write-only.
- * @property int $level The current nesting level of the transaction. This property is read-only.
+ * @property-read int $level The current nesting level of the transaction. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/db/mssql/ColumnSchema.php b/src/db/mssql/ColumnSchema.php
index 8ccd69f13fd..78895d6031f 100644
--- a/src/db/mssql/ColumnSchema.php
+++ b/src/db/mssql/ColumnSchema.php
@@ -14,6 +14,13 @@
  */
 class ColumnSchema extends \yii\db\ColumnSchema
 {
+    /**
+     * @var bool whether this column is a computed column
+     * @since 2.0.39
+     */
+    public $isComputed;
+
+
     /**
      * Prepares default value and converts it according to [[phpType]]
      * @param mixed $value default value
diff --git a/src/db/mssql/QueryBuilder.php b/src/db/mssql/QueryBuilder.php
index 9a74810d4ef..cc2a92067a9 100644
--- a/src/db/mssql/QueryBuilder.php
+++ b/src/db/mssql/QueryBuilder.php
@@ -475,22 +475,31 @@ public function insert($table, $columns, &$params)
         $version2005orLater = version_compare($this->db->getSchema()->getServerVersion(), '9', '>=');
 
         list($names, $placeholders, $values, $params) = $this->prepareInsertValues($table, $columns, $params);
-
-        $sql = 'INSERT INTO ' . $this->db->quoteTableName($table)
-            . (!empty($names) ? ' (' . implode(', ', $names) . ')' : '')
-            . ($version2005orLater ? ' OUTPUT INSERTED.* INTO @temporary_inserted' : '')
-            . (!empty($placeholders) ? ' VALUES (' . implode(', ', $placeholders) . ')' : $values);
-
         if ($version2005orLater) {
             $schema = $this->db->getTableSchema($table);
             $cols = [];
+            $columns = [];
             foreach ($schema->columns as $column) {
+                if ($column->isComputed) {
+                    continue;
+                }
                 $cols[] = $this->db->quoteColumnName($column->name) . ' '
                     . $column->dbType
                     . (in_array($column->dbType, ['char', 'varchar', 'nchar', 'nvarchar', 'binary', 'varbinary']) ? "(MAX)" : "")
                     . ' ' . ($column->allowNull ? "NULL" : "");
+                $columns[] = 'INSERTED.' . $column->name;
             }
-            $sql = "SET NOCOUNT ON;DECLARE @temporary_inserted TABLE (" . implode(", ", $cols) . ");" . $sql . ";SELECT * FROM @temporary_inserted";
+        }
+        $countColumns = count($columns);
+
+        $sql = 'INSERT INTO ' . $this->db->quoteTableName($table)
+            . (!empty($names) ? ' (' . implode(', ', $names) . ')' : '')
+            . (($version2005orLater && $countColumns) ? ' OUTPUT ' . implode(',', $columns) . ' INTO @temporary_inserted' : '')
+            . (!empty($placeholders) ? ' VALUES (' . implode(', ', $placeholders) . ')' : $values);
+
+        if ($version2005orLater && $countColumns) {
+            $sql = 'SET NOCOUNT ON;DECLARE @temporary_inserted TABLE (' . implode(', ', $cols) . ');' . $sql .
+                ';SELECT * FROM @temporary_inserted';
         }
 
         return $sql;
diff --git a/src/db/mssql/Schema.php b/src/db/mssql/Schema.php
index e92f9385e06..1ffad32a924 100644
--- a/src/db/mssql/Schema.php
+++ b/src/db/mssql/Schema.php
@@ -364,6 +364,7 @@ protected function loadColumnSchema($info)
         $column->enumValues = []; // mssql has only vague equivalents to enum
         $column->isPrimaryKey = null; // primary key will be determined in findColumns() method
         $column->autoIncrement = $info['is_identity'] == 1;
+        $column->isComputed = (bool)$info['is_computed'];
         $column->unsigned = stripos($column->dbType, 'unsigned') !== false;
         $column->comment = $info['comment'] === null ? '' : $info['comment'];
 
@@ -436,6 +437,7 @@ protected function findColumns($table)
  END AS 'data_type',
  [t1].[column_default],
  COLUMNPROPERTY(OBJECT_ID([t1].[table_schema] + '.' + [t1].[table_name]), [t1].[column_name], 'IsIdentity') AS is_identity,
+ COLUMNPROPERTY(OBJECT_ID([t1].[table_schema] + '.' + [t1].[table_name]), [t1].[column_name], 'IsComputed') AS is_computed,
  (
     SELECT CONVERT(VARCHAR, [t2].[value])
 		FROM [sys].[extended_properties] AS [t2]
diff --git a/src/db/oci/Schema.php b/src/db/oci/Schema.php
index 23ad65b394c..2e55c09db77 100644
--- a/src/db/oci/Schema.php
+++ b/src/db/oci/Schema.php
@@ -24,8 +24,8 @@
 /**
  * Schema is the class for retrieving metadata from an Oracle database.
  *
- * @property string $lastInsertID The row ID of the last row inserted, or the last value retrieved from the
- * sequence object. This property is read-only.
+ * @property-read string $lastInsertID The row ID of the last row inserted, or the last value retrieved from
+ * the sequence object. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/db/sqlite/Schema.php b/src/db/sqlite/Schema.php
index ccd6e2bf6ae..0b5a0cc8ec9 100644
--- a/src/db/sqlite/Schema.php
+++ b/src/db/sqlite/Schema.php
@@ -24,9 +24,9 @@
 /**
  * Schema is the class for retrieving metadata from a SQLite (2/3) database.
  *
- * @property string $transactionIsolationLevel The transaction isolation level to use for this transaction.
- * This can be either [[Transaction::READ_UNCOMMITTED]] or [[Transaction::SERIALIZABLE]]. This property is
- * write-only.
+ * @property-write string $transactionIsolationLevel The transaction isolation level to use for this
+ * transaction. This can be either [[Transaction::READ_UNCOMMITTED]] or [[Transaction::SERIALIZABLE]]. This
+ * property is write-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/di/Container.php b/src/di/Container.php
index 2717572b79a..d6b396b6ed9 100644
--- a/src/di/Container.php
+++ b/src/di/Container.php
@@ -8,6 +8,7 @@
 namespace yii\di;
 
 use ReflectionClass;
+use ReflectionException;
 use Yii;
 use yii\base\Component;
 use yii\base\InvalidConfigException;
@@ -91,10 +92,10 @@
  *
  * For more details and usage information on Container, see the [guide article on di-containers](guide:concept-di-container).
  *
- * @property array $definitions The list of the object definitions or the loaded shared objects (type or ID =>
- * definition or instance). This property is read-only.
- *
- * @property bool $resolveArrays whether to attempt to resolve elements in array dependencies
+ * @property-read array $definitions The list of the object definitions or the loaded shared objects (type or
+ * ID => definition or instance). This property is read-only.
+ * @property-write bool $resolveArrays Whether to attempt to resolve elements in array dependencies. This
+ * property is write-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
@@ -122,12 +123,12 @@ class Container extends Component
      * is associated with a list of constructor parameter types or default values.
      */
     private $_dependencies = [];
-
     /**
      * @var bool whether to attempt to resolve elements in array dependencies
      */
     private $_resolveArrays = false;
 
+
     /**
      * Returns an instance of the requested class.
      *
@@ -143,11 +144,14 @@ class Container extends Component
      * In this case, the constructor parameters and object configurations will be used
      * only if the class is instantiated the first time.
      *
-     * @param string|Instance $class the class Instance, name or an alias name (e.g. `foo`) that was previously registered via [[set()]]
-     * or [[setSingleton()]].
-     * @param array $params a list of constructor parameter values. The parameters should be provided in the order
-     * they appear in the constructor declaration. If you want to skip some parameters, you should index the remaining
-     * ones with the integers that represent their positions in the constructor parameter list.
+     * @param string|Instance $class the class Instance, name or an alias name (e.g. `foo`) that was previously
+     * registered via [[set()]] or [[setSingleton()]].
+     * @param array $params a list of constructor parameter values. Use one of two definitions:
+     *  - Parameters as name-value pairs, for example: `['posts' => PostRepository::class]`.
+     *  - Parameters in the order they appear in the constructor declaration. If you want to skip some parameters,
+     *    you should index the remaining ones with the integers that represent their positions in the constructor
+     *    parameter list.
+     *    Dependencies indexed by name and by position in the same array are not allowed.
      * @param array $config a list of name-value pairs that will be used to initialize the object properties.
      * @return object an instance of the requested class.
      * @throws InvalidConfigException if the class cannot be recognized or correspond to an invalid definition
@@ -379,15 +383,23 @@ protected function build($class, $params, $config)
         /* @var $reflection ReflectionClass */
         list($reflection, $dependencies) = $this->getDependencies($class);
 
+        $addDependencies = [];
         if (isset($config['__construct()'])) {
-            foreach ($config['__construct()'] as $index => $param) {
-                $dependencies[$index] = $param;
-            }
+            $addDependencies = $config['__construct()'];
             unset($config['__construct()']);
         }
-
         foreach ($params as $index => $param) {
-            $dependencies[$index] = $param;
+            $addDependencies[$index] = $param;
+        }
+
+        $this->validateDependencies($addDependencies);
+
+        if ($addDependencies && is_int(key($addDependencies))) {
+            $dependencies = array_values($dependencies);
+            $dependencies = $this->mergeDependencies($dependencies, $addDependencies);
+        } else {
+            $dependencies = $this->mergeDependencies($dependencies, $addDependencies);
+            $dependencies = array_values($dependencies);
         }
 
         $dependencies = $this->resolveDependencies($dependencies, $reflection);
@@ -414,6 +426,47 @@ protected function build($class, $params, $config)
         return $object;
     }
 
+    /**
+     * @param array $a
+     * @param array $b
+     * @return array
+     */
+    private function mergeDependencies($a, $b)
+    {
+        foreach ($b as $index => $dependency) {
+            $a[$index] = $dependency;
+        }
+        return $a;
+    }
+
+    /**
+     * @param array $parameters
+     * @throws InvalidConfigException
+     */
+    private function validateDependencies($parameters)
+    {
+        $hasStringParameter = false;
+        $hasIntParameter = false;
+        foreach ($parameters as $index => $parameter) {
+            if (is_string($index)) {
+                $hasStringParameter = true;
+                if ($hasIntParameter) {
+                    break;
+                }
+            } else {
+                $hasIntParameter = true;
+                if ($hasStringParameter) {
+                    break;
+                }
+            }
+        }
+        if ($hasIntParameter && $hasStringParameter) {
+            throw new InvalidConfigException(
+                'Dependencies indexed by name and by position in the same array are not allowed.'
+            );
+        }
+    }
+
     /**
      * Merges the user-specified constructor parameters with the ones registered via [[set()]].
      * @param string $class class name, interface name or alias name
@@ -458,17 +511,31 @@ protected function getDependencies($class)
         $constructor = $reflection->getConstructor();
         if ($constructor !== null) {
             foreach ($constructor->getParameters() as $param) {
-                if (version_compare(PHP_VERSION, '5.6.0', '>=') && $param->isVariadic()) {
+                if (PHP_VERSION_ID >= 50600 && $param->isVariadic()) {
                     break;
-                } elseif ($param->isDefaultValueAvailable()) {
-                    $dependencies[] = $param->getDefaultValue();
+                }
+
+                if (PHP_VERSION_ID >= 80000) {
+                    $c = $param->getType();
+                    $isClass = $c !== null && !$param->getType()->isBuiltin();
                 } else {
-                    if (PHP_VERSION_ID >= 80000) {
-                        $c = $param->getType();
-                    } else {
+                    try {
                         $c = $param->getClass();
+                    } catch (ReflectionException $e) {
+                        $c = null;
                     }
-                    $dependencies[] = Instance::of($c === null ? null : $c->getName());
+                    $isClass = $c !== null;
+                }
+                $className = $isClass ? $c->getName() : null;
+
+                if ($className !== null &&
+                    ($this->has($className) || class_exists($className))
+                ) {
+                    $dependencies[$param->getName()] = Instance::of($className);
+                } else {
+                    $dependencies[$param->getName()] = $param->isDefaultValueAvailable()
+                        ? $param->getDefaultValue()
+                        : null;
                 }
             }
         }
@@ -565,12 +632,23 @@ public function resolveCallableDependencies(callable $callback, $params = [])
 
         foreach ($reflection->getParameters() as $param) {
             $name = $param->getName();
-            if (($class = $param->getClass()) !== null) {
+
+            if (PHP_VERSION_ID >= 80000) {
+                $class = $param->getType();
+                $isClass = $class !== null && !$param->getType()->isBuiltin();
+            } else {
+                $class = $param->getClass();
+                $isClass = $class !== null;
+            }
+
+            if ($isClass) {
                 $className = $class->getName();
-                if (version_compare(PHP_VERSION, '5.6.0', '>=') && $param->isVariadic()) {
+                if (PHP_VERSION_ID >= 50600 && $param->isVariadic()) {
                     $args = array_merge($args, array_values($params));
                     break;
-                } elseif ($associative && isset($params[$name]) && $params[$name] instanceof $className) {
+                }
+
+                if ($associative && isset($params[$name]) && $params[$name] instanceof $className) {
                     $args[] = $params[$name];
                     unset($params[$name]);
                 } elseif (!$associative && isset($params[0]) && $params[0] instanceof $className) {
diff --git a/src/filters/AccessRule.php b/src/filters/AccessRule.php
index a4b604ed37b..606c1701026 100644
--- a/src/filters/AccessRule.php
+++ b/src/filters/AccessRule.php
@@ -114,7 +114,7 @@ class AccessRule extends Component
      * @var array list of user IP addresses that this rule applies to. An IP address
      * can contain the wildcard `*` at the end so that it matches IP addresses with the same prefix.
      * For example, '192.168.*' matches all IP addresses in the segment '192.168.'.
-     * It may also contain a pattern/mask like '172.16.0.0/12' which would match all IPs from the 
+     * It may also contain a pattern/mask like '172.16.0.0/12' which would match all IPs from the
      * 20-bit private network block in RFC1918.
      * If not set or empty, it means this rule applies to all IP addresses.
      * @see Request::userIP
diff --git a/src/grid/DataColumn.php b/src/grid/DataColumn.php
index be1610190e7..53c18b6b8aa 100644
--- a/src/grid/DataColumn.php
+++ b/src/grid/DataColumn.php
@@ -142,7 +142,7 @@ protected function renderHeaderCellContent()
     }
 
     /**
-     * {@inheritdoc]
+     * {@inheritdoc}
      * @since 2.0.8
      */
     protected function getHeaderCellLabel()
diff --git a/src/helpers/BaseConsole.php b/src/helpers/BaseConsole.php
index e9e417edca1..285276238cf 100644
--- a/src/helpers/BaseConsole.php
+++ b/src/helpers/BaseConsole.php
@@ -331,7 +331,7 @@ public static function xtermBgColor($colorCode)
      */
     public static function stripAnsiFormat($string)
     {
-        return preg_replace('/\033\[[\d;?]*\w/', '', $string);
+        return preg_replace(self::ansiCodesPattern(), '', $string);
     }
 
     /**
@@ -355,6 +355,67 @@ public static function ansiStrwidth($string)
         return mb_strwidth(static::stripAnsiFormat($string), Yii::$app->charset);
     }
 
+    /**
+     * Returns the portion with ANSI color codes of string specified by the start and length parameters.
+     * If string has color codes, then will be return "TEXT_COLOR + TEXT_STRING + DEFAULT_COLOR",
+     * else will be simple "TEXT_STRING".
+     * @param string $string
+     * @param int $start
+     * @param int $length
+     * @return string
+     */
+    public static function ansiColorizedSubstr($string, $start, $length)
+    {
+        if ($start < 0 || $length <= 0) {
+            return '';
+        }
+
+        $textItems = preg_split(self::ansiCodesPattern(), $string);
+
+        preg_match_all(self::ansiCodesPattern(), $string, $colors);
+        $colors = count($colors) ? $colors[0] : [];
+        array_unshift($colors, '');
+
+        $result = '';
+        $curPos = 0;
+        $inRange = false;
+
+        foreach ($textItems as $k => $textItem) {
+            $color = $colors[$k];
+
+            if ($curPos <= $start && $start < $curPos + Console::ansiStrwidth($textItem)) {
+                $text = mb_substr($textItem, $start - $curPos, null, Yii::$app->charset);
+                $inRange = true;
+            } else {
+                $text = $textItem;
+            }
+
+            if ($inRange) {
+                $result .= $color . $text;
+                $diff = $length - Console::ansiStrwidth($result);
+                if ($diff <= 0) {
+                    if ($diff < 0) {
+                        $result = mb_substr($result, 0, $diff, Yii::$app->charset);
+                    }
+                    $defaultColor = static::renderColoredString('%n');
+                    if ($color && $color != $defaultColor) {
+                        $result .= $defaultColor;
+                    }
+                    break;
+                }
+            }
+
+            $curPos += mb_strlen($textItem, Yii::$app->charset);
+        }
+
+        return $result;
+    }
+
+    private static function ansiCodesPattern()
+    {
+        return /** @lang PhpRegExp */ '/\033\[[\d;?]*\w/';
+    }
+
     /**
      * Converts an ANSI formatted string to HTML.
      *
diff --git a/src/i18n/I18N.php b/src/i18n/I18N.php
index 49cf93bd459..3e5bd425d19 100644
--- a/src/i18n/I18N.php
+++ b/src/i18n/I18N.php
@@ -19,7 +19,7 @@
  *
  * @property MessageFormatter $messageFormatter The message formatter to be used to format message via ICU
  * message format. Note that the type of this property differs in getter and setter. See
- * [[getMessageFormatter()]] and [[setMessageFormatter()]] for details.
+ * [[getMessageFormatter()]]  and [[setMessageFormatter()]] for details.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/i18n/Locale.php b/src/i18n/Locale.php
index 6567c083f59..86b78de6a88 100644
--- a/src/i18n/Locale.php
+++ b/src/i18n/Locale.php
@@ -16,7 +16,7 @@
  *
  * The class requires [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) to be installed.
  *
- * @property string $currencySymbol This property is read-only.
+ * @property-read string $currencySymbol This property is read-only.
  *
  * @since 2.0.14
  */
diff --git a/src/i18n/MessageFormatter.php b/src/i18n/MessageFormatter.php
index 2b11c034b5d..2fdba093213 100644
--- a/src/i18n/MessageFormatter.php
+++ b/src/i18n/MessageFormatter.php
@@ -36,8 +36,8 @@
  *   Also messages that are working with the fallback implementation are not necessarily compatible with the
  *   PHP intl MessageFormatter so do not rely on the fallback if you are able to install intl extension somehow.
  *
- * @property string $errorCode Code of the last error. This property is read-only.
- * @property string $errorMessage Description of the last error. This property is read-only.
+ * @property-read string $errorCode Code of the last error. This property is read-only.
+ * @property-read string $errorMessage Description of the last error. This property is read-only.
  *
  * @author Alexander Makarov <sam@rmcreative.ru>
  * @author Carsten Brandt <mail@cebe.cc>
diff --git a/src/log/Dispatcher.php b/src/log/Dispatcher.php
index 8109e0b8978..d888d89a8d1 100644
--- a/src/log/Dispatcher.php
+++ b/src/log/Dispatcher.php
@@ -53,7 +53,7 @@
  * @property int $flushInterval How many messages should be logged before they are sent to targets. This
  * method returns the value of [[Logger::flushInterval]].
  * @property Logger $logger The logger. If not set, [[\Yii::getLogger()]] will be used. Note that the type of
- * this property differs in getter and setter. See [[getLogger()]] and [[setLogger()]] for details.
+ * this property differs in getter and setter. See [[getLogger()]]  and [[setLogger()]] for details.
  * @property int $traceLevel How many application call stacks should be logged together with each message.
  * This method returns the value of [[Logger::traceLevel]]. Defaults to 0.
  *
diff --git a/src/log/Logger.php b/src/log/Logger.php
index 9bbfa4e89a5..6a6f3b9a85e 100644
--- a/src/log/Logger.php
+++ b/src/log/Logger.php
@@ -30,13 +30,13 @@
  * to send logged messages to different log targets, such as [[FileTarget|file]], [[EmailTarget|email]],
  * or [[DbTarget|database]], with the help of the [[dispatcher]].
  *
- * @property array $dbProfiling The first element indicates the number of SQL statements executed, and the
- * second element the total time spent in SQL execution. This property is read-only.
- * @property float $elapsedTime The total elapsed time in seconds for current request. This property is
+ * @property-read array $dbProfiling The first element indicates the number of SQL statements executed, and
+ * the second element the total time spent in SQL execution. This property is read-only.
+ * @property-read float $elapsedTime The total elapsed time in seconds for current request. This property is
  * read-only.
- * @property array $profiling The profiling results. Each element is an array consisting of these elements:
- * `info`, `category`, `timestamp`, `trace`, `level`, `duration`, `memory`, `memoryDiff`. The `memory` and
- * `memoryDiff` values are available since version 2.0.11. This property is read-only.
+ * @property-read array $profiling The profiling results. Each element is an array consisting of these
+ * elements: `info`, `category`, `timestamp`, `trace`, `level`, `duration`, `memory`, `memoryDiff`. The `memory`
+ * and `memoryDiff` values are available since version 2.0.11. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/log/Target.php b/src/log/Target.php
index 2a192e80d55..846bc919a9f 100644
--- a/src/log/Target.php
+++ b/src/log/Target.php
@@ -27,10 +27,10 @@
  * may specify [[except]] to exclude messages of certain categories.
  *
  * @property bool $enabled Indicates whether this log target is enabled. Defaults to true. Note that the type
- * of this property differs in getter and setter. See [[getEnabled()]] and [[setEnabled()]] for details.
+ * of this property differs in getter and setter. See [[getEnabled()]]  and [[setEnabled()]] for details.
  * @property int $levels The message levels that this target is interested in. This is a bitmap of level
  * values. Defaults to 0, meaning all available levels. Note that the type of this property differs in getter and
- * setter. See [[getLevels()]] and [[setLevels()]] for details.
+ * setter. See [[getLevels()]]  and [[setLevels()]] for details.
  *
  * For more details and usage information on Target, see the [guide article on logging & targets](guide:runtime-logging).
  *
diff --git a/src/mail/BaseMailer.php b/src/mail/BaseMailer.php
index c4546fbd1f4..633974daa2f 100644
--- a/src/mail/BaseMailer.php
+++ b/src/mail/BaseMailer.php
@@ -23,7 +23,7 @@
  * For more details and usage information on BaseMailer, see the [guide article on mailing](guide:tutorial-mailing).
  *
  * @property View $view View instance. Note that the type of this property differs in getter and setter. See
- * [[getView()]] and [[setView()]] for details.
+ * [[getView()]]  and [[setView()]] for details.
  * @property string $viewPath The directory that contains the view files for composing mail messages Defaults
  * to '@app/mail'.
  *
diff --git a/src/messages/bg/yii.php b/src/messages/bg/yii.php
index e10f6fcc6a2..bb738174771 100644
--- a/src/messages/bg/yii.php
+++ b/src/messages/bg/yii.php
@@ -119,7 +119,7 @@
     '{delta, plural, =1{a month} other{# months}} ago' => 'преди {delta, plural, =1{месец} other{# месеца}}',
     '{delta, plural, =1{a second} other{# seconds}} ago' => 'преди {delta, plural, =1{секунда} other{# секунди}}',
     '{delta, plural, =1{a year} other{# years}} ago' => 'преди {delta, plural, =1{година} other{# години}}',
-    '{delta, plural, =1{an hour} other{# hours}} ago' => '{delta, plural, =1{час} other{# часа}}',
+    '{delta, plural, =1{an hour} other{# hours}} ago' => 'преди {delta, plural, =1{час} other{# часа}}',
     '{nFormatted} B' => '{nFormatted} B',
     '{nFormatted} GB' => '{nFormatted} GB',
     '{nFormatted} GiB' => '{nFormatted} GiB',
diff --git a/src/rbac/BaseManager.php b/src/rbac/BaseManager.php
index 4f832e014d6..c8dda76f930 100644
--- a/src/rbac/BaseManager.php
+++ b/src/rbac/BaseManager.php
@@ -17,10 +17,10 @@
  *
  * For more details and usage information on DbManager, see the [guide article on security authorization](guide:security-authorization).
  *
- * @property Role[] $defaultRoleInstances Default roles. The array is indexed by the role names. This property
- * is read-only.
+ * @property-read Role[] $defaultRoleInstances Default roles. The array is indexed by the role names. This
+ * property is read-only.
  * @property string[] $defaultRoles Default roles. Note that the type of this property differs in getter and
- * setter. See [[getDefaultRoles()]] and [[setDefaultRoles()]] for details.
+ * setter. See [[getDefaultRoles()]]  and [[setDefaultRoles()]] for details.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/rbac/DbManager.php b/src/rbac/DbManager.php
index 51947bdb7b9..9aa29ae9453 100644
--- a/src/rbac/DbManager.php
+++ b/src/rbac/DbManager.php
@@ -106,6 +106,7 @@ class DbManager extends BaseManager
      */
     protected $checkAccessAssignments = [];
 
+
     /**
      * Initializes the application component.
      * This method overrides the parent implementation by establishing the database connection.
diff --git a/src/test/ActiveFixture.php b/src/test/ActiveFixture.php
index 6d93b79c010..ff626a43b5f 100644
--- a/src/test/ActiveFixture.php
+++ b/src/test/ActiveFixture.php
@@ -24,7 +24,7 @@
  *
  * For more details and usage information on ActiveFixture, see the [guide article on fixtures](guide:test-fixtures).
  *
- * @property TableSchema $tableSchema The schema information of the database table associated with this
+ * @property-read TableSchema $tableSchema The schema information of the database table associated with this
  * fixture. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
diff --git a/src/validators/DateValidator.php b/src/validators/DateValidator.php
index 3f2dccf13b9..24604cf6721 100644
--- a/src/validators/DateValidator.php
+++ b/src/validators/DateValidator.php
@@ -8,6 +8,7 @@
 namespace yii\validators;
 
 use DateTime;
+use DateTimeZone;
 use Exception;
 use IntlDateFormatter;
 use Yii;
@@ -125,10 +126,11 @@ class DateValidator extends Validator
      * This can be the same attribute as the one being validated. If this is the case,
      * the original value will be overwritten with the timestamp value after successful validation.
      *
-     * Note, that when using this property, the input value will be converted to a unix timestamp,
-     * which by definition is in UTC, so a conversion from the [[$timeZone|input time zone]] to UTC
-     * will be performed. When defining [[$timestampAttributeFormat]] you can control the conversion by
-     * setting [[$timestampAttributeTimeZone]] to a different value than `'UTC'`.
+     * Note, that when using this property, the input value will be converted to a unix timestamp, which by definition
+     * is in [[$defaultTimeZone|default UTC time zone]], so a conversion from the [[$timeZone|input time zone]] to
+     * the default one will be performed. If you want to change the default time zone, set the [[$defaultTimeZone]] property.
+     * When defining [[$timestampAttributeFormat]] you can further control the conversion by setting
+     * [[$timestampAttributeTimeZone]] to a different value than `'UTC'`.
      *
      * @see timestampAttributeFormat
      * @see timestampAttributeTimeZone
@@ -146,7 +148,7 @@ class DateValidator extends Validator
      */
     public $timestampAttributeFormat;
     /**
-     * @var string the timezone to use when populating the [[timestampAttribute]]. Defaults to `UTC`.
+     * @var string the timezone to use when populating the [[timestampAttribute]] with [[timestampAttributeFormat]]. Defaults to `UTC`.
      *
      * This can be any value that may be passed to [date_default_timezone_set()](https://secure.php.net/manual/en/function.date-default-timezone-set.php)
      * e.g. `UTC`, `Europe/Berlin` or `America/Chicago`.
@@ -202,6 +204,12 @@ class DateValidator extends Validator
      * @since 2.0.22
      */
     public $strictDateFormat = false;
+    /**
+     * @var string the default timezone used for parsing when no time parts are provided in the format.
+     * See [[timestampAttributeTimeZone]] for more description.
+     * @since 2.0.39
+     */
+    public $defaultTimeZone = 'UTC';
 
     /**
      * @var array map of short format names to IntlDateFormatter constant values.
@@ -288,10 +296,8 @@ public function validateAttribute($model, $attribute)
                     if (is_int($value)) {
                         return;
                     }
-                } else {
-                    if ($this->parseDateValueFormat($value, $this->timestampAttributeFormat) !== false) {
-                        return;
-                    }
+                } elseif ($this->parseDateValueFormat($value, $this->timestampAttributeFormat) !== false) {
+                    return;
                 }
             }
             $this->addError($model, $attribute, $this->message, []);
@@ -328,7 +334,7 @@ protected function validateValue($value)
     /**
      * Parses date string into UNIX timestamp.
      *
-     * @param string $value string representing date
+     * @param mixed $value string representing date
      * @return int|false a UNIX timestamp or `false` on failure.
      */
     protected function parseDateValue($value)
@@ -340,7 +346,7 @@ protected function parseDateValue($value)
     /**
      * Parses date string into UNIX timestamp.
      *
-     * @param string $value string representing date
+     * @param mixed $value string representing date
      * @param string $format expected date format
      * @return int|false a UNIX timestamp or `false` on failure.
      * @throws InvalidConfigException
@@ -399,17 +405,15 @@ private function parseDateValueIntl($value, $format)
     private function getIntlDateFormatter($format)
     {
         if (!isset($this->_dateFormats[$format])) {
-            // if no time was provided in the format string set time to 0 to get a simple date timestamp
-            $hasTimeInfo = (strpbrk($format, 'ahHkKmsSA') !== false);
-            $formatter = new IntlDateFormatter($this->locale, IntlDateFormatter::NONE, IntlDateFormatter::NONE, $hasTimeInfo ? $this->timeZone : 'UTC', null, $format);
-
-            return $formatter;
+            // if no time was provided in the format string set timezone to default one to match yii\i18n\Formatter::formatDateTimeValue()
+            $timezone = strpbrk($format, 'ahHkKmsSA') !== false ? $this->timeZone : $this->defaultTimeZone;
+            return new IntlDateFormatter($this->locale, IntlDateFormatter::NONE, IntlDateFormatter::NONE, $timezone, null, $format);
         }
 
         if ($this->type === self::TYPE_DATE) {
             $dateType = $this->_dateFormats[$format];
             $timeType = IntlDateFormatter::NONE;
-            $timeZone = 'UTC';
+            $timeZone = $this->defaultTimeZone;
         } elseif ($this->type === self::TYPE_DATETIME) {
             $dateType = $this->_dateFormats[$format];
             $timeType = $this->_dateFormats[$format];
@@ -422,9 +426,7 @@ private function getIntlDateFormatter($format)
             throw new InvalidConfigException('Unknown validation type set for DateValidator::$type: ' . $this->type);
         }
 
-        $formatter = new IntlDateFormatter($this->locale, $dateType, $timeType, $timeZone);
-
-        return $formatter;
+        return new IntlDateFormatter($this->locale, $dateType, $timeType, $timeZone);
     }
 
     /**
@@ -435,16 +437,17 @@ private function getIntlDateFormatter($format)
      */
     private function parseDateValuePHP($value, $format)
     {
-        // if no time was provided in the format string set time to 0 to get a simple date timestamp
-        $hasTimeInfo = (strpbrk($format, 'HhGgisU') !== false);
-
-        $date = DateTime::createFromFormat($format, $value, new \DateTimeZone($hasTimeInfo ? $this->timeZone : 'UTC'));
+        $hasTimeInfo = strpbrk($format, 'HhGgisU') !== false;
+        // if no time was provided in the format string set timezone to default one to match yii\i18n\Formatter::formatDateTimeValue()
+        $timezone = $hasTimeInfo ? $this->timeZone : $this->defaultTimeZone;
+        $date = DateTime::createFromFormat($format, $value, new DateTimeZone($timezone));
         $errors = DateTime::getLastErrors();
         if ($date === false || $errors['error_count'] || $errors['warning_count'] || ($this->strictDateFormat && $date->format($format) !== $value)) {
             return false;
         }
 
         if (!$hasTimeInfo) {
+            // if no time was provided in the format string set time to 0 to get a simple date timestamp
             $date->setTime(0, 0, 0);
         }
 
@@ -468,7 +471,8 @@ private function formatTimestamp($timestamp, $format)
 
         $date = new DateTime();
         $date->setTimestamp($timestamp);
-        $date->setTimezone(new \DateTimeZone($this->timestampAttributeTimeZone));
+        $date->setTimezone(new DateTimeZone($this->timestampAttributeTimeZone));
+
         return $date->format($format);
     }
 }
diff --git a/src/validators/FileValidator.php b/src/validators/FileValidator.php
index c941ff6f48e..d67934ffd74 100644
--- a/src/validators/FileValidator.php
+++ b/src/validators/FileValidator.php
@@ -20,7 +20,7 @@
  *
  * Note that you should enable `fileinfo` PHP extension.
  *
- * @property int $sizeLimit The size limit for uploaded files. This property is read-only.
+ * @property-read int $sizeLimit The size limit for uploaded files. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/validators/Validator.php b/src/validators/Validator.php
index 19800a1cd56..5b808acd271 100644
--- a/src/validators/Validator.php
+++ b/src/validators/Validator.php
@@ -48,8 +48,8 @@
  *
  * For more details and usage information on Validator, see the [guide article on validators](guide:input-validation).
  *
- * @property array $attributeNames Attribute names. This property is read-only.
- * @property array $validationAttributes List of attribute names. This property is read-only.
+ * @property-read array $attributeNames Attribute names. This property is read-only.
+ * @property-read array $validationAttributes List of attribute names. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/web/Application.php b/src/web/Application.php
index f20c2f85213..6a052f19d3d 100644
--- a/src/web/Application.php
+++ b/src/web/Application.php
@@ -16,12 +16,13 @@
  *
  * For more details and usage information on Application, see the [guide article on applications](guide:structure-applications).
  *
- * @property ErrorHandler $errorHandler The error handler application component. This property is read-only.
+ * @property-read ErrorHandler $errorHandler The error handler application component. This property is
+ * read-only.
  * @property string $homeUrl The homepage URL.
- * @property Request $request The request component. This property is read-only.
- * @property Response $response The response component. This property is read-only.
- * @property Session $session The session component. This property is read-only.
- * @property User $user The user component. This property is read-only.
+ * @property-read Request $request The request component. This property is read-only.
+ * @property-read Response $response The response component. This property is read-only.
+ * @property-read Session $session The session component. This property is read-only.
+ * @property-read User $user The user component. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/web/AssetBundle.php b/src/web/AssetBundle.php
index 9890da94964..60ada80ef3b 100644
--- a/src/web/AssetBundle.php
+++ b/src/web/AssetBundle.php
@@ -153,10 +153,10 @@ public function registerAssetFiles($view)
             if (is_array($js)) {
                 $file = array_shift($js);
                 $options = ArrayHelper::merge($this->jsOptions, $js);
-                $view->registerJsFile($manager->getAssetUrl($this, $file), $options);
+                $view->registerJsFile($manager->getActualAssetUrl($this, $file), $options);
             } else {
                 if ($js !== null) {
-                    $view->registerJsFile($manager->getAssetUrl($this, $js), $this->jsOptions);
+                    $view->registerJsFile($manager->getActualAssetUrl($this, $js), $this->jsOptions);
                 }
             }
         }
@@ -164,10 +164,10 @@ public function registerAssetFiles($view)
             if (is_array($css)) {
                 $file = array_shift($css);
                 $options = ArrayHelper::merge($this->cssOptions, $css);
-                $view->registerCssFile($manager->getAssetUrl($this, $file), $options);
+                $view->registerCssFile($manager->getActualAssetUrl($this, $file), $options);
             } else {
                 if ($css !== null) {
-                    $view->registerCssFile($manager->getAssetUrl($this, $css), $this->cssOptions);
+                    $view->registerCssFile($manager->getActualAssetUrl($this, $css), $this->cssOptions);
                 }
             }
         }
diff --git a/src/web/AssetManager.php b/src/web/AssetManager.php
index ee0b61ed4ee..215f5b1ac8d 100644
--- a/src/web/AssetManager.php
+++ b/src/web/AssetManager.php
@@ -34,7 +34,7 @@
  * For more details and usage information on AssetManager, see the [guide article on assets](guide:structure-assets).
  *
  * @property AssetConverterInterface $converter The asset converter. Note that the type of this property
- * differs in getter and setter. See [[getConverter()]] and [[setConverter()]] for details.
+ * differs in getter and setter. See [[getConverter()]]  and [[setConverter()]] for details.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
@@ -298,30 +298,14 @@ protected function loadDummyBundle($name)
      */
     public function getAssetUrl($bundle, $asset)
     {
-        if (($actualAsset = $this->resolveAsset($bundle, $asset)) !== false) {
-            if (strncmp($actualAsset, '@web/', 5) === 0) {
-                $asset = substr($actualAsset, 5);
-                $basePath = Yii::getAlias('@webroot');
-                $baseUrl = Yii::getAlias('@web');
-            } else {
-                $asset = Yii::getAlias($actualAsset);
-                $basePath = $this->basePath;
-                $baseUrl = $this->baseUrl;
-            }
-        } else {
-            $basePath = $bundle->basePath;
-            $baseUrl = $bundle->baseUrl;
-        }
+        $assetUrl = $this->getActualAssetUrl($bundle, $asset);
+        $assetPath = $this->getAssetPath($bundle, $asset);
 
-        if (!Url::isRelative($asset) || strncmp($asset, '/', 1) === 0) {
-            return $asset;
+        if ($this->appendTimestamp && $assetPath && ($timestamp = @filemtime($assetPath)) > 0) {
+            return "$assetUrl?v=$timestamp";
         }
 
-        if ($this->appendTimestamp && ($timestamp = @filemtime("$basePath/$asset")) > 0) {
-            return "$baseUrl/$asset?v=$timestamp";
-        }
-
-        return "$baseUrl/$asset";
+        return $assetUrl;
     }
 
     /**
@@ -625,4 +609,33 @@ protected function hash($path)
         $path = (is_file($path) ? dirname($path) : $path) . filemtime($path);
         return sprintf('%x', crc32($path . Yii::getVersion() . '|' . $this->linkAssets));
     }
+
+    /**
+     * Returns the actual URL for the specified asset. Without parameters.
+     * The actual URL is obtained by prepending either [[AssetBundle::$baseUrl]] or [[AssetManager::$baseUrl]] to the given asset path.
+     * @param AssetBundle $bundle the asset bundle which the asset file belongs to
+     * @param string $asset the asset path. This should be one of the assets listed in [[AssetBundle::$js]] or [[AssetBundle::$css]].
+     * @return string the actual URL for the specified asset.
+     * @since 2.0.39
+     */
+    public function getActualAssetUrl($bundle, $asset)
+    {
+        if (($actualAsset = $this->resolveAsset($bundle, $asset)) !== false) {
+            if (strncmp($actualAsset, '@web/', 5) === 0) {
+                $asset = substr($actualAsset, 5);
+                $baseUrl = Yii::getAlias('@web');
+            } else {
+                $asset = Yii::getAlias($actualAsset);
+                $baseUrl = $this->baseUrl;
+            }
+        } else {
+            $baseUrl = $bundle->baseUrl;
+        }
+
+        if (!Url::isRelative($asset) || strncmp($asset, '/', 1) === 0) {
+            return $asset;
+        }
+
+        return "$baseUrl/$asset";
+    }
 }
diff --git a/src/web/CacheSession.php b/src/web/CacheSession.php
index 918535973a4..ecb14b782a1 100644
--- a/src/web/CacheSession.php
+++ b/src/web/CacheSession.php
@@ -31,7 +31,7 @@
  * ]
  * ```
  *
- * @property bool $useCustomStorage Whether to use custom storage. This property is read-only.
+ * @property-read bool $useCustomStorage Whether to use custom storage. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
@@ -69,6 +69,26 @@ public function getUseCustomStorage()
         return true;
     }
 
+    /**
+     * Session open handler.
+     * @internal Do not call this method directly.
+     * @param string $savePath session save path
+     * @param string $sessionName session name
+     * @return bool whether session is opened successfully
+     */
+    public function openSession($savePath, $sessionName)
+    {
+        if ($this->getUseStrictMode()) {
+            $id = $this->getId();
+            if (!$this->cache->exists($this->calculateKey($id))) {
+                //This session id does not exist, mark it for forced regeneration
+                $this->_forceRegenerateId = $id;
+            }
+        }
+
+        return parent::openSession($savePath, $sessionName);
+    }
+
     /**
      * Session read handler.
      * @internal Do not call this method directly.
@@ -91,6 +111,11 @@ public function readSession($id)
      */
     public function writeSession($id, $data)
     {
+        if ($this->getUseStrictMode() && $id === $this->_forceRegenerateId) {
+            //Ignore write when forceRegenerate is active for this id
+            return true;
+        }
+
         return $this->cache->set($this->calculateKey($id), $data, $this->getTimeout());
     }
 
diff --git a/src/web/CompositeUrlRule.php b/src/web/CompositeUrlRule.php
index d985f078010..d707c64ccc4 100644
--- a/src/web/CompositeUrlRule.php
+++ b/src/web/CompositeUrlRule.php
@@ -13,8 +13,8 @@
 /**
  * CompositeUrlRule is the base class for URL rule classes that consist of multiple simpler rules.
  *
- * @property null|int $createUrlStatus Status of the URL creation after the last [[createUrl()]] call. `null`
- * if rule does not provide info about create status. This property is read-only.
+ * @property-read null|int $createUrlStatus Status of the URL creation after the last [[createUrl()]] call.
+ * `null` if rule does not provide info about create status. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/web/Controller.php b/src/web/Controller.php
index 3b2e8b1ffae..4e205d00eb6 100644
--- a/src/web/Controller.php
+++ b/src/web/Controller.php
@@ -8,7 +8,6 @@
 namespace yii\web;
 
 use Yii;
-use yii\base\ErrorException;
 use yii\base\Exception;
 use yii\base\InlineAction;
 use yii\helpers\Url;
@@ -18,6 +17,9 @@
  *
  * For more details and usage information on Controller, see the [guide article on controllers](guide:structure-controllers).
  *
+ * @property Request $request
+ * @property Response $response
+ *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
  */
@@ -130,7 +132,12 @@ public function bindActionParams($action, $params)
             $name = $param->getName();
             if (array_key_exists($name, $params)) {
                 $isValid = true;
-                if ($param->isArray()) {
+                if (PHP_VERSION_ID >= 80000) {
+                    $isArray = ($type = $param->getType()) instanceof \ReflectionNamedType && $type->getName() === 'array';
+                } else {
+                    $isArray = $param->isArray();
+                }
+                if ($isArray) {
                     $params[$name] = (array)$params[$name];
                 } elseif (is_array($params[$name])) {
                     $isValid = false;
diff --git a/src/web/CookieCollection.php b/src/web/CookieCollection.php
index e5b2b688f16..c26cfd35445 100644
--- a/src/web/CookieCollection.php
+++ b/src/web/CookieCollection.php
@@ -17,9 +17,9 @@
  *
  * For more details and usage information on CookieCollection, see the [guide article on handling cookies](guide:runtime-sessions-cookies).
  *
- * @property int $count The number of cookies in the collection. This property is read-only.
- * @property ArrayIterator $iterator An iterator for traversing the cookies in the collection. This property
- * is read-only.
+ * @property-read int $count The number of cookies in the collection. This property is read-only.
+ * @property-read ArrayIterator $iterator An iterator for traversing the cookies in the collection. This
+ * property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/web/DbSession.php b/src/web/DbSession.php
index 26c392f0d34..bc23f660660 100644
--- a/src/web/DbSession.php
+++ b/src/web/DbSession.php
@@ -93,6 +93,26 @@ public function init()
         $this->db = Instance::ensure($this->db, Connection::className());
     }
 
+    /**
+     * Session open handler.
+     * @internal Do not call this method directly.
+     * @param string $savePath session save path
+     * @param string $sessionName session name
+     * @return bool whether session is opened successfully
+     */
+    public function openSession($savePath, $sessionName)
+    {
+        if ($this->getUseStrictMode()) {
+            $id = $this->getId();
+            if (!$this->getReadQuery($id)->exists()) {
+                //This session id does not exist, mark it for forced regeneration
+                $this->_forceRegenerateId = $id;
+            }
+        }
+
+        return parent::openSession($savePath, $sessionName);
+    }
+
     /**
      * {@inheritdoc}
      */
@@ -160,9 +180,7 @@ public function close()
      */
     public function readSession($id)
     {
-        $query = new Query();
-        $query->from($this->sessionTable)
-            ->where('[[expire]]>:expire AND [[id]]=:id', [':expire' => time(), ':id' => $id]);
+        $query = $this->getReadQuery($id);
 
         if ($this->readCallback !== null) {
             $fields = $query->one($this->db);
@@ -182,6 +200,11 @@ public function readSession($id)
      */
     public function writeSession($id, $data)
     {
+        if ($this->getUseStrictMode() && $id === $this->_forceRegenerateId) {
+            //Ignore write when forceRegenerate is active for this id
+            return true;
+        }
+
         // exception must be caught in session write handler
         // https://secure.php.net/manual/en/function.session-set-save-handler.php#refsect1-function.session-set-save-handler-notes
         try {
@@ -240,6 +263,18 @@ public function gcSession($maxLifetime)
         return true;
     }
 
+    /**
+     * Generates a query to get the session from db
+     * @param string $id The id of the session
+     * @return Query
+     */
+    protected function getReadQuery($id)
+    {
+        return (new Query())
+            ->from($this->sessionTable)
+            ->where('[[expire]]>:expire AND [[id]]=:id', [':expire' => time(), ':id' => $id]);
+    }
+
     /**
      * Method typecasts $fields before passing them to PDO.
      * Default implementation casts field `data` to `\PDO::PARAM_LOB`.
diff --git a/src/web/ErrorHandler.php b/src/web/ErrorHandler.php
index 44784d61ff3..8c9ee2728f9 100644
--- a/src/web/ErrorHandler.php
+++ b/src/web/ErrorHandler.php
@@ -483,7 +483,7 @@ public function argumentsToString($args)
     /**
      * Returns human-readable exception name.
      * @param \Exception $exception
-     * @return string human-readable exception name or null if it cannot be determined
+     * @return string|null human-readable exception name or null if it cannot be determined
      */
     public function getExceptionName($exception)
     {
diff --git a/src/web/HeaderCollection.php b/src/web/HeaderCollection.php
index 7c135d26824..1fa6021f7b4 100644
--- a/src/web/HeaderCollection.php
+++ b/src/web/HeaderCollection.php
@@ -13,9 +13,9 @@
 /**
  * HeaderCollection is used by [[Response]] to maintain the currently registered HTTP headers.
  *
- * @property int $count The number of headers in the collection. This property is read-only.
- * @property \ArrayIterator $iterator An iterator for traversing the headers in the collection. This property
- * is read-only.
+ * @property-read int $count The number of headers in the collection. This property is read-only.
+ * @property-read \ArrayIterator $iterator An iterator for traversing the headers in the collection. This
+ * property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/web/MultiFieldSession.php b/src/web/MultiFieldSession.php
index cd26d120aca..1b73e6d583e 100644
--- a/src/web/MultiFieldSession.php
+++ b/src/web/MultiFieldSession.php
@@ -22,7 +22,7 @@
  * While extending this class you should use [[composeFields()]] method - while writing the session data into the storage and
  * [[extractData()]] - while reading session data from the storage.
  *
- * @property bool $useCustomStorage Whether to use custom storage. This property is read-only.
+ * @property-read bool $useCustomStorage Whether to use custom storage. This property is read-only.
  *
  * @author Paul Klimov <klimov.paul@gmail.com>
  * @since 2.0.6
diff --git a/src/web/MultipartFormDataParser.php b/src/web/MultipartFormDataParser.php
index 0685160f1bd..c6f8c8ccaa6 100644
--- a/src/web/MultipartFormDataParser.php
+++ b/src/web/MultipartFormDataParser.php
@@ -141,10 +141,11 @@ public function parse($rawBody, $contentType)
             return [];
         }
 
-        if (!preg_match('/boundary=(.*)$/is', $contentType, $matches)) {
+        if (!preg_match('/boundary="?(.*)"?$/is', $contentType, $matches)) {
             return [];
         }
-        $boundary = $matches[1];
+
+        $boundary = trim($matches[1], '"');
 
         $bodyParts = preg_split('/\\R?-+' . preg_quote($boundary, '/') . '/s', $rawBody);
         array_pop($bodyParts); // last block always has no data, contains boundary ending like `--`
diff --git a/src/web/Request.php b/src/web/Request.php
index a99c2b3d379..6ebd807a8bd 100644
--- a/src/web/Request.php
+++ b/src/web/Request.php
@@ -23,70 +23,73 @@
  *
  * For more details and usage information on Request, see the [guide article on requests](guide:runtime-requests).
  *
- * @property string $absoluteUrl The currently requested absolute URL. This property is read-only.
+ * @property-read string $absoluteUrl The currently requested absolute URL. This property is read-only.
  * @property array $acceptableContentTypes The content types ordered by the quality score. Types with the
  * highest scores will be returned first. The array keys are the content types, while the array values are the
  * corresponding quality score and other parameters as given in the header.
  * @property array $acceptableLanguages The languages ordered by the preference level. The first element
  * represents the most preferred language.
- * @property array $authCredentials That contains exactly two elements: - 0: the username sent via HTTP
+ * @property-read array $authCredentials That contains exactly two elements: - 0: the username sent via HTTP
  * authentication, `null` if the username is not given - 1: the password sent via HTTP authentication, `null` if
  * the password is not given. This property is read-only.
- * @property string|null $authPassword The password sent via HTTP authentication, `null` if the password is
+ * @property-read string|null $authPassword The password sent via HTTP authentication, `null` if the password
+ * is not given. This property is read-only.
+ * @property-read string|null $authUser The username sent via HTTP authentication, `null` if the username is
  * not given. This property is read-only.
- * @property string|null $authUser The username sent via HTTP authentication, `null` if the username is not
- * given. This property is read-only.
  * @property string $baseUrl The relative URL for the application.
  * @property array $bodyParams The request parameters given in the request body.
- * @property string $contentType Request content-type. Null is returned if this information is not available.
- * This property is read-only.
- * @property CookieCollection $cookies The cookie collection. This property is read-only.
- * @property string $csrfToken The token used to perform CSRF validation. This property is read-only.
- * @property string $csrfTokenFromHeader The CSRF token sent via [[CSRF_HEADER]] by browser. Null is returned
- * if no such header is sent. This property is read-only.
- * @property array $eTags The entity tags. This property is read-only.
- * @property HeaderCollection $headers The header collection. This property is read-only.
+ * @property-read string $contentType Request content-type. Null is returned if this information is not
+ * available. This property is read-only.
+ * @property-read CookieCollection $cookies The cookie collection. This property is read-only.
+ * @property-read string $csrfToken The token used to perform CSRF validation. This property is read-only.
+ * @property-read string $csrfTokenFromHeader The CSRF token sent via [[CSRF_HEADER]] by browser. Null is
+ * returned if no such header is sent. This property is read-only.
+ * @property-read array $eTags The entity tags. This property is read-only.
+ * @property-read HeaderCollection $headers The header collection. This property is read-only.
  * @property string|null $hostInfo Schema and hostname part (with port number if needed) of the request URL
  * (e.g. `http://www.yiiframework.com`), null if can't be obtained from `$_SERVER` and wasn't set. See
  * [[getHostInfo()]] for security related notes on this property.
- * @property string|null $hostName Hostname part of the request URL (e.g. `www.yiiframework.com`). This
+ * @property-read string|null $hostName Hostname part of the request URL (e.g. `www.yiiframework.com`). This
  * property is read-only.
- * @property bool $isAjax Whether this is an AJAX (XMLHttpRequest) request. This property is read-only.
- * @property bool $isDelete Whether this is a DELETE request. This property is read-only.
- * @property bool $isFlash Whether this is an Adobe Flash or Adobe Flex request. This property is read-only.
- * @property bool $isGet Whether this is a GET request. This property is read-only.
- * @property bool $isHead Whether this is a HEAD request. This property is read-only.
- * @property bool $isOptions Whether this is a OPTIONS request. This property is read-only.
- * @property bool $isPatch Whether this is a PATCH request. This property is read-only.
- * @property bool $isPjax Whether this is a PJAX request. This property is read-only.
- * @property bool $isPost Whether this is a POST request. This property is read-only.
- * @property bool $isPut Whether this is a PUT request. This property is read-only.
- * @property bool $isSecureConnection If the request is sent via secure channel (https). This property is
+ * @property-read bool $isAjax Whether this is an AJAX (XMLHttpRequest) request. This property is read-only.
+ * @property-read bool $isDelete Whether this is a DELETE request. This property is read-only.
+ * @property-read bool $isFlash Whether this is an Adobe Flash or Adobe Flex request. This property is
  * read-only.
- * @property string $method Request method, such as GET, POST, HEAD, PUT, PATCH, DELETE. The value returned is
- * turned into upper case. This property is read-only.
- * @property string|null $origin URL origin of a CORS request, `null` if not available. This property is
+ * @property-read bool $isGet Whether this is a GET request. This property is read-only.
+ * @property-read bool $isHead Whether this is a HEAD request. This property is read-only.
+ * @property-read bool $isOptions Whether this is a OPTIONS request. This property is read-only.
+ * @property-read bool $isPatch Whether this is a PATCH request. This property is read-only.
+ * @property-read bool $isPjax Whether this is a PJAX request. This property is read-only.
+ * @property-read bool $isPost Whether this is a POST request. This property is read-only.
+ * @property-read bool $isPut Whether this is a PUT request. This property is read-only.
+ * @property-read bool $isSecureConnection If the request is sent via secure channel (https). This property is
+ * read-only.
+ * @property-read string $method Request method, such as GET, POST, HEAD, PUT, PATCH, DELETE. The value
+ * returned is turned into upper case. This property is read-only.
+ * @property-read string|null $origin URL origin of a CORS request, `null` if not available. This property is
  * read-only.
  * @property string $pathInfo Part of the request URL that is after the entry script and before the question
  * mark. Note, the returned path info is already URL-decoded.
  * @property int $port Port number for insecure requests.
  * @property array $queryParams The request GET parameter values.
- * @property string $queryString Part of the request URL that is after the question mark. This property is
- * read-only.
+ * @property-read string $queryString Part of the request URL that is after the question mark. This property
+ * is read-only.
  * @property string $rawBody The request body.
- * @property string|null $referrer URL referrer, null if not available. This property is read-only.
- * @property string|null $remoteHost Remote host name, `null` if not available. This property is read-only.
- * @property string|null $remoteIP Remote IP address, `null` if not available. This property is read-only.
+ * @property-read string|null $referrer URL referrer, null if not available. This property is read-only.
+ * @property-read string|null $remoteHost Remote host name, `null` if not available. This property is
+ * read-only.
+ * @property-read string|null $remoteIP Remote IP address, `null` if not available. This property is
+ * read-only.
  * @property string $scriptFile The entry script file path.
  * @property string $scriptUrl The relative URL of the entry script.
  * @property int $securePort Port number for secure requests.
- * @property string $serverName Server name, null if not available. This property is read-only.
- * @property int|null $serverPort Server port number, null if not available. This property is read-only.
+ * @property-read string $serverName Server name, null if not available. This property is read-only.
+ * @property-read int|null $serverPort Server port number, null if not available. This property is read-only.
  * @property string $url The currently requested relative URL. Note that the URI returned may be URL-encoded
  * depending on the client.
- * @property string|null $userAgent User agent, null if not available. This property is read-only.
- * @property string|null $userHost User host name, null if not available. This property is read-only.
- * @property string|null $userIP User IP address, null if not available. This property is read-only.
+ * @property-read string|null $userAgent User agent, null if not available. This property is read-only.
+ * @property-read string|null $userHost User host name, null if not available. This property is read-only.
+ * @property-read string|null $userIP User IP address, null if not available. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/web/Response.php b/src/web/Response.php
index 78e719fefe5..cbeac1ba37f 100644
--- a/src/web/Response.php
+++ b/src/web/Response.php
@@ -37,23 +37,27 @@
  *
  * For more details and usage information on Response, see the [guide article on responses](guide:runtime-responses).
  *
- * @property CookieCollection $cookies The cookie collection. This property is read-only.
- * @property string $downloadHeaders The attachment file name. This property is write-only.
- * @property HeaderCollection $headers The header collection. This property is read-only.
- * @property bool $isClientError Whether this response indicates a client error. This property is read-only.
- * @property bool $isEmpty Whether this response is empty. This property is read-only.
- * @property bool $isForbidden Whether this response indicates the current request is forbidden. This property
- * is read-only.
- * @property bool $isInformational Whether this response is informational. This property is read-only.
- * @property bool $isInvalid Whether this response has a valid [[statusCode]]. This property is read-only.
- * @property bool $isNotFound Whether this response indicates the currently requested resource is not found.
- * This property is read-only.
- * @property bool $isOk Whether this response is OK. This property is read-only.
- * @property bool $isRedirection Whether this response is a redirection. This property is read-only.
- * @property bool $isServerError Whether this response indicates a server error. This property is read-only.
- * @property bool $isSuccessful Whether this response is successful. This property is read-only.
+ * @property-read CookieCollection $cookies The cookie collection. This property is read-only.
+ * @property-write string $downloadHeaders The attachment file name. This property is write-only.
+ * @property-read HeaderCollection $headers The header collection. This property is read-only.
+ * @property-read bool $isClientError Whether this response indicates a client error. This property is
+ * read-only.
+ * @property-read bool $isEmpty Whether this response is empty. This property is read-only.
+ * @property-read bool $isForbidden Whether this response indicates the current request is forbidden. This
+ * property is read-only.
+ * @property-read bool $isInformational Whether this response is informational. This property is read-only.
+ * @property-read bool $isInvalid Whether this response has a valid [[statusCode]]. This property is
+ * read-only.
+ * @property-read bool $isNotFound Whether this response indicates the currently requested resource is not
+ * found. This property is read-only.
+ * @property-read bool $isOk Whether this response is OK. This property is read-only.
+ * @property-read bool $isRedirection Whether this response is a redirection. This property is read-only.
+ * @property-read bool $isServerError Whether this response indicates a server error. This property is
+ * read-only.
+ * @property-read bool $isSuccessful Whether this response is successful. This property is read-only.
  * @property int $statusCode The HTTP status code to send with the response.
- * @property \Exception|\Error $statusCodeByException The exception object. This property is write-only.
+ * @property-write \Exception|\Error|\Throwable $statusCodeByException The exception object. This property is
+ * write-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @author Carsten Brandt <mail@cebe.cc>
@@ -295,7 +299,7 @@ public function setStatusCode($value, $text = null)
 
     /**
      * Sets the response status code based on the exception.
-     * @param \Exception|\Error $e the exception object.
+     * @param \Exception|\Error|\Throwable $e the exception object.
      * @throws InvalidArgumentException if the status code is invalid.
      * @return $this the response object itself
      * @since 2.0.12
@@ -441,7 +445,12 @@ protected function sendContent()
 
         if (is_array($this->stream)) {
             list($handle, $begin, $end) = $this->stream;
-            fseek($handle, $begin);
+
+            // only seek if stream is seekable
+            if ($this->isSeekable($handle)) {
+                fseek($handle, $begin);
+            }
+
             while (!feof($handle) && ($pos = ftell($handle)) <= $end) {
                 if ($pos + $chunkSize > $end) {
                     $chunkSize = $end - $pos + 1;
@@ -583,8 +592,12 @@ public function sendStreamAsFile($handle, $attachmentName, $options = [])
         if (isset($options['fileSize'])) {
             $fileSize = $options['fileSize'];
         } else {
-            fseek($handle, 0, SEEK_END);
-            $fileSize = ftell($handle);
+            if ($this->isSeekable($handle)) {
+                fseek($handle, 0, SEEK_END);
+                $fileSize = ftell($handle);
+            } else {
+                $fileSize = 0;
+            }
         }
 
         $range = $this->getHttpRange($fileSize);
@@ -1089,4 +1102,20 @@ protected function prepare()
             }
         }
     }
+
+    /**
+     * Checks if a stream is seekable
+     *
+     * @param $handle
+     * @return bool
+     */
+    private function isSeekable($handle)
+    {
+        if (!is_resource($handle)) {
+            return true;
+        }
+
+        $metaData = stream_get_meta_data($handle);
+        return isset($metaData['seekable']) && $metaData['seekable'] === true;
+    }
 }
diff --git a/src/web/Session.php b/src/web/Session.php
index fcc8a3a3f7b..03d4ece7c63 100644
--- a/src/web/Session.php
+++ b/src/web/Session.php
@@ -45,27 +45,28 @@
  *
  * For more details and usage information on Session, see the [guide article on sessions](guide:runtime-sessions-cookies).
  *
- * @property array $allFlashes Flash messages (key => message or key => [message1, message2]). This property
- * is read-only.
- * @property string $cacheLimiter Current cache limiter. This property is read-only.
- * @property array $cookieParams The session cookie parameters. This property is read-only.
- * @property int $count The number of session variables. This property is read-only.
- * @property string $flash The key identifying the flash message. Note that flash messages and normal session
- * variables share the same name space. If you have a normal session variable using the same name, its value will
- * be overwritten by this method. This property is write-only.
+ * @property-read array $allFlashes Flash messages (key => message or key => [message1, message2]). This
+ * property is read-only.
+ * @property-read string $cacheLimiter Current cache limiter. This property is read-only.
+ * @property-read array $cookieParams The session cookie parameters. This property is read-only.
+ * @property-read int $count The number of session variables. This property is read-only.
+ * @property-write string $flash The key identifying the flash message. Note that flash messages and normal
+ * session variables share the same name space. If you have a normal session variable using the same name, its
+ * value will be overwritten by this method. This property is write-only.
  * @property float $gCProbability The probability (percentage) that the GC (garbage collection) process is
  * started on every session initialization.
  * @property bool $hasSessionId Whether the current request has sent the session ID.
  * @property string $id The current session ID.
- * @property bool $isActive Whether the session has started. This property is read-only.
- * @property SessionIterator $iterator An iterator for traversing the session variables. This property is
+ * @property-read bool $isActive Whether the session has started. This property is read-only.
+ * @property-read SessionIterator $iterator An iterator for traversing the session variables. This property is
  * read-only.
  * @property string $name The current session name.
  * @property string $savePath The current session save path, defaults to '/tmp'.
  * @property int $timeout The number of seconds after which data will be seen as 'garbage' and cleaned up. The
  * default value is 1440 seconds (or the value of "session.gc_maxlifetime" set in php.ini).
  * @property bool|null $useCookies The value indicating whether cookies should be used to store session IDs.
- * @property bool $useCustomStorage Whether to use custom storage. This property is read-only.
+ * @property-read bool $useCustomStorage Whether to use custom storage. This property is read-only.
+ * @property-read bool $useStrictMode Whether strict mode is enabled or not. This property is read-only.
  * @property bool $useTransparentSessionID Whether transparent sid support is enabled or not, defaults to
  * false.
  *
@@ -74,6 +75,15 @@
  */
 class Session extends Component implements \IteratorAggregate, \ArrayAccess, \Countable
 {
+    /**
+     * @var string|null Holds the original session module (before a custom handler is registered) so that it can be
+     * restored when a Session component without custom handler is used after one that has.
+     */
+    static protected $_originalSessionModule = null;
+    /**
+     * Polyfill for ini directive session.use-strict-mode for PHP < 5.5.2.
+     */
+    static private $_useStrictModePolyfill = false;
     /**
      * @var string the name of the session variable that stores the flash message data.
      */
@@ -83,6 +93,11 @@ class Session extends Component implements \IteratorAggregate, \ArrayAccess, \Co
      */
     public $handler;
 
+    /**
+     * @var string|null Holds the session id in case useStrictMode is enabled and the session id needs to be regenerated
+     */
+    protected $_forceRegenerateId = null;
+
     /**
      * @var array parameter-value pairs to override default session cookie parameters that are used for session_set_cookie_params() function
      * Array may have the following possible keys: 'lifetime', 'path', 'domain', 'secure', 'httponly'
@@ -136,6 +151,11 @@ public function open()
 
         YII_DEBUG ? session_start() : @session_start();
 
+        if ($this->getUseStrictMode() && $this->_forceRegenerateId) {
+            $this->regenerateID();
+            $this->_forceRegenerateId = null;
+        }
+
         if ($this->getIsActive()) {
             Yii::info('Session started', __METHOD__);
             $this->updateFlashCounters();
@@ -152,6 +172,11 @@ public function open()
      */
     protected function registerSessionHandler()
     {
+        $sessionModuleName = session_module_name();
+        if (static::$_originalSessionModule === null) {
+            static::$_originalSessionModule = $sessionModuleName;
+        }
+
         if ($this->handler !== null) {
             if (!is_object($this->handler)) {
                 $this->handler = Yii::createObject($this->handler);
@@ -180,6 +205,12 @@ protected function registerSessionHandler()
                     [$this, 'gcSession']
                 );
             }
+        } elseif (
+            $sessionModuleName !== static::$_originalSessionModule
+            && static::$_originalSessionModule !== null
+            && static::$_originalSessionModule !== 'user'
+        ) {
+            session_module_name(static::$_originalSessionModule);
         }
     }
 
@@ -191,6 +222,8 @@ public function close()
         if ($this->getIsActive()) {
             YII_DEBUG ? session_write_close() : @session_write_close();
         }
+
+        $this->_forceRegenerateId = null;
     }
 
     /**
@@ -514,6 +547,43 @@ public function setTimeout($value)
         $this->unfreeze();
     }
 
+    /**
+     * @var bool Whether strict mode is enabled or not.
+     * When `true` this setting prevents the session component to use an uninitialized session ID.
+     * Note: Enabling `useStrictMode` on PHP < 5.5.2 is only supported with custom storage classes.
+     * Warning! Although enabling strict mode is mandatory for secure sessions, the default value of 'session.use-strict-mode' is `0`.
+     * @see https://www.php.net/manual/en/session.configuration.php#ini.session.use-strict-mode
+     * @since 2.0.38
+     */
+    public function setUseStrictMode($value)
+    {
+        if (PHP_VERSION_ID < 50502) {
+            if ($this->getUseCustomStorage() || !$value) {
+                self::$_useStrictModePolyfill = $value;
+            } else {
+                throw new InvalidConfigException('Enabling `useStrictMode` on PHP < 5.5.2 is only supported with custom storage classes.');
+            }
+        } else {
+            $this->freeze();
+            ini_set('session.use_strict_mode', $value ? '1' : '0');
+            $this->unfreeze();
+        }
+    }
+
+    /**
+     * @return bool Whether strict mode is enabled or not.
+     * @see setUseStrictMode()
+     * @since 2.0.38
+     */
+    public function getUseStrictMode()
+    {
+        if (PHP_VERSION_ID < 50502) {
+            return self::$_useStrictModePolyfill;
+        }
+
+        return (bool)ini_get('session.use_strict_mode');
+    }
+
     /**
      * Session open handler.
      * This method should be overridden if [[useCustomStorage]] returns true.
diff --git a/src/web/UploadedFile.php b/src/web/UploadedFile.php
index 7a97b30c7b8..ed8fa111b89 100644
--- a/src/web/UploadedFile.php
+++ b/src/web/UploadedFile.php
@@ -22,10 +22,10 @@
  *
  * For more details and usage information on UploadedFile, see the [guide article on handling uploads](guide:input-file-upload).
  *
- * @property string $baseName Original file base name. This property is read-only.
- * @property string $extension File extension. This property is read-only.
- * @property bool $hasError Whether there is an error with the uploaded file. Check [[error]] for detailed
- * error code information. This property is read-only.
+ * @property-read string $baseName Original file base name. This property is read-only.
+ * @property-read string $extension File extension. This property is read-only.
+ * @property-read bool $hasError Whether there is an error with the uploaded file. Check [[error]] for
+ * detailed error code information. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/web/UrlRule.php b/src/web/UrlRule.php
index 2f0582350fb..25d3cd81faf 100644
--- a/src/web/UrlRule.php
+++ b/src/web/UrlRule.php
@@ -24,8 +24,8 @@
  * ]
  * ```
  *
- * @property null|int $createUrlStatus Status of the URL creation after the last [[createUrl()]] call. `null`
- * if rule does not provide info about create status. This property is read-only.
+ * @property-read null|int $createUrlStatus Status of the URL creation after the last [[createUrl()]] call.
+ * `null` if rule does not provide info about create status. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/web/User.php b/src/web/User.php
index 3e4db6a9ef1..db1935fe605 100644
--- a/src/web/User.php
+++ b/src/web/User.php
@@ -47,13 +47,13 @@
  * ]
  * ```
  *
- * @property string|int $id The unique identifier for the user. If `null`, it means the user is a guest. This
- * property is read-only.
+ * @property-read string|int $id The unique identifier for the user. If `null`, it means the user is a guest.
+ * This property is read-only.
  * @property IdentityInterface|null $identity The identity object associated with the currently logged-in
  * user. `null` is returned if the user is not logged in (not authenticated).
- * @property bool $isGuest Whether the current user is a guest. This property is read-only.
+ * @property-read bool $isGuest Whether the current user is a guest. This property is read-only.
  * @property string $returnUrl The URL that the user should be redirected to after login. Note that the type
- * of this property differs in getter and setter. See [[getReturnUrl()]] and [[setReturnUrl()]] for details.
+ * of this property differs in getter and setter. See [[getReturnUrl()]]  and [[setReturnUrl()]] for details.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/src/web/View.php b/src/web/View.php
index 626d7a86d52..c77f59fba7a 100644
--- a/src/web/View.php
+++ b/src/web/View.php
@@ -479,15 +479,16 @@ private function registerFile($type, $url, $options = [], $key = null)
         $url = Yii::getAlias($url);
         $key = $key ?: $url;
         $depends = ArrayHelper::remove($options, 'depends', []);
+        $originalOptions = $options;
         $position = ArrayHelper::remove($options, 'position', self::POS_END);
 
         try {
-            $asssetManagerAppendTimestamp = $this->getAssetManager()->appendTimestamp;
+            $assetManagerAppendTimestamp = $this->getAssetManager()->appendTimestamp;
         } catch (InvalidConfigException $e) {
             $depends = null; // the AssetManager is not available
-            $asssetManagerAppendTimestamp = false;
+            $assetManagerAppendTimestamp = false;
         }
-        $appendTimestamp = ArrayHelper::remove($options, 'appendTimestamp', $asssetManagerAppendTimestamp);
+        $appendTimestamp = ArrayHelper::remove($options, 'appendTimestamp', $assetManagerAppendTimestamp);
 
         if (empty($depends)) {
             // register directly without AssetManager
@@ -504,7 +505,7 @@ private function registerFile($type, $url, $options = [], $key = null)
                 'class' => AssetBundle::className(),
                 'baseUrl' => '',
                 'basePath' => '@webroot',
-                (string)$type => [!Url::isRelative($url) ? $url : ltrim($url, '/')],
+                (string)$type => [ArrayHelper::merge([!Url::isRelative($url) ? $url : ltrim($url, '/')], $originalOptions)],
                 "{$type}Options" => $options,
                 'depends' => (array)$depends,
             ]);
diff --git a/src/widgets/FragmentCache.php b/src/widgets/FragmentCache.php
index d9bed1f1b93..e30e997218c 100644
--- a/src/widgets/FragmentCache.php
+++ b/src/widgets/FragmentCache.php
@@ -18,8 +18,8 @@
 /**
  * FragmentCache is used by [[\yii\base\View]] to provide caching of page fragments.
  *
- * @property string|false $cachedContent The cached content. False is returned if valid content is not found
- * in the cache. This property is read-only.
+ * @property-read string|false $cachedContent The cached content. False is returned if valid content is not
+ * found in the cache. This property is read-only.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
diff --git a/package.json b/package.json
index 8596f2e04fe..e102ef18079 100644
--- a/package.json
+++ b/package.json
@@ -16,7 +16,7 @@
     "sinon": "^1.17.6"
   },
   "scripts": {
-    "test": "./node_modules/.bin/mocha tests/js/tests/*.test.js --timeout 0"
+    "test": "./node_modules/.bin/mocha tests/js/tests/*.test.js --timeout 0 --colors"
   },
   "repository": {
     "type": "git",
diff --git a/tests/data/console/migrate_create/create_fields_with_col_method_after_default_value.php b/tests/data/console/migrate_create/create_fields_with_col_method_after_default_value.php
new file mode 100644
index 00000000000..8d8a579bb39
--- /dev/null
+++ b/tests/data/console/migrate_create/create_fields_with_col_method_after_default_value.php
@@ -0,0 +1,42 @@
+<?php
+/**
+ * @link http://www.yiiframework.com/
+ * @copyright Copyright (c) 2008 Yii Software LLC
+ * @license http://www.yiiframework.com/license/
+ */
+
+return <<<CODE
+<?php
+
+{$namespace}use yii\db\Migration;
+
+/**
+ * Handles the creation of table `{{%test}}`.
+ */
+class {$class} extends Migration
+{
+    /**
+     * {@inheritdoc}
+     */
+    public function safeUp()
+    {
+        \$this->createTable('{{%test}}', [
+            'id' => \$this->primaryKey(),
+            'title' => \$this->string(10)->notNull()->unique()->defaultValue("test")->after("id"),
+            'body' => \$this->text()->notNull()->defaultValue("test")->after("title"),
+            'address' => \$this->text()->notNull()->defaultValue("test")->after("body"),
+            'address2' => \$this->text()->notNull()->defaultValue('te:st')->after("address"),
+            'address3' => \$this->text()->notNull()->defaultValue(':te:st:')->after("address2"),
+        ]);
+    }
+
+    /**
+     * {@inheritdoc}
+     */
+    public function safeDown()
+    {
+        \$this->dropTable('{{%test}}');
+    }
+}
+
+CODE;
diff --git a/tests/data/validators/models/FakedValidationModel.php b/tests/data/validators/models/FakedValidationModel.php
index 5933ac90754..bb74d969e4d 100644
--- a/tests/data/validators/models/FakedValidationModel.php
+++ b/tests/data/validators/models/FakedValidationModel.php
@@ -44,14 +44,14 @@ public function rules()
         ];
     }
 
-    public function inlineVal($attribute, $params = [], $validator, $current)
+    public function inlineVal($attribute, $params, $validator, $current)
     {
         $this->inlineValArgs = \func_get_args();
 
         return true;
     }
 
-    public function clientInlineVal($attribute, $params = [], $validator, $current)
+    public function clientInlineVal($attribute, $params, $validator, $current)
     {
         return \func_get_args();
     }
diff --git a/tests/framework/base/ModelTest.php b/tests/framework/base/ModelTest.php
index 4fedffb4dc7..428f3fb1b91 100644
--- a/tests/framework/base/ModelTest.php
+++ b/tests/framework/base/ModelTest.php
@@ -322,8 +322,8 @@ public function testErrors()
             'lastName' => ['Another one!'],
         ], $speaker->getErrors());
 
-        $this->assertEquals(['Another one!', 'Something is wrong!', 'Totally wrong!'], $speaker->getErrorSummary(true));
-        $this->assertEquals(['Another one!', 'Something is wrong!'], $speaker->getErrorSummary(false));
+        $this->assertEquals(['Something is wrong!', 'Totally wrong!', 'Another one!'], $speaker->getErrorSummary(true));
+        $this->assertEquals(['Something is wrong!', 'Another one!'], $speaker->getErrorSummary(false));
 
         $speaker->clearErrors('firstName');
         $this->assertEquals([
diff --git a/tests/framework/caching/FileCacheTest.php b/tests/framework/caching/FileCacheTest.php
index 3f19ee6aca3..55f2fcad1ea 100644
--- a/tests/framework/caching/FileCacheTest.php
+++ b/tests/framework/caching/FileCacheTest.php
@@ -53,6 +53,36 @@ public function testExpireAdd()
         $this->assertFalse($cache->get('expire_testa'));
     }
 
+    public function testKeyPrefix()
+    {
+        $keyPrefix = 'foobar';
+        $key = uniqid('uid-cache_');
+        $cache = $this->getCacheInstance();
+        $cache->flush();
+
+        $cache->directoryLevel = 1;
+        $cache->keyPrefix = $keyPrefix;
+        $normalizeKey = $cache->buildKey($key);
+        $expectedDirectoryName = substr($normalizeKey, 6, 2);
+
+        $value = \time();
+
+        $refClass = new \ReflectionClass($cache);
+
+        $refMethodGetCacheFile = $refClass->getMethod('getCacheFile');
+        $refMethodGetCacheFile->setAccessible(true);
+        $refMethodGet = $refClass->getMethod('get');
+        $refMethodSet = $refClass->getMethod('set');
+
+        $cacheFile = $refMethodGetCacheFile->invoke($cache, $normalizeKey);
+
+        $this->assertTrue($refMethodSet->invoke($cache, $key, $value));
+        $this->assertContains($keyPrefix, basename($cacheFile));
+        $this->assertEquals($expectedDirectoryName, basename(dirname($cacheFile)), $cacheFile);
+        $this->assertTrue(is_dir(dirname($cacheFile)), 'File not found ' . $cacheFile);
+        $this->assertEquals($value, $refMethodGet->invoke($cache, $key));
+    }
+
     public function testCacheRenewalOnDifferentOwnership()
     {
         $TRAVIS_SECOND_USER = getenv('TRAVIS_SECOND_USER');
diff --git a/tests/framework/console/controllers/MigrateControllerTest.php b/tests/framework/console/controllers/MigrateControllerTest.php
index 4f3e1ea5301..76ba005dfe6 100644
--- a/tests/framework/console/controllers/MigrateControllerTest.php
+++ b/tests/framework/console/controllers/MigrateControllerTest.php
@@ -131,6 +131,14 @@ public function generateMigrationDataProvider()
                     price:money(11,2):notNull,
                     parenthesis_in_comment:string(255):notNull:comment(\'Name of set (RU)\')',
             ],
+            'create_fields_with_col_method_after_default_value' => [
+                'fields' => 'id:primaryKey,
+                    title:string(10):notNull:unique:defaultValue("test"):after("id"),
+                    body:text:notNull:defaultValue("test"):after("title"),
+                    address:text:notNull:defaultValue("test"):after("body"),
+                    address2:text:notNull:defaultValue(\'te:st\'):after("address"),
+                    address3:text:notNull:defaultValue(\':te:st:\'):after("address2")',
+            ],
             'create_title_pk' => [
                 'fields' => 'title:primaryKey,body:text:notNull,price:money(11,2)',
             ],
@@ -236,6 +244,9 @@ public function generateMigrationDataProvider()
             ['create_title_with_comma_default_values', 'create_test_table', 'test', $params['create_title_with_comma_default_values']],
             ['create_field_with_colon_default_values', 'create_test_table', 'test', $params['create_field_with_colon_default_values']],
 
+            // @see https://github.com/yiisoft/yii2/issues/18303
+            ['create_fields_with_col_method_after_default_value', 'create_test_table', 'test', $params['create_fields_with_col_method_after_default_value']],
+
             ['drop_test', 'drop_test_table', 'test', []],
             ['drop_test', 'drop_test__table', 'test_', []],
             ['drop_test', 'drop_TEST_table', 'TEST', []],
diff --git a/tests/framework/console/widgets/TableTest.php b/tests/framework/console/widgets/TableTest.php
index 76335d135dc..59cf4bab17b 100644
--- a/tests/framework/console/widgets/TableTest.php
+++ b/tests/framework/console/widgets/TableTest.php
@@ -379,4 +379,150 @@ public function testCalculateRowHeightShouldNotThrowDivisionByZeroException()
         ]);
         $this->assertEqualsWithoutLE($table, $table);
     }
+
+    public function testLineBreakTableCell()
+    {
+        $table = new Table();
+
+        $expected = <<<"EXPECTED"
+╔══════════════════════╗
+║ test                 ║
+╟──────────────────────╢
+║ AAAAAAAAAAAAAAAAAAAA ║
+║ BBBBBBBBBBBBBBBBBBBB ║
+║ CCCCC                ║
+╟──────────────────────╢
+║ • AAAAAAAAAAAAAAAAAA ║
+║ BBBBBBB              ║
+║ • CCCCCCCCCCCCCCCCCC ║
+║ DDDDDDD              ║
+╚══════════════════════╝
+
+EXPECTED;
+
+        $this->assertEqualsWithoutLE(
+            $expected,
+            $table->setHeaders(['test'])
+                ->setRows([
+                    ['AAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBCCCCC'],
+                    [[
+                        'AAAAAAAAAAAAAAAAAABBBBBBB',
+                        'CCCCCCCCCCCCCCCCCCDDDDDDD',
+                    ]],
+                ])
+                ->setScreenWidth(25)
+                ->run()
+        );
+    }
+
+    public function testColorizedLineBreakTableCell()
+    {
+        $table = new Table();
+
+        $expected = <<<"EXPECTED"
+╔══════════════════════╗
+║ test                 ║
+╟──────────────────────╢
+║ \e[33mAAAAAAAAAAAAAAAAAAAA\e[0m ║
+║ \e[33mBBBBBBBBBBBBBBBBBBBB\e[0m ║
+║ \e[33mCCCCC\e[0m                ║
+╟──────────────────────╢
+║ \e[31mAAAAAAAAAAAAAAAAAAAA\e[0m ║
+║ \e[32mBBBBBBBBBBBBBBBBBBBB\e[0m ║
+║ \e[34mCCCCC\e[0m                ║
+╟──────────────────────╢
+║ • \e[31mAAAAAAAAAAAAAAAAAA\e[0m ║
+║ \e[31mBBBBBBB\e[0m              ║
+║ • \e[33mCCCCCCCCCCCCCCCCCC\e[0m ║
+║ \e[33mDDDDDDD\e[0m              ║
+╟──────────────────────╢
+║ • \e[35mAAAAAAAAAAAAAAAAAA\e[0m ║
+║ \e[31mBBBBBBB\e[0m              ║
+║ • \e[32mCCCCCCCCCCCCCCCCCC\e[0m ║
+║ \e[34mDDDDDDD\e[0m              ║
+╚══════════════════════╝
+
+EXPECTED;
+
+        $this->assertEqualsWithoutLE(
+            $expected,
+            $table->setHeaders(['test'])
+                ->setRows([
+                    [Console::renderColoredString('%yAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBCCCCC%n')],
+                    [Console::renderColoredString('%rAAAAAAAAAAAAAAAAAAAA%gBBBBBBBBBBBBBBBBBBBB%bCCCCC%n')],
+                    [[
+                        Console::renderColoredString('%rAAAAAAAAAAAAAAAAAABBBBBBB%n'),
+                        Console::renderColoredString('%yCCCCCCCCCCCCCCCCCCDDDDDDD%n'),
+                    ]],
+                    [[
+                        Console::renderColoredString('%mAAAAAAAAAAAAAAAAAA%rBBBBBBB%n'),
+                        Console::renderColoredString('%gCCCCCCCCCCCCCCCCCC%bDDDDDDD%n'),
+                    ]],
+                ])
+                ->setScreenWidth(25)
+                ->run()
+        );
+    }
+
+    /**
+     * @param $smallString
+     * @dataProvider dataMinimumWidth
+     */
+    public function testMinimumWidth($smallString)
+    {
+        $bigString = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';
+
+        (new Table())
+            ->setHeaders(['t1', 't2', ''])
+            ->setRows([
+                [$bigString, $bigString, $smallString],
+            ])
+            ->setScreenWidth(20)
+            ->run();
+
+        // Without exceptions
+        $this->assertTrue(true);
+    }
+
+    public function dataMinimumWidth()
+    {
+        return [
+            ['X'],
+            [''],
+            [['X', 'X', 'X']],
+            [[]],
+            [['']]
+        ];
+    }
+
+    public function testTableWithAnsiFormat()
+    {
+        $table = new Table();
+
+        // test fullwidth chars
+        // @see https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms
+        $expected = <<<EXPECTED
+╔═══════════════╤═══════════════╤═══════════════╗
+║ test1         │ test2         │ \e[31mtest3\e[0m         ║
+╟───────────────┼───────────────┼───────────────╢
+║ \e[34mtestcontent11\e[0m │ \e[33mtestcontent12\e[0m │ testcontent13 ║
+╟───────────────┼───────────────┼───────────────╢
+║ testcontent21 │ testcontent22 │ • a           ║
+║               │               │ • \e[35mb\e[0m           ║
+║               │               │ • \e[32mc\e[0m           ║
+╚═══════════════╧═══════════════╧═══════════════╝
+
+EXPECTED;
+
+        $this->assertEqualsWithoutLE($expected, $table->setHeaders(['test1', 'test2', Console::ansiFormat('test3', [Console::FG_RED])])
+            ->setRows([
+                [Console::ansiFormat('testcontent11', [Console::FG_BLUE]), Console::ansiFormat('testcontent12', [Console::FG_YELLOW]), 'testcontent13'],
+                ['testcontent21', 'testcontent22', [
+                    'a',
+                    Console::ansiFormat('b', [Console::FG_PURPLE]),
+                    Console::ansiFormat('c', [Console::FG_GREEN]),
+                ]],
+            ])->setScreenWidth(200)->run()
+        );
+    }
 }
diff --git a/tests/framework/data/ActiveDataFilterTest.php b/tests/framework/data/ActiveDataFilterTest.php
index 179f59295c9..7e22c9ddbbc 100644
--- a/tests/framework/data/ActiveDataFilterTest.php
+++ b/tests/framework/data/ActiveDataFilterTest.php
@@ -134,6 +134,29 @@ public function dataProviderBuild()
                     ],
                 ],
             ],
+            [
+                [
+                    'name' => 'NULL',
+                    'number' => 'NULL',
+                    'price' => 'NULL',
+                    'tags' => ['NULL'],
+                ],
+                [
+                    'AND',
+                    ['name' => ''],
+                    ['number' => null],
+                    ['price' => null],
+                    ['tags' => [null]],
+                ],
+            ],
+            [
+                [
+                    'number' => [
+                        'neq' => 'NULL'
+                    ],
+                ],
+                ['!=', 'number', null],
+            ],
         ];
     }
 
diff --git a/tests/framework/data/DataFilterTest.php b/tests/framework/data/DataFilterTest.php
index e29546eaf95..24908539808 100644
--- a/tests/framework/data/DataFilterTest.php
+++ b/tests/framework/data/DataFilterTest.php
@@ -225,6 +225,31 @@ public function dataProviderValidate()
                 true,
                 [],
             ],
+            [
+                [
+                    'name' => [
+                        'eq' => 'NULL',
+                    ],
+                ],
+                true,
+                [],
+            ],
+            [
+                [
+                    'name' => 'NULL',
+                ],
+                true,
+                [],
+            ],
+            [
+                [
+                    'name' => [
+                        'neq' => 'NULL',
+                    ],
+                ],
+                true,
+                [],
+            ],
         ];
     }
 
@@ -363,6 +388,14 @@ public function dataProviderNormalize()
                     'datetime' => '2015-06-06 17:46:12',
                 ],
             ],
+            [
+                [
+                    'name' => 'NULL',
+                ],
+                [
+                    'name' => null,
+                ],
+            ],
         ];
     }
 
@@ -403,6 +436,15 @@ public function testNormalize($filter, $expectedResult)
         $this->assertEquals($expectedResult, $builder->normalize(false));
     }
 
+    public function testNormalizeNonDefaultNull()
+    {
+        $builder = new DataFilter();
+        $builder->nullValue = 'abcde';
+        $builder->setSearchModel((new DynamicModel(['name' => null]))->addRule('name', 'string'));
+        $builder->filter = ['name' => 'abcde'];
+        $this->assertEquals(['name' => null], $builder->normalize(false));
+    }
+
     public function testSetupErrorMessages()
     {
         $builder = new DataFilter();
diff --git a/tests/framework/data/PaginationTest.php b/tests/framework/data/PaginationTest.php
index 98bc9ecfbc8..5f2d3488f8f 100644
--- a/tests/framework/data/PaginationTest.php
+++ b/tests/framework/data/PaginationTest.php
@@ -8,6 +8,7 @@
 namespace yiiunit\framework\data;
 
 use yii\data\Pagination;
+use yii\web\Link;
 use yiiunit\TestCase;
 
 /**
@@ -58,6 +59,13 @@ public function dataProviderCreateUrl()
                 '/index.php?r=item%2Flist&q=test&page=3&per-page=5',
                 ['q' => 'test'],
             ],
+            [
+                1,
+                10,
+                '/index.php?r=item%2Flist&page=2&per-page=10',
+                null,
+                true,
+            ],
         ];
     }
 
@@ -68,13 +76,14 @@ public function dataProviderCreateUrl()
      * @param int $pageSize
      * @param string $expectedUrl
      * @param array $params
+     * @param bool $absolute
      */
-    public function testCreateUrl($page, $pageSize, $expectedUrl, $params)
+    public function testCreateUrl($page, $pageSize, $expectedUrl, $params, $absolute = false)
     {
         $pagination = new Pagination();
         $pagination->route = 'item/list';
         $pagination->params = $params;
-        $this->assertEquals($expectedUrl, $pagination->createUrl($page, $pageSize));
+        $this->assertEquals($expectedUrl, $pagination->createUrl($page, $pageSize, $absolute));
     }
 
     /**
@@ -105,4 +114,312 @@ public function testValidatePage()
         $pagination->setPage(999, false);
         $this->assertEquals(999, $pagination->getPage());
     }
+
+    public function dataProviderPageCount()
+    {
+        return [
+            [0, 0, 0],
+            [0, 1, 1],
+            [-1, 0, 0],
+            [-1, 1, 1],
+            [1, -1, 0],
+            [1, 0, 0],
+            [1, 1, 1],
+            [10, 10, 1],
+            [10, 20, 2],
+            [2, 15, 8],
+        ];
+    }
+
+    /**
+     * @dataProvider dataProviderPageCount
+     *
+     * @param int $pageSize
+     * @param int $totalCount
+     * @param int $pageCount
+     */
+    public function testPageCount($pageSize, $totalCount, $pageCount)
+    {
+        $pagination = new Pagination();
+        $pagination->setPageSize($pageSize);
+        $pagination->totalCount = $totalCount;
+
+        $this->assertEquals($pageCount, $pagination->getPageCount());
+    }
+
+    public function testGetDefaultPage()
+    {
+        $this->assertEquals(0, (new Pagination())->getPage());
+    }
+
+    public function dataProviderSetPage()
+    {
+        return [
+            [null, false, 0, null],
+            [null, true, 0, null],
+            [0, false, 0, 0],
+            [0, true, 0, 0],
+            [-1, false, 0, 0],
+            [-1, true, 0, 0],
+            [1, false, 0, 1],
+            [1, true, 0, 0],
+            [2, false, 10, 2],
+            [2, true, 10, 0],
+            [2, false, 40, 2],
+            [2, true, 40, 1],
+        ];
+    }
+
+    /**
+     * @dataProvider dataProviderSetPage
+     *
+     * @param int|null $value
+     * @param bool $validate
+     * @param int $totalCount
+     * @param int $page
+     */
+    public function testSetPage($value, $validate, $totalCount, $page)
+    {
+        $pagination = new Pagination();
+        $pagination->totalCount = $totalCount;
+        $pagination->setPage($value, $validate);
+
+        $this->assertEquals($page, $pagination->getPage());
+    }
+
+    public function dataProviderGetPageSize()
+    {
+        return [
+            [[1, 50], 20],
+            [[], 20],
+            [[1], 20],
+            [['a' => 1, 50], 20],
+            [['a' => 1, 'b' => 50], 20],
+            [[2, 10], 10],
+            [[30, 100], 30],
+        ];
+    }
+
+    /**
+     * @dataProvider dataProviderGetPageSize
+     *
+     * @param array|bool $pageSizeLimit
+     * @param int $pageSize
+     */
+    public function testGetPageSize($pageSizeLimit, $pageSize)
+    {
+        $pagination = new Pagination();
+        $pagination->pageSizeLimit = $pageSizeLimit;
+
+        $this->assertEquals($pageSize, $pagination->getPageSize());
+    }
+
+    public function dataProviderSetPageSize()
+    {
+        return [
+            [null, false, false, 20],
+            [null, true, false, 20],
+            [null, false, [1, 50], 20],
+            [null, true, [1, 50], 20],
+            [1, false, false, 1],
+            [1, true, false, 1],
+            [1, false, [1, 50], 1],
+            [1, true, [1, 50], 1],
+            [10, false, [20, 50], 10],
+            [10, true, [20, 50], 20],
+            [40, false, [1, 20], 40],
+            [40, true, [1, 20], 20],
+        ];
+    }
+
+    /**
+     * @dataProvider dataProviderSetPageSize
+     *
+     * @param int|null $value
+     * @param bool $validate
+     * @param array|false $pageSizeLimit
+     * @param int $pageSize
+     */
+    public function testSetPageSize($value, $validate, $pageSizeLimit, $pageSize)
+    {
+        $pagination = new Pagination();
+        $pagination->pageSizeLimit = $pageSizeLimit;
+        $pagination->setPageSize($value, $validate);
+
+        $this->assertEquals($pageSize, $pagination->getPageSize());
+    }
+
+    public function dataProviderGetOffset()
+    {
+        return [
+            [0, 0, 0],
+            [0, 1, 0],
+            [1, 1, 1],
+            [1, 2, 2],
+            [10, 2, 20],
+        ];
+    }
+
+    /**
+     * @dataProvider dataProviderGetOffset
+     *
+     * @param int $pageSize
+     * @param int $page
+     * @param int $offset
+     */
+    public function testGetOffset($pageSize, $page, $offset)
+    {
+        $pagination = new Pagination();
+        $pagination->setPageSize($pageSize);
+        $pagination->setPage($page);
+
+        $this->assertEquals($offset, $pagination->getOffset());
+    }
+
+    public function dataProviderGetLimit()
+    {
+        return [
+            [0, -1],
+            [1, 1],
+            [2, 2],
+        ];
+    }
+
+    /**
+     * @dataProvider dataProviderGetLimit
+     *
+     * @param int $pageSize
+     * @param int $limit
+     */
+    public function testGetLimit($pageSize, $limit)
+    {
+        $pagination = new Pagination();
+        $pagination->setPageSize($pageSize);
+
+        $this->assertEquals($limit, $pagination->getLimit());
+    }
+
+    public function dataProviderGetLinks()
+    {
+        return [
+            [0, 0, 0, '/index.php?r=list&page=1&per-page=0', null, null, null, null],
+            [1, 0, 0, '/index.php?r=list&page=1&per-page=0', null, null, null, null],
+            [
+                0,
+                0,
+                1,
+                '/index.php?r=list&page=1&per-page=0',
+                '/index.php?r=list&page=1&per-page=0',
+                '/index.php?r=list&page=1&per-page=0',
+                null,
+                null,
+            ],
+            [
+                1,
+                0,
+                1,
+                '/index.php?r=list&page=1&per-page=0',
+                '/index.php?r=list&page=1&per-page=0',
+                '/index.php?r=list&page=1&per-page=0',
+                null,
+                null,
+            ],
+            [
+                0,
+                1,
+                1,
+                '/index.php?r=list&page=1&per-page=1',
+                '/index.php?r=list&page=1&per-page=1',
+                '/index.php?r=list&page=1&per-page=1',
+                null,
+                null,
+            ],
+            [
+                1,
+                1,
+                1,
+                '/index.php?r=list&page=1&per-page=1',
+                '/index.php?r=list&page=1&per-page=1',
+                '/index.php?r=list&page=1&per-page=1',
+                null,
+                null,
+            ],
+            [
+                0,
+                5,
+                10,
+                '/index.php?r=list&page=1&per-page=5',
+                '/index.php?r=list&page=1&per-page=5',
+                '/index.php?r=list&page=2&per-page=5',
+                null,
+                '/index.php?r=list&page=2&per-page=5',
+            ],
+            [
+                1,
+                5,
+                10,
+                '/index.php?r=list&page=2&per-page=5',
+                '/index.php?r=list&page=1&per-page=5',
+                '/index.php?r=list&page=2&per-page=5',
+                '/index.php?r=list&page=1&per-page=5',
+                null,
+            ],
+            [
+                1,
+                5,
+                15,
+                '/index.php?r=list&page=2&per-page=5',
+                '/index.php?r=list&page=1&per-page=5',
+                '/index.php?r=list&page=3&per-page=5',
+                '/index.php?r=list&page=1&per-page=5',
+                '/index.php?r=list&page=3&per-page=5',
+            ],
+        ];
+    }
+
+    /**
+     * @dataProvider dataProviderGetLinks
+     *
+     * @param int $page
+     * @param int $pageSize
+     * @param int $totalCount
+     * @param string $self
+     * @param string|null $first
+     * @param string|null $last
+     * @param string|null $prev
+     * @param string|null $next
+     */
+    public function testGetLinks($page, $pageSize, $totalCount, $self, $first, $last, $prev, $next)
+    {
+        $pagination = new Pagination();
+        $pagination->totalCount = $totalCount;
+        $pagination->route = 'list';
+        $pagination->setPageSize($pageSize);
+        $pagination->setPage($page, true);
+
+        $links = $pagination->getLinks();
+
+        $this->assertSame($self, $links[Link::REL_SELF]);
+
+        if ($first) {
+            $this->assertSame($first, $links[Pagination::LINK_FIRST]);
+        } else {
+            $this->assertArrayNotHasKey(Pagination::LINK_FIRST, $links);
+        }
+        if ($last) {
+            $this->assertSame($last, $links[Pagination::LINK_LAST]);
+        } else {
+            $this->assertArrayNotHasKey(Pagination::LINK_LAST, $links);
+        }
+        if ($prev) {
+            $this->assertSame($prev, $links[Pagination::LINK_PREV]);
+        } else {
+            $this->assertArrayNotHasKey(Pagination::LINK_PREV, $links);
+        }
+        if ($next) {
+            $this->assertSame($next, $links[Pagination::LINK_NEXT]);
+        } else {
+            $this->assertArrayNotHasKey(Pagination::LINK_NEXT, $links);
+        }
+    }
 }
diff --git a/tests/framework/db/ActiveQueryModelConnectionTest.php b/tests/framework/db/ActiveQueryModelConnectionTest.php
new file mode 100644
index 00000000000..fdef6d55b2c
--- /dev/null
+++ b/tests/framework/db/ActiveQueryModelConnectionTest.php
@@ -0,0 +1,78 @@
+<?php
+/**
+ * @link http://www.yiiframework.com/
+ * @copyright Copyright (c) 2008 Yii Software LLC
+ * @license http://www.yiiframework.com/license/
+ */
+
+namespace yiiunit\framework\db;
+
+use yii\db\ActiveQuery;
+use yii\db\ActiveRecord as DefaultActiveRecord;
+use yiiunit\data\ar\ActiveRecord;
+use yiiunit\TestCase;
+
+class ActiveQueryModelConnectionTest extends TestCase
+{
+    private $globalConnection;
+    private $modelConnection;
+
+    protected function setUp()
+    {
+        $this->globalConnection = $this->getMockBuilder('yii\db\Connection')->getMock();
+        $this->modelConnection = $this->getMockBuilder('yii\db\Connection')->getMock();
+
+        $this->mockApplication([
+            'components' => [
+                'db' => $this->globalConnection
+            ]
+        ]);
+
+        ActiveRecord::$db = $this->modelConnection;
+    }
+
+    private function prepareConnectionMock($connection)
+    {
+        $command = $this->getMockBuilder('yii\db\Command')->getMock();
+        $command->method('queryOne')->willReturn(false);
+        $connection->method('createCommand')->willReturn($command);
+        $builder = $this->getMockBuilder('yii\db\QueryBuilder')->disableOriginalConstructor()->getMock();
+        $connection->expects($this->once())->method('getQueryBuilder')->willReturn($builder);
+    }
+
+    public function testEnsureModelConnectionForOne()
+    {
+        $this->globalConnection->expects($this->never())->method('getQueryBuilder');
+        $this->prepareConnectionMock($this->modelConnection);
+
+        $query = new ActiveQuery(ActiveRecord::className());
+        $query->one();
+    }
+
+    public function testEnsureGlobalConnectionForOne()
+    {
+        $this->modelConnection->expects($this->never())->method('getQueryBuilder');
+        $this->prepareConnectionMock($this->globalConnection);
+
+        $query = new ActiveQuery(DefaultActiveRecord::className());
+        $query->one();
+    }
+
+    public function testEnsureModelConnectionForAll()
+    {
+        $this->globalConnection->expects($this->never())->method('getQueryBuilder');
+        $this->prepareConnectionMock($this->modelConnection);
+
+        $query = new ActiveQuery(ActiveRecord::className());
+        $query->all();
+    }
+
+    public function testEnsureGlobalConnectionForAll()
+    {
+        $this->modelConnection->expects($this->never())->method('getQueryBuilder');
+        $this->prepareConnectionMock($this->globalConnection);
+
+        $query = new ActiveQuery(DefaultActiveRecord::className());
+        $query->all();
+    }
+}
diff --git a/tests/framework/db/ActiveRecordTest.php b/tests/framework/db/ActiveRecordTest.php
index 7e5a2d7d147..1599d987e93 100644
--- a/tests/framework/db/ActiveRecordTest.php
+++ b/tests/framework/db/ActiveRecordTest.php
@@ -1893,24 +1893,24 @@ public function testLegalValuesForFindByCondition($modelClassName, $validFilter)
     public function illegalValuesForFindByCondition()
     {
         return [
-            [Customer::className(), ['id' => ['`id`=`id` and 1' => 1]]],
-            [Customer::className(), ['id' => [
+            [Customer::className(), [['`id`=`id` and 1' => 1]]],
+            [Customer::className(), [[
                 'legal' => 1,
                 '`id`=`id` and 1' => 1,
             ]]],
-            [Customer::className(), ['id' => [
+            [Customer::className(), [[
                 'nested_illegal' => [
                     'false or 1=' => 1
                 ]
             ]]],
             [Customer::className(), [['true--' => 1]]],
 
-            [CustomerWithAlias::className(), ['csr.id' => ['`csr`.`id`=`csr`.`id` and 1' => 1]]],
-            [CustomerWithAlias::className(), ['csr.id' => [
+            [CustomerWithAlias::className(), [['`csr`.`id`=`csr`.`id` and 1' => 1]]],
+            [CustomerWithAlias::className(), [[
                 'legal' => 1,
                 '`csr`.`id`=`csr`.`id` and 1' => 1,
             ]]],
-            [CustomerWithAlias::className(), ['csr.id' => [
+            [CustomerWithAlias::className(), [[
                 'nested_illegal' => [
                     'false or 1=' => 1
                 ]
diff --git a/tests/framework/db/mssql/ActiveRecordTest.php b/tests/framework/db/mssql/ActiveRecordTest.php
index 086938807f6..f29cab5964f 100644
--- a/tests/framework/db/mssql/ActiveRecordTest.php
+++ b/tests/framework/db/mssql/ActiveRecordTest.php
@@ -56,4 +56,28 @@ public function testSaveWithTrigger()
         $testRecord = TestTriggerAlert::findOne(1);
         $this->assertEquals('test', $testRecord->stringcol);
     }
+
+    /**
+     * @throws \yii\db\Exception
+     */
+    public function testSaveWithComputedColumn()
+    {
+        $db = $this->getConnection();
+
+        $sql = 'CREATE OR ALTER FUNCTION TESTFUNC(@Number INT)
+RETURNS VARCHAR(15)
+AS
+BEGIN
+      RETURN (SELECT TRY_CONVERT(VARCHAR(15),@Number))
+END';
+        $db->createCommand($sql)->execute();
+
+        $sql = 'ALTER TABLE [dbo].[test_trigger] ADD [computed_column] AS dbo.TESTFUNC([ID])';
+        $db->createCommand($sql)->execute();
+
+        $record = new TestTrigger();
+        $record->stringcol = 'test';
+        $this->assertTrue($record->save(false));
+        $this->assertEquals(1, $record->id);
+    }
 }
diff --git a/tests/framework/db/mssql/QueryBuilderTest.php b/tests/framework/db/mssql/QueryBuilderTest.php
index 92eb0181114..99eb3f29510 100644
--- a/tests/framework/db/mssql/QueryBuilderTest.php
+++ b/tests/framework/db/mssql/QueryBuilderTest.php
@@ -277,7 +277,7 @@ public function insertProvider()
                 ],
                 [],
                 $this->replaceQuotes('SET NOCOUNT ON;DECLARE @temporary_inserted TABLE ([id] int , [email] varchar(128) , [name] varchar(128) NULL, [address] text NULL, [status] int NULL, [profile_id] int NULL);' .
-                    'INSERT INTO [[customer]] ([[email]], [[name]], [[address]], [[is_active]], [[related_id]]) OUTPUT INSERTED.* INTO @temporary_inserted VALUES (:qp0, :qp1, :qp2, :qp3, :qp4);' .
+                    'INSERT INTO [customer] ([email], [name], [address], [is_active], [related_id]) OUTPUT INSERTED.id,INSERTED.email,INSERTED.name,INSERTED.address,INSERTED.status,INSERTED.profile_id INTO @temporary_inserted VALUES (:qp0, :qp1, :qp2, :qp3, :qp4);' .
                     'SELECT * FROM @temporary_inserted'),
                 [
                     ':qp0' => 'test@example.com',
@@ -295,7 +295,7 @@ public function insertProvider()
                 ],
                 [],
                 'SET NOCOUNT ON;DECLARE @temporary_inserted TABLE ([int_col] int , [int_col2] int NULL, [tinyint_col] tinyint NULL, [smallint_col] smallint NULL, [char_col] char(100) , [char_col2] varchar(100) NULL, [char_col3] text NULL, [float_col] decimal , [float_col2] float NULL, [blob_col] varbinary(MAX) NULL, [numeric_col] decimal NULL, [time] datetime , [bool_col] tinyint , [bool_col2] tinyint NULL);' .
-                'INSERT INTO {{%type}} ({{%type}}.[[related_id]], [[time]]) OUTPUT INSERTED.* INTO @temporary_inserted VALUES (:qp0, now());' .
+                'INSERT INTO {{%type}} ({{%type}}.[[related_id]], [[time]]) OUTPUT INSERTED.int_col,INSERTED.int_col2,INSERTED.tinyint_col,INSERTED.smallint_col,INSERTED.char_col,INSERTED.char_col2,INSERTED.char_col3,INSERTED.float_col,INSERTED.float_col2,INSERTED.blob_col,INSERTED.numeric_col,INSERTED.time,INSERTED.bool_col,INSERTED.bool_col2 INTO @temporary_inserted VALUES (:qp0, now());' .
                 'SELECT * FROM @temporary_inserted',
                 [
                     ':qp0' => null,
@@ -313,7 +313,7 @@ public function insertProvider()
                 ],
                 [':phBar' => 'bar'],
                 $this->replaceQuotes('SET NOCOUNT ON;DECLARE @temporary_inserted TABLE ([id] int , [email] varchar(128) , [name] varchar(128) NULL, [address] text NULL, [status] int NULL, [profile_id] int NULL);' .
-                    'INSERT INTO [[customer]] ([[email]], [[name]], [[address]], [[is_active]], [[related_id]], [[col]]) OUTPUT INSERTED.* INTO @temporary_inserted VALUES (:qp1, :qp2, :qp3, :qp4, :qp5, CONCAT(:phFoo, :phBar));' .
+                    'INSERT INTO [customer] ([email], [name], [address], [is_active], [related_id], [col]) OUTPUT INSERTED.id,INSERTED.email,INSERTED.name,INSERTED.address,INSERTED.status,INSERTED.profile_id INTO @temporary_inserted VALUES (:qp1, :qp2, :qp3, :qp4, :qp5, CONCAT(:phFoo, :phBar));' .
                     'SELECT * FROM @temporary_inserted'),
                 [
                     ':phBar' => 'bar',
@@ -346,7 +346,7 @@ public function insertProvider()
                     ]),
                 [':phBar' => 'bar'],
                 $this->replaceQuotes('SET NOCOUNT ON;DECLARE @temporary_inserted TABLE ([id] int , [email] varchar(128) , [name] varchar(128) NULL, [address] text NULL, [status] int NULL, [profile_id] int NULL);' .
-                    'INSERT INTO [[customer]] ([[email]], [[name]], [[address]], [[is_active]], [[related_id]]) OUTPUT INSERTED.* INTO @temporary_inserted SELECT [[email]], [[name]], [[address]], [[is_active]], [[related_id]] FROM [[customer]] WHERE ([[email]]=:qp1) AND ([[name]]=:qp2) AND ([[address]]=:qp3) AND ([[is_active]]=:qp4) AND ([[related_id]] IS NULL) AND ([[col]]=CONCAT(:phFoo, :phBar));' .
+                    'INSERT INTO [customer] ([email], [name], [address], [is_active], [related_id]) OUTPUT INSERTED.id,INSERTED.email,INSERTED.name,INSERTED.address,INSERTED.status,INSERTED.profile_id INTO @temporary_inserted SELECT [email], [name], [address], [is_active], [related_id] FROM [customer] WHERE ([email]=:qp1) AND ([name]=:qp2) AND ([address]=:qp3) AND ([is_active]=:qp4) AND ([related_id] IS NULL) AND ([col]=CONCAT(:phFoo, :phBar));' .
                     'SELECT * FROM @temporary_inserted'),
                 [
                     ':phBar' => 'bar',
@@ -396,17 +396,17 @@ public function upsertProvider()
             ],
             'values and expressions' => [
                 3 => 'SET NOCOUNT ON;DECLARE @temporary_inserted TABLE ([id] int , [ts] int NULL, [email] varchar(128) , [recovery_email] varchar(128) NULL, [address] text NULL, [status] tinyint , [orders] int , [profile_id] int NULL);' .
-                    'INSERT INTO {{%T_upsert}} ({{%T_upsert}}.[[email]], [[ts]]) OUTPUT INSERTED.* INTO @temporary_inserted VALUES (:qp0, now());' .
+                    'INSERT INTO {{%T_upsert}} ({{%T_upsert}}.[[email]], [[ts]]) OUTPUT INSERTED.id,INSERTED.ts,INSERTED.email,INSERTED.recovery_email,INSERTED.address,INSERTED.status,INSERTED.orders,INSERTED.profile_id INTO @temporary_inserted VALUES (:qp0, now());' .
                     'SELECT * FROM @temporary_inserted',
             ],
             'values and expressions with update part' => [
                 3 => 'SET NOCOUNT ON;DECLARE @temporary_inserted TABLE ([id] int , [ts] int NULL, [email] varchar(128) , [recovery_email] varchar(128) NULL, [address] text NULL, [status] tinyint , [orders] int , [profile_id] int NULL);' .
-                    'INSERT INTO {{%T_upsert}} ({{%T_upsert}}.[[email]], [[ts]]) OUTPUT INSERTED.* INTO @temporary_inserted VALUES (:qp0, now());' .
+                    'INSERT INTO {{%T_upsert}} ({{%T_upsert}}.[[email]], [[ts]]) OUTPUT INSERTED.id,INSERTED.ts,INSERTED.email,INSERTED.recovery_email,INSERTED.address,INSERTED.status,INSERTED.orders,INSERTED.profile_id INTO @temporary_inserted VALUES (:qp0, now());' .
                     'SELECT * FROM @temporary_inserted',
             ],
             'values and expressions without update part' => [
                 3 => 'SET NOCOUNT ON;DECLARE @temporary_inserted TABLE ([id] int , [ts] int NULL, [email] varchar(128) , [recovery_email] varchar(128) NULL, [address] text NULL, [status] tinyint , [orders] int , [profile_id] int NULL);' .
-                    'INSERT INTO {{%T_upsert}} ({{%T_upsert}}.[[email]], [[ts]]) OUTPUT INSERTED.* INTO @temporary_inserted VALUES (:qp0, now());' .
+                    'INSERT INTO {{%T_upsert}} ({{%T_upsert}}.[[email]], [[ts]]) OUTPUT INSERTED.id,INSERTED.ts,INSERTED.email,INSERTED.recovery_email,INSERTED.address,INSERTED.status,INSERTED.orders,INSERTED.profile_id INTO @temporary_inserted VALUES (:qp0, now());' .
                     'SELECT * FROM @temporary_inserted',
             ],
             'query, values and expressions with update part' => [
diff --git a/tests/framework/di/ContainerTest.php b/tests/framework/di/ContainerTest.php
index 1d6d54b2145..f3f832e7852 100644
--- a/tests/framework/di/ContainerTest.php
+++ b/tests/framework/di/ContainerTest.php
@@ -14,8 +14,11 @@
 use yiiunit\data\ar\Cat;
 use yiiunit\data\ar\Order;
 use yiiunit\data\ar\Type;
+use yiiunit\framework\di\stubs\Alpha;
 use yiiunit\framework\di\stubs\Bar;
 use yiiunit\framework\di\stubs\BarSetter;
+use yiiunit\framework\di\stubs\Beta;
+use yiiunit\framework\di\stubs\Car;
 use yiiunit\framework\di\stubs\Corge;
 use yiiunit\framework\di\stubs\Foo;
 use yiiunit\framework\di\stubs\FooProperty;
@@ -172,7 +175,7 @@ public function testInvoke()
 
 
         $myFunc = function ($a, NumberValidator $b, $c = 'default') {
-            return[$a, \get_class($b), $c];
+            return [$a, \get_class($b), $c];
         };
         $result = Yii::$container->invoke($myFunc, ['a']);
         $this->assertEquals(['a', 'yii\validators\NumberValidator', 'default'], $result);
@@ -262,7 +265,8 @@ public function testSetDependencies()
             'qux.using.closure' => function () {
                 return new Qux();
             },
-            'rollbar', 'baibaratsky\yii\rollbar\Rollbar'
+            'rollbar',
+            'baibaratsky\yii\rollbar\Rollbar'
         ]);
         $container->setDefinitions([]);
 
@@ -278,8 +282,7 @@ public function testSetDependencies()
         try {
             $container->get('rollbar');
             $this->fail('InvalidConfigException was not thrown');
-        } catch(\Exception $e)
-        {
+        } catch (\Exception $e) {
             $this->assertInstanceOf('yii\base\InvalidConfigException', $e);
         }
     }
@@ -527,4 +530,48 @@ public function testDelayedInitializationOfSubArray()
         Yii::$container->set('setLater', new Qux());
         Yii::$container->get('test');
     }
+
+    /**
+     * @see https://github.com/yiisoft/yii2/issues/18304
+     */
+    public function testNulledConstructorParameters()
+    {
+        $alpha = (new Container())->get(Alpha::className());
+        $this->assertInstanceOf(Beta::className(), $alpha->beta);
+        $this->assertNull($alpha->omega);
+
+        $QuxInterface = __NAMESPACE__ . '\stubs\QuxInterface';
+        $container = new Container();
+        $container->set($QuxInterface, Qux::className());
+        $alpha = $container->get(Alpha::className());
+        $this->assertInstanceOf(Beta::className(), $alpha->beta);
+        $this->assertInstanceOf($QuxInterface, $alpha->omega);
+        $this->assertNull($alpha->unknown);
+    }
+
+    /**
+     * @see https://github.com/yiisoft/yii2/issues/18284
+     */
+    public function testNamedConstructorParameters()
+    {
+        $test = (new Container())->get(Car::className(), [
+            'name' => 'Hello',
+            'color' => 'red',
+        ]);
+        $this->assertSame('Hello', $test->name);
+        $this->assertSame('red', $test->color);
+    }
+
+    /**
+     * @see https://github.com/yiisoft/yii2/issues/18284
+     */
+    public function testInvalidConstructorParameters()
+    {
+        $this->expectException('yii\base\InvalidConfigException');
+        $this->expectExceptionMessage('Dependencies indexed by name and by position in the same array are not allowed.');
+        (new Container())->get(Car::className(), [
+            'color' => 'red',
+            'Hello',
+        ]);
+    }
 }
diff --git a/tests/framework/di/stubs/Alpha.php b/tests/framework/di/stubs/Alpha.php
new file mode 100644
index 00000000000..83023f5eb98
--- /dev/null
+++ b/tests/framework/di/stubs/Alpha.php
@@ -0,0 +1,19 @@
+<?php
+
+namespace yiiunit\framework\di\stubs;
+
+use yii\base\BaseObject;
+
+class Alpha extends BaseObject
+{
+    public $beta;
+    public $omega;
+    public $unknown = true;
+
+    public function __construct(Beta $beta = null, QuxInterface $omega = null, Unknown $unknown = null)
+    {
+        $this->beta = $beta;
+        $this->omega = $omega;
+        $this->unknown = $unknown;
+    }
+}
diff --git a/tests/framework/di/stubs/Beta.php b/tests/framework/di/stubs/Beta.php
new file mode 100644
index 00000000000..cf2daa61690
--- /dev/null
+++ b/tests/framework/di/stubs/Beta.php
@@ -0,0 +1,9 @@
+<?php
+
+namespace yiiunit\framework\di\stubs;
+
+use yii\base\BaseObject;
+
+class Beta extends BaseObject
+{
+}
diff --git a/tests/framework/di/stubs/Car.php b/tests/framework/di/stubs/Car.php
new file mode 100644
index 00000000000..dc91d53b937
--- /dev/null
+++ b/tests/framework/di/stubs/Car.php
@@ -0,0 +1,17 @@
+<?php
+
+namespace yiiunit\framework\di\stubs;
+
+use yii\base\BaseObject;
+
+class Car extends BaseObject
+{
+    public $color;
+    public $name;
+
+    public function __construct($color, $name)
+    {
+        $this->color = $color;
+        $this->name = $name;
+    }
+}
diff --git a/tests/framework/filters/RateLimiterTest.php b/tests/framework/filters/RateLimiterTest.php
index f13c4ec13cf..0b44eb2edb9 100644
--- a/tests/framework/filters/RateLimiterTest.php
+++ b/tests/framework/filters/RateLimiterTest.php
@@ -7,13 +7,12 @@
 
 namespace yiiunit\framework\filters;
 
-use Prophecy\Argument;
 use Yii;
 use yii\filters\RateLimiter;
-use yii\log\Logger;
 use yii\web\Request;
 use yii\web\Response;
 use yii\web\User;
+use yiiunit\framework\filters\stubs\ExposedLogger;
 use yiiunit\framework\filters\stubs\RateLimit;
 use yiiunit\framework\filters\stubs\UserIdentity;
 use yiiunit\TestCase;
@@ -27,15 +26,7 @@ protected function setUp()
     {
         parent::setUp();
 
-        /* @var $logger Logger|\Prophecy\ObjectProphecy */
-        $logger = $this->prophesize(Logger::className());
-        $logger
-            ->log(Argument::any(), Argument::any(), Argument::any())
-            ->will(function ($parameters, $logger) {
-                $logger->messages = $parameters;
-            });
-
-        Yii::setLogger($logger->reveal());
+        Yii::setLogger(new ExposedLogger());
 
         $this->mockWebApplication();
     }
@@ -170,7 +161,7 @@ public function testUserWithClosureFunction()
         };
         $rateLimiter->beforeAction('test');
 
-        // testing the evaluation of user closure, which in this case returns not the expect object and therefore 
+        // testing the evaluation of user closure, which in this case returns not the expect object and therefore
         // the log message "does not implement RateLimitInterface" is expected.
         $this->assertInstanceOf(User::className(), $rateLimiter->user);
         $this->assertContains('Rate limit skipped: "user" does not implement RateLimitInterface.', Yii::getLogger()->messages);
diff --git a/tests/framework/filters/stubs/ExposedLogger.php b/tests/framework/filters/stubs/ExposedLogger.php
new file mode 100644
index 00000000000..951ae55a115
--- /dev/null
+++ b/tests/framework/filters/stubs/ExposedLogger.php
@@ -0,0 +1,19 @@
+<?php
+/**
+ * @link http://www.yiiframework.com/
+ * @copyright Copyright (c) 2008 Yii Software LLC
+ * @license http://www.yiiframework.com/license/
+ */
+
+namespace yiiunit\framework\filters\stubs;
+
+
+use yii\log\Logger;
+
+class ExposedLogger extends Logger
+{
+    public function log($message, $level, $category = 'application')
+    {
+        $this->messages[] = $message;
+    }
+}
diff --git a/tests/framework/helpers/BaseConsoleTest.php b/tests/framework/helpers/BaseConsoleTest.php
index 874c2371ad0..0a655dfeab8 100644
--- a/tests/framework/helpers/BaseConsoleTest.php
+++ b/tests/framework/helpers/BaseConsoleTest.php
@@ -12,6 +12,12 @@
  */
 class BaseConsoleTest extends TestCase
 {
+    protected function setUp()
+    {
+        parent::setUp();
+        $this->mockApplication();
+    }
+
     /**
      * @test
      */
@@ -21,9 +27,57 @@ public function renderColoredString()
         $actual = BaseConsole::renderColoredString($data);
         $expected = "\033[33mfoo";
         $this->assertEquals($expected, $actual);
-        
+
         $actual = BaseConsole::renderColoredString($data, false);
         $expected = "foo";
         $this->assertEquals($expected, $actual);
     }
+
+    /**
+     * @test
+     */
+    public function ansiColorizedSubstr_withoutColors()
+    {
+        $str = 'FooBar';
+
+        $actual = BaseConsole::ansiColorizedSubstr($str, 0, 3);
+        $expected = BaseConsole::renderColoredString('Foo');
+        $this->assertEquals($expected, $actual);
+
+        $actual = BaseConsole::ansiColorizedSubstr($str, 3, 3);
+        $expected = BaseConsole::renderColoredString('Bar');
+        $this->assertEquals($expected, $actual);
+
+        $actual = BaseConsole::ansiColorizedSubstr($str, 1, 4);
+        $expected = BaseConsole::renderColoredString('ooBa');
+        $this->assertEquals($expected, $actual);
+    }
+
+    /**
+     * @test
+     * @dataProvider ansiColorizedSubstr_withColors_data
+     * @param $str
+     * @param $start
+     * @param $length
+     * @param $expected
+     */
+    public function ansiColorizedSubstr_withColors($str, $start, $length, $expected)
+    {
+        $ansiStr = BaseConsole::renderColoredString($str);
+
+        $ansiActual = BaseConsole::ansiColorizedSubstr($ansiStr, $start, $length);
+        $ansiExpected = BaseConsole::renderColoredString($expected);
+        $this->assertEquals($ansiExpected, $ansiActual);
+    }
+
+    public function ansiColorizedSubstr_withColors_data()
+    {
+        return [
+            ['%rFoo%gBar%n', 0, 3, '%rFoo%n'],
+            ['%rFoo%gBar%n', 3, 3, '%gBar%n'],
+            ['%rFoo%gBar%n', 1, 4, '%roo%gBa%n'],
+            ['Foo%yBar%nYes', 1, 7, 'oo%yBar%nYe'],
+            ['Foo%yBar%nYes', 5, 3, '%yr%nYe'],
+        ];
+    }
 }
diff --git a/tests/framework/validators/DateValidatorTest.php b/tests/framework/validators/DateValidatorTest.php
index 91b627b2799..9ae3d770019 100644
--- a/tests/framework/validators/DateValidatorTest.php
+++ b/tests/framework/validators/DateValidatorTest.php
@@ -361,7 +361,11 @@ public function testValidationWithTime($timezone)
     {
         date_default_timezone_set($timezone);
 
-        $val = new DateValidator(['format' => 'yyyy-MM-dd HH:mm:ss', 'timestampAttribute' => 'attr_timestamp', 'timeZone' => 'UTC']);
+        $val = new DateValidator([
+            'format' => 'yyyy-MM-dd HH:mm:ss',
+            'timestampAttribute' => 'attr_timestamp',
+            'timeZone' => 'UTC'
+        ]);
         $model = new FakedValidationModel();
         $model->attr_date = '2013-09-13 14:23:15';
         $model->attr_timestamp = true;
@@ -370,7 +374,11 @@ public function testValidationWithTime($timezone)
         $this->assertFalse($model->hasErrors('attr_timestamp'));
         $this->assertSame(1379082195, $model->attr_timestamp);
 
-        $val = new DateValidator(['format' => 'yyyy-MM-dd HH:mm:ss', 'timestampAttribute' => 'attr_timestamp', 'timeZone' => 'Europe/Berlin']);
+        $val = new DateValidator([
+            'format' => 'yyyy-MM-dd HH:mm:ss',
+            'timestampAttribute' => 'attr_timestamp',
+            'timeZone' => 'Europe/Berlin',
+        ]);
         $model = new FakedValidationModel();
         $model->attr_date = '2013-09-13 16:23:15';
         $model->attr_timestamp = true;
@@ -379,7 +387,12 @@ public function testValidationWithTime($timezone)
         $this->assertFalse($model->hasErrors('attr_timestamp'));
         $this->assertSame(1379082195, $model->attr_timestamp);
 
-        $val = new DateValidator(['format' => 'yyyy-MM-dd HH:mm:ss', 'timestampAttribute' => 'attr_timestamp', 'timestampAttributeFormat' => 'yyyy-MM-dd HH:mm:ss', 'timeZone' => 'UTC']);
+        $val = new DateValidator([
+            'format' => 'yyyy-MM-dd HH:mm:ss',
+            'timestampAttribute' => 'attr_timestamp',
+            'timestampAttributeFormat' => 'yyyy-MM-dd HH:mm:ss',
+            'timeZone' => 'UTC',
+        ]);
         $model = new FakedValidationModel();
         $model->attr_date = '2013-09-13 14:23:15';
         $model->attr_timestamp = true;
@@ -388,7 +401,12 @@ public function testValidationWithTime($timezone)
         $this->assertFalse($model->hasErrors('attr_timestamp'));
         $this->assertSame('2013-09-13 14:23:15', $model->attr_timestamp);
 
-        $val = new DateValidator(['format' => 'yyyy-MM-dd HH:mm:ss', 'timestampAttribute' => 'attr_timestamp', 'timestampAttributeFormat' => 'yyyy-MM-dd HH:mm:ss', 'timeZone' => 'Europe/Berlin']);
+        $val = new DateValidator([
+            'format' => 'yyyy-MM-dd HH:mm:ss',
+            'timestampAttribute' => 'attr_timestamp',
+            'timestampAttributeFormat' => 'yyyy-MM-dd HH:mm:ss',
+            'timeZone' => 'Europe/Berlin',
+        ]);
         $model = new FakedValidationModel();
         $model->attr_date = '2013-09-13 16:23:15';
         $model->attr_timestamp = true;
@@ -397,7 +415,12 @@ public function testValidationWithTime($timezone)
         $this->assertFalse($model->hasErrors('attr_timestamp'));
         $this->assertSame('2013-09-13 14:23:15', $model->attr_timestamp);
 
-        $val = new DateValidator(['format' => 'yyyy-MM-dd HH:mm:ss', 'timestampAttribute' => 'attr_timestamp', 'timestampAttributeFormat' => 'php:Y-m-d H:i:s', 'timeZone' => 'UTC']);
+        $val = new DateValidator([
+            'format' => 'yyyy-MM-dd HH:mm:ss',
+            'timestampAttribute' => 'attr_timestamp',
+            'timestampAttributeFormat' => 'php:Y-m-d H:i:s',
+            'timeZone' => 'UTC',
+        ]);
         $model = new FakedValidationModel();
         $model->attr_date = '2013-09-13 14:23:15';
         $model->attr_timestamp = true;
@@ -406,7 +429,12 @@ public function testValidationWithTime($timezone)
         $this->assertFalse($model->hasErrors('attr_timestamp'));
         $this->assertSame('2013-09-13 14:23:15', $model->attr_timestamp);
 
-        $val = new DateValidator(['format' => 'yyyy-MM-dd HH:mm:ss', 'timestampAttribute' => 'attr_timestamp', 'timestampAttributeFormat' => 'php:Y-m-d H:i:s', 'timeZone' => 'Europe/Berlin']);
+        $val = new DateValidator([
+            'format' => 'yyyy-MM-dd HH:mm:ss',
+            'timestampAttribute' => 'attr_timestamp',
+            'timestampAttributeFormat' => 'php:Y-m-d H:i:s',
+            'timeZone' => 'Europe/Berlin',
+        ]);
         $model = new FakedValidationModel();
         $model->attr_date = '2013-09-13 16:23:15';
         $model->attr_timestamp = true;
@@ -414,6 +442,21 @@ public function testValidationWithTime($timezone)
         $this->assertFalse($model->hasErrors('attr_date'));
         $this->assertFalse($model->hasErrors('attr_timestamp'));
         $this->assertSame('2013-09-13 14:23:15', $model->attr_timestamp);
+
+        // setting non-UTC defaultTimeZone should not impact values with format where time part is provided
+        $val = new DateValidator([
+            'format' => 'yyyy-MM-dd HH:mm:ss',
+            'timestampAttribute' => 'attr_timestamp',
+            'timeZone' => 'UTC',
+            'defaultTimeZone' => 'Europe/Berlin',
+        ]);
+        $model = new FakedValidationModel();
+        $model->attr_date = '2013-09-13 16:23:15';
+        $model->attr_timestamp = true;
+        $val->validateAttribute($model, 'attr_date');
+        $this->assertFalse($model->hasErrors('attr_date'));
+        $this->assertFalse($model->hasErrors('attr_timestamp'));
+        $this->assertSame(1379089395, $model->attr_timestamp); // = 2013-09-13 16:23:15 UTC
     }
 
     /**
@@ -510,6 +553,7 @@ public function testValidationWithoutTime($timezone)
         $this->assertFalse($model->hasErrors('attr_date'));
         $this->assertFalse($model->hasErrors('attr_timestamp'));
         $this->assertSame('2017-06-15 00:00:00', $model->attr_timestamp);
+
         $val = new DateValidator([
             'format' => 'php:Y-m-d',
             'timestampAttribute' => 'attr_timestamp',
@@ -538,6 +582,7 @@ public function testValidationWithoutTime($timezone)
         $this->assertFalse($model->hasErrors('attr_date'));
         $this->assertFalse($model->hasErrors('attr_timestamp'));
         $this->assertSame('2017-06-15 00:00:00', $model->attr_timestamp);
+
         $val = new DateValidator([
             'format' => 'php:Y-m-d',
             'timestampAttribute' => 'attr_timestamp',
@@ -567,6 +612,7 @@ public function testValidationWithoutTime($timezone)
         $this->assertFalse($model->hasErrors('attr_date'));
         $this->assertFalse($model->hasErrors('attr_timestamp'));
         $this->assertSame('2017-06-15 02:00:00', $model->attr_timestamp);
+
         $val = new DateValidator([
             'format' => 'php:Y-m-d',
             'timestampAttribute' => 'attr_timestamp',
@@ -597,6 +643,7 @@ public function testValidationWithoutTime($timezone)
         $this->assertFalse($model->hasErrors('attr_date'));
         $this->assertFalse($model->hasErrors('attr_timestamp'));
         $this->assertSame('2017-06-15 02:00:00', $model->attr_timestamp);
+
         $val = new DateValidator([
             'format' => 'php:Y-m-d',
             'timestampAttribute' => 'attr_timestamp',
@@ -611,6 +658,35 @@ public function testValidationWithoutTime($timezone)
         $this->assertFalse($model->hasErrors('attr_date'));
         $this->assertFalse($model->hasErrors('attr_timestamp'));
         $this->assertSame('2017-06-15 02:00:00', $model->attr_timestamp);
+
+        // defaultTimeZone different than UTC:
+
+        $val = new DateValidator([
+            'format' => 'php:Y-m-d',
+            'timestampAttribute' => 'attr_timestamp',
+            'timeZone' => 'Europe/Warsaw',
+            'defaultTimeZone' => 'Europe/Warsaw',
+        ]);
+        $model = new FakedValidationModel();
+        $model->attr_date = '2017-06-15';
+        $model->attr_timestamp = true;
+        $val->validateAttribute($model, 'attr_date');
+        $this->assertFalse($model->hasErrors('attr_date'));
+        $this->assertFalse($model->hasErrors('attr_timestamp'));
+        $this->assertSame(1497477600, $model->attr_timestamp); // = 2017-06-14 22:00:00 UTC = 2017-06-15 00:00:00 Europe/Warsaw
+
+        $val = new DateValidator([
+            'format' => 'yyyy-MM-dd',
+            'timestampAttribute' => 'attr_timestamp',
+            'defaultTimeZone' => 'Europe/Warsaw',
+        ]);
+        $model = new FakedValidationModel();
+        $model->attr_date = '2017-06-15';
+        $model->attr_timestamp = true;
+        $val->validateAttribute($model, 'attr_date');
+        $this->assertFalse($model->hasErrors('attr_date'));
+        $this->assertFalse($model->hasErrors('attr_timestamp'));
+        $this->assertSame(1497477600, $model->attr_timestamp);
     }
 
     /**
diff --git a/tests/framework/web/MultipartFormDataParserTest.php b/tests/framework/web/MultipartFormDataParserTest.php
index 1212c72534d..4447defec20 100644
--- a/tests/framework/web/MultipartFormDataParserTest.php
+++ b/tests/framework/web/MultipartFormDataParserTest.php
@@ -52,6 +52,45 @@ public function testParse()
         $this->assertStringEqualsFile($_FILES['Item']['tmp_name']['file'], 'item file content');
     }
 
+    public function testParseWithDoubleQuotes()
+    {
+        if (defined('HHVM_VERSION')) {
+            static::markTestSkipped('Can not test on HHVM because it does not support proper handling of the temporary files.');
+        }
+
+        $parser = new MultipartFormDataParser();
+
+        $boundary = '---------------------------22472926011618';
+        $contentType = 'multipart/form-data; boundary="' . $boundary . '"';
+        $rawBody = "--{$boundary}\nContent-Disposition: form-data; name=\"title\"\r\n\r\ntest-title";
+        $rawBody .= "\r\n--{$boundary}\nContent-Disposition: form-data; name=\"Item[name]\"\r\n\r\ntest-name";
+        $rawBody .= "\r\n--{$boundary}\nContent-Disposition: form-data; name=\"someFile\"; filename=\"some-file.txt\"\nContent-Type: text/plain\r\n\r\nsome file content";
+        $rawBody .= "\r\n--{$boundary}\nContent-Disposition: form-data; name=\"Item[file]\"; filename=\"item-file.txt\"\nContent-Type: text/plain\r\n\r\nitem file content";
+        $rawBody .= "\r\n--{$boundary}--";
+
+        $bodyParams = $parser->parse($rawBody, $contentType);
+
+        $expectedBodyParams = [
+            'title' => 'test-title',
+            'Item' => [
+                'name' => 'test-name',
+            ],
+        ];
+        $this->assertEquals($expectedBodyParams, $bodyParams);
+
+        $this->assertNotEmpty($_FILES['someFile']);
+        $this->assertEquals(UPLOAD_ERR_OK, $_FILES['someFile']['error']);
+        $this->assertEquals('some-file.txt', $_FILES['someFile']['name']);
+        $this->assertEquals('text/plain', $_FILES['someFile']['type']);
+        $this->assertStringEqualsFile($_FILES['someFile']['tmp_name'], 'some file content');
+
+        $this->assertNotEmpty($_FILES['Item']);
+        $this->assertNotEmpty($_FILES['Item']['name']['file']);
+        $this->assertEquals(UPLOAD_ERR_OK, $_FILES['Item']['error']['file']);
+        $this->assertEquals('item-file.txt', $_FILES['Item']['name']['file']);
+        $this->assertEquals('text/plain', $_FILES['Item']['type']['file']);
+        $this->assertStringEqualsFile($_FILES['Item']['tmp_name']['file'], 'item file content');
+    }
     /**
      * @depends testParse
      */
diff --git a/tests/framework/web/ResponseTest.php b/tests/framework/web/ResponseTest.php
index 50b1226591d..35ddf94e435 100644
--- a/tests/framework/web/ResponseTest.php
+++ b/tests/framework/web/ResponseTest.php
@@ -191,6 +191,20 @@ public function testSetStatusCodeByException($exception, $statusCode)
         $this->assertEquals($statusCode, $this->response->getStatusCode());
     }
 
+    /**
+     * @see https://github.com/yiisoft/yii2/pull/18290
+     */
+    public function testNonSeekableStream()
+    {
+        $stream = fopen('php://output', 'r+');
+        ob_start();
+        $this->response
+            ->sendStreamAsFile($stream, 'test-stream')
+            ->send();
+        ob_get_clean();
+        static::assertEquals(200, $this->response->statusCode);
+    }
+
     public function dataProviderSetStatusCodeByException()
     {
         $data = [
diff --git a/tests/framework/web/ViewTest.php b/tests/framework/web/ViewTest.php
index ea18b4b8818..10016a0b37e 100644
--- a/tests/framework/web/ViewTest.php
+++ b/tests/framework/web/ViewTest.php
@@ -211,7 +211,7 @@ public function testAppendTimestampForRegisterJsFile()
         $this->assertRegExp($pattern, $html);
 
         // with alias but wo timestamp
-        // The timestamp setting won't be redefined because global AssetManager is used
+        // redefine AssetManager timestamp setting
         $view = new View();
         $view->registerJsFile('@web/assetSources/js/jquery.js',
             [
@@ -219,7 +219,7 @@ public function testAppendTimestampForRegisterJsFile()
                 'depends' => 'yii\web\AssetBundle',
             ]); // <script src="/assetSources/js/jquery.js"></script>
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertRegExp($pattern, $html);
+        $this->assertNotRegExp($pattern, $html);
 
         // wo depends == wo AssetManager
         $view = new View();
@@ -268,15 +268,15 @@ public function testAppendTimestampForRegisterJsFile()
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
         $this->assertRegExp($pattern, $html);
 
-        // The timestamp setting won't be redefined because global AssetManager is used
+        // redefine AssetManager timestamp setting
         $view = new View();
         $view->registerJsFile('/assetSources/js/jquery.js',
             [
                 'appendTimestamp' => true,
                 'depends' => 'yii\web\AssetBundle',
-            ]); // <script src="/assetSources/js/jquery.js"></script>
+            ]); // <script src="/assetSources/js/jquery.js?v=1602294572"></script>
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertNotRegExp($pattern, $html);
+        $this->assertRegExp($pattern, $html);
 
         $view = new View();
         $view->registerJsFile('/assetSources/js/jquery.js',
@@ -357,7 +357,7 @@ public function testAppendTimestampForRegisterCssFile()
         $this->assertRegExp($pattern, $html);
 
         // with alias but wo timestamp
-        // The timestamp setting won't be redefined because global AssetManager is used
+        // redefine AssetManager timestamp setting
         $view = new View();
         $view->registerCssFile('@web/assetSources/css/stub.css',
             [
@@ -365,7 +365,7 @@ public function testAppendTimestampForRegisterCssFile()
                 'depends' => 'yii\web\AssetBundle',
             ]); // <link href="/assetSources/css/stub.css" rel="stylesheet" >
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertRegExp($pattern, $html);
+        $this->assertNotRegExp($pattern, $html);
 
         // wo depends == wo AssetManager
         $view = new View();
@@ -414,15 +414,15 @@ public function testAppendTimestampForRegisterCssFile()
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
         $this->assertRegExp($pattern, $html);
 
-        // The timestamp setting won't be redefined because global AssetManager is used
+        // redefine AssetManager timestamp setting
         $view = new View();
         $view->registerCssFile('/assetSources/css/stub.css',
             [
                 'appendTimestamp' => true,
                 'depends' => 'yii\web\AssetBundle',
-            ]); // <link href="/assetSources/css/stub.css" rel="stylesheet" >
+            ]); // <link href="/assetSources/css/stub.css?v=1602294572" rel="stylesheet" >
         $html = $view->render('@yiiunit/data/views/layout.php', ['content' => 'content']);
-        $this->assertNotRegExp($pattern, $html);
+        $this->assertRegExp($pattern, $html);
 
         $view = new View();
         $view->registerCssFile('/assetSources/css/stub.css',
diff --git a/tests/framework/web/session/AbstractDbSessionTest.php b/tests/framework/web/session/AbstractDbSessionTest.php
index b9f29d2696e..835ea13b21c 100644
--- a/tests/framework/web/session/AbstractDbSessionTest.php
+++ b/tests/framework/web/session/AbstractDbSessionTest.php
@@ -9,8 +9,8 @@
 
 use Yii;
 use yii\db\Connection;
-use yii\db\Query;
 use yii\db\Migration;
+use yii\db\Query;
 use yii\web\DbSession;
 use yiiunit\framework\console\controllers\EchoMigrateController;
 use yiiunit\TestCase;
@@ -20,6 +20,8 @@
  */
 abstract class AbstractDbSessionTest extends TestCase
 {
+    use SessionTestTrait;
+
     /**
      * @return string[] the driver names that are suitable for the test (mysql, pgsql, etc)
      */
@@ -266,4 +268,14 @@ public function testInstantiate()
         Yii::$app->set('sessionDb', null);
         ini_set('session.gc_maxlifetime', $oldTimeout);
     }
+
+    public function testInitUseStrictMode()
+    {
+        $this->initStrictModeTest(DbSession::className());
+    }
+
+    public function testUseStrictMode()
+    {
+        $this->useStrictModeTest(DbSession::className());
+    }
 }
diff --git a/tests/framework/web/session/CacheSessionTest.php b/tests/framework/web/session/CacheSessionTest.php
index 018d1643fbe..e31b0f970f2 100644
--- a/tests/framework/web/session/CacheSessionTest.php
+++ b/tests/framework/web/session/CacheSessionTest.php
@@ -16,6 +16,8 @@
  */
 class CacheSessionTest extends \yiiunit\TestCase
 {
+    use SessionTestTrait;
+
     protected function setUp()
     {
         parent::setUp();
@@ -51,4 +53,14 @@ public function testNotWrittenSessionDestroying()
 
         $this->assertTrue($session->destroySession($session->getId()));
     }
+
+    public function testInitUseStrictMode()
+    {
+        $this->initStrictModeTest(CacheSession::className());
+    }
+
+    public function testUseStrictMode()
+    {
+        $this->useStrictModeTest(CacheSession::className());
+    }
 }
diff --git a/tests/framework/web/session/SessionTest.php b/tests/framework/web/session/SessionTest.php
index 28fc1e10d1e..6ad327f68f7 100644
--- a/tests/framework/web/session/SessionTest.php
+++ b/tests/framework/web/session/SessionTest.php
@@ -15,6 +15,8 @@
  */
 class SessionTest extends TestCase
 {
+    use SessionTestTrait;
+
     /**
      * Test to prove that after Session::destroy session id set to old value.
      */
@@ -69,6 +71,7 @@ public function testParamsAfterSessionStart()
         $newGcProbability = $session->getGCProbability();
         $this->assertNotEquals($oldGcProbability, $newGcProbability);
         $this->assertEquals(100, $newGcProbability);
+        $session->setGCProbability($oldGcProbability);
     }
 
     /**
@@ -88,4 +91,24 @@ public function testSetName()
 
         $session->destroy();
     }
+
+    public function testInitUseStrictMode()
+    {
+        $this->initStrictModeTest(Session::className());
+    }
+
+    public function testUseStrictMode()
+    {
+        //Manual garbage collection since native storage module might not support removing data via Session::destroySession()
+        $sessionSavePath = session_save_path() ?: sys_get_temp_dir();
+        // Only perform garbage collection if "N argument" is not used,
+        // see https://www.php.net/manual/en/session.configuration.php#ini.session.save-path
+        if (strpos($sessionSavePath, ';') === false) {
+            foreach (['non-existing-non-strict', 'non-existing-strict'] as $sessionId) {
+                @unlink($sessionSavePath . '/sess_' . $sessionId);
+            }
+        }
+
+        $this->useStrictModeTest(Session::className());
+    }
 }
diff --git a/tests/framework/web/session/SessionTestTrait.php b/tests/framework/web/session/SessionTestTrait.php
new file mode 100644
index 00000000000..1c3e3da687e
--- /dev/null
+++ b/tests/framework/web/session/SessionTestTrait.php
@@ -0,0 +1,73 @@
+<?php
+
+
+namespace yiiunit\framework\web\session;
+
+use yii\web\Session;
+
+trait SessionTestTrait
+{
+    public function initStrictModeTest($class)
+    {
+        /** @var Session $session */
+        $session = new $class();
+
+        $session->useStrictMode = false;
+        $this->assertEquals(false, $session->getUseStrictMode());
+
+        if (PHP_VERSION_ID < 50502 && !$session->getUseCustomStorage()) {
+            $this->expectException('yii\base\InvalidConfigException');
+            $session->useStrictMode = true;
+            return;
+        }
+
+        $session->useStrictMode = true;
+        $this->assertEquals(true, $session->getUseStrictMode());
+    }
+
+    /**
+     * @param string $class
+     */
+    protected function useStrictModeTest($class)
+    {
+        /** @var Session $session */
+        $session = new $class();
+
+        if (PHP_VERSION_ID < 50502 && !$session->getUseCustomStorage()) {
+            $this->markTestSkipped('Can not be tested on PHP < 5.5.2 without custom storage class.');
+            return;
+        }
+
+        //non-strict-mode test
+        $session->useStrictMode = false;
+        $session->close();
+        $session->destroySession('non-existing-non-strict');
+        $session->setId('non-existing-non-strict');
+        $session->open();
+        $this->assertEquals('non-existing-non-strict', $session->getId());
+        $session->close();
+
+        //strict-mode test
+        $session->useStrictMode = true;
+        $session->close();
+        $session->destroySession('non-existing-strict');
+        $session->setId('non-existing-strict');
+        $session->open();
+        $id = $session->getId();
+        $this->assertNotEquals('non-existing-strict', $id);
+        $session->set('strict_mode_test', 'session data');
+        $session->close();
+        //Ensure session was not stored under forced id
+        $session->setId('non-existing-strict');
+        $session->open();
+        $this->assertNotEquals('session data', $session->get('strict_mode_test'));
+        $session->close();
+        //Ensure session can be accessed with the new (and thus existing) id.
+        $session->setId($id);
+        $session->open();
+        $this->assertNotEmpty($id);
+        $this->assertEquals($id, $session->getId());
+        $this->assertEquals('session data', $session->get('strict_mode_test'));
+        $session->close();
+    }
+}
diff --git a/tests/phpunit_getopt.patch b/tests/phpunit_getopt.patch
deleted file mode 100644
index e3f13ffb5a5..00000000000
--- a/tests/phpunit_getopt.patch
+++ /dev/null
@@ -1,60 +0,0 @@
-diff --git a/src/Util/Getopt.php b/src/Util/Getopt.php
-index ba21be3..96931a3 100644
---- a/src/Util/Getopt.php
-+++ b/src/Util/Getopt.php
-@@ -35,7 +35,15 @@ class PHPUnit_Util_Getopt
-         reset($args);
-         array_map('trim', $args);
- 
--        while (list($i, $arg) = each($args)) {
-+        while (true) {
-+            $arg = current($args);
-+            $i = key($args);
-+            next($args);
-+
-+            if ($arg === false) {
-+                break;
-+            }
-+
-             if ($arg == '') {
-                 continue;
-             }
-@@ -94,11 +102,14 @@ class PHPUnit_Util_Getopt
-                     if ($i + 1 < $argLen) {
-                         $opts[] = array($opt, substr($arg, $i + 1));
-                         break;
--                    } elseif (list(, $opt_arg) = each($args)) {
-                     } else {
--                        throw new PHPUnit_Framework_Exception(
--                            "option requires an argument -- $opt"
--                        );
-+                        $opt_arg = current($args);
-+                        next($args);
-+                        if ($opt_arg === false) {
-+                            throw new PHPUnit_Framework_Exception(
-+                                "option requires an argument -- $opt"
-+                            );
-+                        }
-                     }
-                 }
-             }
-@@ -139,11 +150,14 @@ class PHPUnit_Util_Getopt
- 
-             if (substr($long_opt, -1) == '=') {
-                 if (substr($long_opt, -2) != '==') {
--                    if (!strlen($opt_arg) &&
--                        !(list(, $opt_arg) = each($args))) {
--                        throw new PHPUnit_Framework_Exception(
--                            "option --$opt requires an argument"
--                        );
-+                    if (!strlen($opt_arg)) {
-+                        $opt_arg = current($args);
-+                        next($args);
-+                        if ($opt_arg === false) {
-+                            throw new PHPUnit_Framework_Exception(
-+                                "option --$opt requires an argument"
-+                            );
-+                        }
-                     }
-                 }
-             } elseif ($opt_arg) {
diff --git a/tests/phpunit_mock_objects.patch b/tests/phpunit_mock_objects.patch
deleted file mode 100644
index dc7ec8e6c07..00000000000
--- a/tests/phpunit_mock_objects.patch
+++ /dev/null
@@ -1,14 +0,0 @@
-diff --git a/src/Framework/MockObject/Generator.php b/src/Framework/MockObject/Generator.php
-index 3df3abb..8407182 100644
---- a/src/Framework/MockObject/Generator.php
-+++ b/src/Framework/MockObject/Generator.php
-@@ -1032,7 +1032,8 @@ protected function getMethodParameters(ReflectionMethod $method, $forCall = fals
- 
-             if (!$forCall) {
-                 if ($this->hasType($parameter)) {
--                    $typeDeclaration = (string) $parameter->getType() . ' ';
-+                    $type = $parameter->getType();
-+                    $typeDeclaration = (PHP_VERSION_ID >= 70100 ? $type->getName() : (string) $type) . ' ';
-                 } elseif ($parameter->isArray()) {
-                     $typeDeclaration = 'array ';
-                 } elseif ((defined('HHVM_VERSION') || version_compare(PHP_VERSION, '5.4.0', '>='))
