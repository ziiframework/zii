diff --git a/composer.json b/composer.json
index e7d0d34f037..84af41acf00 100644
--- a/composer.json
+++ b/composer.json
@@ -59,7 +59,7 @@
         "issues": "https://github.com/yiisoft/yii2/issues?state=open",
         "forum": "https://forum.yiiframework.com/",
         "wiki": "https://www.yiiframework.com/wiki",
-        "irc": "irc://irc.libera.chat:6697/yii",
+        "irc": "ircs://irc.libera.chat:6697/yii",
         "source": "https://github.com/yiisoft/yii2"
     },
     "minimum-stability": "dev",
diff --git a/framework/BaseYii.php b/framework/BaseYii.php
index 4a5302a0fa0..002b0f61ed8 100644
--- a/framework/BaseYii.php
+++ b/framework/BaseYii.php
@@ -31,15 +31,15 @@
  */
 defined('YII_ENV') or define('YII_ENV', 'prod');
 /**
- * Whether the the application is running in production environment.
+ * Whether the application is running in the production environment.
  */
 defined('YII_ENV_PROD') or define('YII_ENV_PROD', YII_ENV === 'prod');
 /**
- * Whether the the application is running in development environment.
+ * Whether the application is running in the development environment.
  */
 defined('YII_ENV_DEV') or define('YII_ENV_DEV', YII_ENV === 'dev');
 /**
- * Whether the the application is running in testing environment.
+ * Whether the application is running in the testing environment.
  */
 defined('YII_ENV_TEST') or define('YII_ENV_TEST', YII_ENV === 'test');
 
@@ -93,7 +93,7 @@ class BaseYii
      */
     public static function getVersion()
     {
-        return '2.0.43';
+        return '2.0.44-dev';
     }
 
     /**
@@ -130,7 +130,7 @@ public static function getVersion()
      */
     public static function getAlias($alias, $throwException = true)
     {
-        if (strpos($alias, '@') !== 0) {
+        if (strncmp($alias, '@', 1) !== 0) {
             // not an alias
             return $alias;
         }
@@ -201,7 +201,7 @@ public static function getRootAlias($alias)
      * See the [guide article on aliases](guide:concept-aliases) for more information.
      *
      * @param string $alias the alias name (e.g. "@yii"). It must start with a '@' character.
-     * It may contain the forward slash '/' which serves as boundary character when performing
+     * It may contain the forward-slash '/' which serves as a boundary character when performing
      * alias translation by [[getAlias()]].
      * @param string $path the path corresponding to the alias. If this is null, the alias will
      * be removed. Trailing '/' and '\' characters will be trimmed. This can be
@@ -266,7 +266,7 @@ public static function setAlias($alias, $path)
      * and have its top-level namespace or sub-namespaces defined as path aliases.
      *
      * Example: When aliases `@yii` and `@yii/bootstrap` are defined, classes in the `yii\bootstrap` namespace
-     * will be loaded using the `@yii/bootstrap` alias which points to the directory where bootstrap extension
+     * will be loaded using the `@yii/bootstrap` alias which points to the directory where the bootstrap extension
      * files are installed and all classes from other `yii` namespaces will be loaded from the yii framework directory.
      *
      * Also the [guide section on autoloading](guide:concept-autoloading).
@@ -278,7 +278,7 @@ public static function autoload($className)
     {
         if (isset(static::$classMap[$className])) {
             $classFile = static::$classMap[$className];
-            if (strpos($classFile, '@') === 0) {
+            if (strncmp($classFile, '@', 1) === 0) {
                 $classFile = static::getAlias($classFile);
             }
         } elseif (strpos($className, '\\') !== false) {
@@ -393,11 +393,11 @@ public static function setLogger($logger)
 
     /**
      * Logs a debug message.
-     * Trace messages are logged mainly for development purpose to see
-     * the execution work flow of some code. This method will only log
+     * Trace messages are logged mainly for development purposes to see
+     * the execution workflow of some code. This method will only log
      * a message when the application is in debug mode.
      * @param string|array $message the message to be logged. This can be a simple string or a more
-     * complex data structure, such as array.
+     * complex data structure, such as an array.
      * @param string $category the category of the message.
      * @since 2.0.14
      */
@@ -411,7 +411,7 @@ public static function debug($message, $category = 'application')
     /**
      * Alias of [[debug()]].
      * @param string|array $message the message to be logged. This can be a simple string or a more
-     * complex data structure, such as array.
+     * complex data structure, such as an array.
      * @param string $category the category of the message.
      * @deprecated since 2.0.14. Use [[debug()]] instead.
      */
@@ -425,7 +425,7 @@ public static function trace($message, $category = 'application')
      * An error message is typically logged when an unrecoverable error occurs
      * during the execution of an application.
      * @param string|array $message the message to be logged. This can be a simple string or a more
-     * complex data structure, such as array.
+     * complex data structure, such as an array.
      * @param string $category the category of the message.
      */
     public static function error($message, $category = 'application')
@@ -438,7 +438,7 @@ public static function error($message, $category = 'application')
      * A warning message is typically logged when an error occurs while the execution
      * can still continue.
      * @param string|array $message the message to be logged. This can be a simple string or a more
-     * complex data structure, such as array.
+     * complex data structure, such as an array.
      * @param string $category the category of the message.
      */
     public static function warning($message, $category = 'application')
@@ -451,7 +451,7 @@ public static function warning($message, $category = 'application')
      * An informative message is typically logged by an application to keep record of
      * something important (e.g. an administrator logs in).
      * @param string|array $message the message to be logged. This can be a simple string or a more
-     * complex data structure, such as array.
+     * complex data structure, such as an array.
      * @param string $category the category of the message.
      */
     public static function info($message, $category = 'application')
@@ -522,7 +522,7 @@ public static function powered()
      * echo \Yii::t('app', 'Hello, {username}!', ['username' => $username]);
      * ```
      *
-     * Further formatting of message parameters is supported using the [PHP intl extensions](https://secure.php.net/manual/en/intro.intl.php)
+     * Further formatting of message parameters is supported using the [PHP intl extensions](https://www.php.net/manual/en/intro.intl.php)
      * message formatter. See [[\yii\i18n\I18N::translate()]] for more details.
      *
      * @param string $category the message category.
diff --git a/framework/CHANGELOG.md b/framework/CHANGELOG.md
index eaf515e26df..da783b578fe 100644
--- a/framework/CHANGELOG.md
+++ b/framework/CHANGELOG.md
@@ -1,6 +1,38 @@
 Yii Framework 2 Change Log
 ==========================
 
+2.0.44 under development
+------------------------
+
+- Enh #13105: Add yiiActiveForm validate_only property for skipping form auto-submission (ptolomaues)
+- Enh #18967: Use proper attribute names for tabular data in `yii\widgets\ActiveField::addAriaAttributes()` (AnkIF)
+- Bug #18798: Fix `StringHelper::dirname()` when passing string with a trailing slash (perlexed)
+- Enh #18328: Raise warning when trying to register a file after `View::endPage()` has been called (perlexed)
+- Enh #18812: Added error messages and optimized "error" methods in `yii\helpers\BaseJson` (WinterSilence, samdark)
+- Chg #18823: Rollback changes #18806 in `yii\validators\ExistValidator::checkTargetRelationExistence()` (WinterSilence)
+- Enh #18826: Add ability to turn the sorting off for a clicked column in GridView with multisort (ditibal)
+- Bug #18646: Remove stale identity data from session if `IdentityInterface::findIdentity()` returns `null` (mikehaertl)
+- Bug #18832: Fix `Inflector::camel2words()` adding extra spaces (brandonkelly)
+- Enh #18762: Added `yii\helpers\Json::$keepObjectType` and `yii\web\JsonResponseFormatter::$keepObjectType` in order to avoid changing zero-indexed objects to array in `yii\helpers\Json::encode()` (zebraf1)
+- Enh #18783: Add support for URI namespaced tags in `XmlResponseFormatter` (WinterSilence, samdark)
+- Enh #18783: Add `XmlResponseFormatter::$objectTagToLowercase` option to lowercase object tags (WinterSilence, samdark)
+- Bug #18845: Fix duplicating `id` in `MigrateController::addDefaultPrimaryKey()` (WinterSilence, samdark)
+- Bug #17119: Fix `yii\caching\Cache::multiSet()` to use `yii\caching\Cache::$defaultDuration` when no duration is passed (OscarBarrett)
+- Bug #18842: Fix `yii\base\Controller::bindInjectedParams()` to not throw error when argument of `ReflectionUnionType` type is passed (bizley)
+- Enh #18858: Reduce memory usage in `yii\base\View::afterRender` method (LeoOnTheEarth)
+- Bug #18880: Fix `yii\helpers\ArrayHelper::toArray()` for `DateTime` objects in PHP >= 7.4 (rhertogh)
+- Bug #18883: Fix `yii\web\HeaderCollection::fromArray()` now ensures lower case keys (rhertogh)
+- Enh #18899: Replace usages of `strpos` with `strncmp` and remove redundant usage of `array_merge` and `array_values` (AlexGx)
+- Bug #18898: Fix `yii\helpers\Inflector::camel2words()` to work with words ending with 0 (michaelarnauts)
+- Enh #18904: Improve Captcha client-side validation (hexkir)
+- Bug #18913: Add filename validation for `MessageSource::getMessageFilePath()` (uaoleg)
+- Bug #18909: Fix bug with binding default action parameters for controllers (bizley)
+- Bug #18955: Check `yiisoft/yii2-swiftmailer` before using as default mailer in `yii\base\Application` (WinterSilence)
+- Bug #18988: Fix default value of `yii\console\controllers\MessageController::$translator` (WinterSilence)
+- Bug #18993: Load defaults by `attributes()` in `yii\db\ActiveRecord::loadDefaultValues()` (WinterSilence)
+- Bug #19021: Fix return type in PhpDoc `yii\db\Migration` functions `up()`, `down()`, `safeUp()` and `safeDown()` (WinterSilence, rhertogh)
+
+
 2.0.43 August 09, 2021
 ----------------------
 
diff --git a/framework/UPGRADE.md b/framework/UPGRADE.md
index 7ec63dcd92e..8a9a20a4737 100644
--- a/framework/UPGRADE.md
+++ b/framework/UPGRADE.md
@@ -51,6 +51,25 @@ if you want to upgrade from version A to version C and there is
 version B between A and C, you need to follow the instructions
 for both A and B.
 
+Upgrade from Yii 2.0.43
+-----------------------
+
+* `Json::encode()` can now handle zero-indexed objects in same way as `json_encode()` and keep them as objects. In order to avoid breaking backwards compatibility this behavior could be enabled by a new option flag but is disabled by default.
+  * Set `yii/helpers/Json::$keepObjectType = true` anywhere in your application code
+  * Or configure json response formatter to enable it for all JSON responses:
+      ```php
+      'response' => [
+        'formatters' => [
+          \yii\web\Response::FORMAT_JSON => [
+            'class' => 'yii\web\JsonResponseFormatter',
+            'prettyPrint' => YII_DEBUG, // use "pretty" output in debug mode
+            'keepObjectType' => true, // keep object type for zero-indexed objects
+          ],
+        ],
+      ],
+      ```
+* `yii\caching\Cache::multiSet()` now uses the default cache duration (`yii\caching\Cache::$defaultDuration`) when no duration is provided. A duration of 0 should be explicitly passed if items should not expire.
+
 Upgrade from Yii 2.0.42
 -----------------------
 
@@ -65,6 +84,8 @@ Upgrade from Yii 2.0.42
   ```sql
   INSERT INTO `some_table` (`int_unsigned_col`) VALUES (22)
   ```
+* Property `yii\db\ColumnSchemaBuilder::$categoryMap` has been removed in favor of getter/setter methods `getCategoryMap()` 
+  and `setCategoryMap()`.
 
 Upgrade from Yii 2.0.41
 -----------------------
@@ -829,7 +850,7 @@ Upgrade from Yii 2.0 Beta
   You can add it with `ALTER TABLE log ADD COLUMN prefix TEXT AFTER log_time;`.
 
 * The `fileinfo` PHP extension is now required by Yii. If you use  `yii\helpers\FileHelper::getMimeType()`, make sure
-  you have enabled this extension. This extension is [builtin](https://secure.php.net/manual/en/fileinfo.installation.php) in php above `5.3`.
+  you have enabled this extension. This extension is [builtin](https://www.php.net/manual/en/fileinfo.installation.php) in php above `5.3`.
 
 * Please update your main layout file by adding this line in the `<head>` section: `<?= Html::csrfMetaTags() ?>`.
   This change is needed because `yii\web\View` no longer automatically generates CSRF meta tags due to issue #3358.
diff --git a/framework/assets/yii.activeForm.js b/framework/assets/yii.activeForm.js
index ab44e0cbd8b..671f6dcc9f6 100644
--- a/framework/assets/yii.activeForm.js
+++ b/framework/assets/yii.activeForm.js
@@ -218,6 +218,7 @@
                     attributes: attributes,
                     submitting: false,
                     validated: false,
+                    validate_only: false, // validate without auto submitting
                     options: getFormOptions($form)
                 });
 
@@ -754,12 +755,14 @@
                 data.submitting = false;
             } else {
                 data.validated = true;
-                if (data.submitObject) {
-                    applyButtonOptions($form, data.submitObject);
-                }
-                $form.submit();
-                if (data.submitObject) {
-                    restoreButtonOptions($form);
+                if (!data.validate_only) {
+                    if (data.submitObject) {
+                        applyButtonOptions($form, data.submitObject);
+                    }
+                    $form.submit();
+                    if (data.submitObject) {
+                        restoreButtonOptions($form);
+                    }
                 }
             }
         } else {
diff --git a/framework/assets/yii.validation.js b/framework/assets/yii.validation.js
index 88f79decba3..2f1e06039b1 100644
--- a/framework/assets/yii.validation.js
+++ b/framework/assets/yii.validation.js
@@ -261,7 +261,7 @@ yii.validation = (function ($) {
             hash = hash == null ? options.hash : hash[options.caseSensitive ? 0 : 1];
             var v = options.caseSensitive ? value : value.toLowerCase();
             for (var i = v.length - 1, h = 0; i >= 0; --i) {
-                h += v.charCodeAt(i);
+                h += v.charCodeAt(i) << i;
             }
             if (h != hash) {
                 pub.addMessage(messages, options.message, value);
diff --git a/framework/base/Application.php b/framework/base/Application.php
index 94f4be11787..3e095447c17 100644
--- a/framework/base/Application.php
+++ b/framework/base/Application.php
@@ -477,7 +477,7 @@ public function setVendorPath($path)
      * If time zone is not configured in php.ini or application config,
      * it will be set to UTC by default.
      * @return string the time zone used by this application.
-     * @see https://secure.php.net/manual/en/function.date-default-timezone-get.php
+     * @see https://www.php.net/manual/en/function.date-default-timezone-get.php
      */
     public function getTimeZone()
     {
@@ -487,9 +487,9 @@ public function getTimeZone()
     /**
      * Sets the time zone used by this application.
      * This is a simple wrapper of PHP function date_default_timezone_set().
-     * Refer to the [php manual](https://secure.php.net/manual/en/timezones.php) for available timezones.
+     * Refer to the [php manual](https://www.php.net/manual/en/timezones.php) for available timezones.
      * @param string $value the time zone used by this application.
-     * @see https://secure.php.net/manual/en/function.date-default-timezone-set.php
+     * @see https://www.php.net/manual/en/function.date-default-timezone-set.php
      */
     public function setTimeZone($value)
     {
@@ -589,6 +589,7 @@ public function getI18n()
     /**
      * Returns the mailer component.
      * @return \yii\mail\MailerInterface the mailer application component.
+     * @throws InvalidConfigException If this component is not configured.
      */
     public function getMailer()
     {
@@ -597,8 +598,7 @@ public function getMailer()
 
     /**
      * Returns the auth manager for this application.
-     * @return \yii\rbac\ManagerInterface the auth manager application component.
-     * Null is returned if auth manager is not configured.
+     * @return \yii\rbac\ManagerInterface|null the auth manager application component or null if it's not configured.
      */
     public function getAuthManager()
     {
@@ -625,20 +625,25 @@ public function getSecurity()
 
     /**
      * Returns the configuration of core application components.
+     * @return array
      * @see set()
      */
     public function coreComponents()
     {
-        return [
+        $components = [
             'log' => ['class' => 'yii\log\Dispatcher'],
             'view' => ['class' => 'yii\web\View'],
             'formatter' => ['class' => 'yii\i18n\Formatter'],
             'i18n' => ['class' => 'yii\i18n\I18N'],
-            'mailer' => ['class' => 'yii\swiftmailer\Mailer'],
             'urlManager' => ['class' => 'yii\web\UrlManager'],
             'assetManager' => ['class' => 'yii\web\AssetManager'],
             'security' => ['class' => 'yii\base\Security'],
         ];
+        if (class_exists('yii\swiftmailer\Mailer')) {
+            $components['mailer'] = ['class' => 'yii\swiftmailer\Mailer'];
+        }
+
+        return $components;
     }
 
     /**
diff --git a/framework/base/BaseObject.php b/framework/base/BaseObject.php
index acb50ada50c..e5d4e1001c8 100644
--- a/framework/base/BaseObject.php
+++ b/framework/base/BaseObject.php
@@ -173,7 +173,7 @@ public function __set($name, $value)
      * Note that if the property is not defined, false will be returned.
      * @param string $name the property name or the event name
      * @return bool whether the named property is set (not null).
-     * @see https://secure.php.net/manual/en/function.isset.php
+     * @see https://www.php.net/manual/en/function.isset.php
      */
     public function __isset($name)
     {
@@ -195,7 +195,7 @@ public function __isset($name)
      * If the property is read-only, it will throw an exception.
      * @param string $name the property name
      * @throws InvalidCallException if the property is read only.
-     * @see https://secure.php.net/manual/en/function.unset.php
+     * @see https://www.php.net/manual/en/function.unset.php
      */
     public function __unset($name)
     {
diff --git a/framework/base/Component.php b/framework/base/Component.php
index 47e872bd976..32f714cbcba 100644
--- a/framework/base/Component.php
+++ b/framework/base/Component.php
@@ -223,7 +223,7 @@ public function __set($name, $value)
      * will be implicitly called when executing `isset($component->property)`.
      * @param string $name the property name or the event name
      * @return bool whether the named property is set
-     * @see https://secure.php.net/manual/en/function.isset.php
+     * @see https://www.php.net/manual/en/function.isset.php
      */
     public function __isset($name)
     {
@@ -255,7 +255,7 @@ public function __isset($name)
      * will be implicitly called when executing `unset($component->property)`.
      * @param string $name the property name
      * @throws InvalidCallException if the property is read only.
-     * @see https://secure.php.net/manual/en/function.unset.php
+     * @see https://www.php.net/manual/en/function.unset.php
      */
     public function __unset($name)
     {
diff --git a/framework/base/DynamicModel.php b/framework/base/DynamicModel.php
index 610e03d8335..4510596d95a 100644
--- a/framework/base/DynamicModel.php
+++ b/framework/base/DynamicModel.php
@@ -252,7 +252,6 @@ public function attributes()
      * Sets the attribute labels in a massive way.
      *
      * @see attributeLabels()
-     * @see $_attributeLabels
      * @since 2.0.35
      *
      * @param array $labels Array of attribute labels
@@ -269,7 +268,6 @@ public function setAttributeLabels(array $labels = [])
      * Sets a label for an attribute.
      *
      * @see attributeLabels()
-     * @see $_attributeLabels
      * @since 2.0.35
      *
      * @param string $attribute Attribute name
diff --git a/framework/base/ErrorException.php b/framework/base/ErrorException.php
index 03b662f3af9..657b8e390b8 100644
--- a/framework/base/ErrorException.php
+++ b/framework/base/ErrorException.php
@@ -32,7 +32,7 @@ class ErrorException extends \ErrorException
 
     /**
      * Constructs the exception.
-     * @link https://secure.php.net/manual/en/errorexception.construct.php
+     * @link https://www.php.net/manual/en/errorexception.construct.php
      * @param string $message [optional]
      * @param int $code [optional]
      * @param int $severity [optional]
diff --git a/framework/base/Model.php b/framework/base/Model.php
index bbbb0d2cbfe..204242143c1 100644
--- a/framework/base/Model.php
+++ b/framework/base/Model.php
@@ -335,9 +335,9 @@ public function attributeHints()
      * Errors found during the validation can be retrieved via [[getErrors()]],
      * [[getFirstErrors()]] and [[getFirstError()]].
      *
-     * @param string[]|string $attributeNames attribute name or list of attribute names that should be validated.
-     * If this parameter is empty, it means any attribute listed in the applicable
-     * validation rules should be validated.
+     * @param string[]|string|null $attributeNames attribute name or list of attribute names
+     * that should be validated. If this parameter is empty, it means any attribute listed in
+     * the applicable validation rules should be validated.
      * @param bool $clearErrors whether to call [[clearErrors()]] before performing validation
      * @return bool whether the validation is successful without any error.
      * @throws InvalidArgumentException if the current scenario is unknown.
@@ -426,7 +426,7 @@ public function getValidators()
 
     /**
      * Returns the validators applicable to the current [[scenario]].
-     * @param string $attribute the name of the attribute whose applicable validators should be returned.
+     * @param string|null $attribute the name of the attribute whose applicable validators should be returned.
      * If this is null, the validators for ALL attributes in the model will be returned.
      * @return \yii\validators\Validator[] the validators applicable to the current [[scenario]].
      */
@@ -561,10 +561,9 @@ public function hasErrors($attribute = null)
 
     /**
      * Returns the errors for all attributes or a single attribute.
-     * @param string $attribute attribute name. Use null to retrieve errors for all attributes.
-     * @property array An array of errors for all attributes. Empty array is returned if no error.
-     * The result is a two-dimensional array. See [[getErrors()]] for detailed description.
+     * @param string|null $attribute attribute name. Use null to retrieve errors for all attributes. 
      * @return array errors for all attributes or the specified attribute. Empty array is returned if no error.
+     * See [[getErrors()]] for detailed description.
      * Note that when returning errors for all attributes, the result is a two-dimensional array, like the following:
      *
      * ```php
@@ -678,7 +677,7 @@ public function addErrors(array $items)
 
     /**
      * Removes errors for all attributes or a single attribute.
-     * @param string $attribute attribute name. Use null to remove errors for all attributes.
+     * @param string|null $attribute attribute name. Use null to remove errors for all attributes.
      */
     public function clearErrors($attribute = null)
     {
@@ -704,7 +703,7 @@ public function generateAttributeLabel($name)
 
     /**
      * Returns attribute values.
-     * @param array $names list of attributes whose value needs to be returned.
+     * @param array|null $names list of attributes whose value needs to be returned.
      * Defaults to null, meaning all attributes listed in [[attributes()]] will be returned.
      * If it is an array, only the attributes in the array will be returned.
      * @param array $except list of attributes whose value should NOT be returned.
@@ -857,7 +856,7 @@ public function activeAttributes()
      * Note, that the data being populated is subject to the safety check by [[setAttributes()]].
      *
      * @param array $data the data array to load, typically `$_POST` or `$_GET`.
-     * @param string $formName the form name to use to load the data into the model.
+     * @param string|null $formName the form name to use to load the data into the model, empty string when form not use.
      * If not set, [[formName()]] is used.
      * @return bool whether `load()` found the expected form in `$data`.
      */
@@ -887,7 +886,7 @@ public function load($data, $formName = null)
      * @param array $models the models to be populated. Note that all models should have the same class.
      * @param array $data the data array. This is usually `$_POST` or `$_GET`, but can also be any valid array
      * supplied by end user.
-     * @param string $formName the form name to be used for loading the data into the models.
+     * @param string|null $formName the form name to be used for loading the data into the models.
      * If not set, it will use the [[formName()]] value of the first model in `$models`.
      * This parameter is available since version 2.0.1.
      * @return bool whether at least one of the models is successfully populated.
@@ -923,7 +922,7 @@ public static function loadMultiple($models, $data, $formName = null)
      * This method will validate every model. The models being validated may
      * be of the same or different types.
      * @param array $models the models to be validated
-     * @param array $attributeNames list of attribute names that should be validated.
+     * @param array|null $attributeNames list of attribute names that should be validated.
      * If this parameter is empty, it means any attribute listed in the applicable
      * validation rules should be validated.
      * @return bool whether all models are valid. False will be returned if one
@@ -1007,7 +1006,7 @@ public function getIterator()
      * Returns whether there is an element at the specified offset.
      * This method is required by the SPL interface [[\ArrayAccess]].
      * It is implicitly called when you use something like `isset($model[$offset])`.
-     * @param mixed $offset the offset to check on.
+     * @param string $offset the offset to check on.
      * @return bool whether or not an offset exists.
      */
     public function offsetExists($offset)
@@ -1019,7 +1018,7 @@ public function offsetExists($offset)
      * Returns the element at the specified offset.
      * This method is required by the SPL interface [[\ArrayAccess]].
      * It is implicitly called when you use something like `$value = $model[$offset];`.
-     * @param mixed $offset the offset to retrieve element.
+     * @param string $offset the offset to retrieve element.
      * @return mixed the element at the offset, null if no element is found at the offset
      */
     public function offsetGet($offset)
@@ -1030,20 +1029,20 @@ public function offsetGet($offset)
     /**
      * Sets the element at the specified offset.
      * This method is required by the SPL interface [[\ArrayAccess]].
-     * It is implicitly called when you use something like `$model[$offset] = $item;`.
-     * @param int $offset the offset to set element
-     * @param mixed $item the element value
+     * It is implicitly called when you use something like `$model[$offset] = $value;`.
+     * @param string $offset the offset to set element
+     * @param mixed $value the element value
      */
-    public function offsetSet($offset, $item)
+    public function offsetSet($offset, $value)
     {
-        $this->$offset = $item;
+        $this->$offset = $value;
     }
 
     /**
      * Sets the element value at the specified offset to null.
      * This method is required by the SPL interface [[\ArrayAccess]].
      * It is implicitly called when you use something like `unset($model[$offset])`.
-     * @param mixed $offset the offset to unset element
+     * @param string $offset the offset to unset element
      */
     public function offsetUnset($offset)
     {
diff --git a/framework/base/Security.php b/framework/base/Security.php
index 49972d17bde..6276bf5a584 100644
--- a/framework/base/Security.php
+++ b/framework/base/Security.php
@@ -55,12 +55,12 @@ class Security extends Component
     ];
     /**
      * @var string Hash algorithm for key derivation. Recommend sha256, sha384 or sha512.
-     * @see [hash_algos()](https://secure.php.net/manual/en/function.hash-algos.php)
+     * @see [hash_algos()](https://www.php.net/manual/en/function.hash-algos.php)
      */
     public $kdfHash = 'sha256';
     /**
      * @var string Hash algorithm for message authentication. Recommend sha256, sha384 or sha512.
-     * @see [hash_algos()](https://secure.php.net/manual/en/function.hash-algos.php)
+     * @see [hash_algos()](https://www.php.net/manual/en/function.hash-algos.php)
      */
     public $macHash = 'sha256';
     /**
@@ -537,7 +537,7 @@ public function generateRandomString($length = 32)
      * compute the hash doubles for every increment by one of $cost.
      * @return string The password hash string. When [[passwordHashStrategy]] is set to 'crypt',
      * the output is always 60 ASCII characters, when set to 'password_hash' the output length
-     * might increase in future versions of PHP (https://secure.php.net/manual/en/function.password-hash.php)
+     * might increase in future versions of PHP (https://www.php.net/manual/en/function.password-hash.php)
      * @throws Exception on bad password parameter or cost parameter.
      * @see validatePassword()
      */
@@ -599,7 +599,7 @@ public function validatePassword($password, $hash)
     /**
      * Generates a salt that can be used to generate a password hash.
      *
-     * The PHP [crypt()](https://secure.php.net/manual/en/function.crypt.php) built-in function
+     * The PHP [crypt()](https://www.php.net/manual/en/function.crypt.php) built-in function
      * requires, for the Blowfish hash algorithm, a salt string in a specific format:
      * "$2a$", "$2x$" or "$2y$", a two digit cost parameter, "$", and 22 characters
      * from the alphabet "./0-9A-Za-z".
diff --git a/framework/base/View.php b/framework/base/View.php
index 41b3d9650ca..1cb79cfcf92 100644
--- a/framework/base/View.php
+++ b/framework/base/View.php
@@ -316,10 +316,10 @@ public function afterRender($viewFile, $params, &$output)
             $event = new ViewEvent([
                 'viewFile' => $viewFile,
                 'params' => $params,
-                'output' => $output,
             ]);
+            $event->output =& $output;
+
             $this->trigger(self::EVENT_AFTER_RENDER, $event);
-            $output = $event->output;
         }
     }
 
@@ -336,7 +336,6 @@ public function afterRender($viewFile, $params, &$output)
      * @param array $_params_ the parameters (name-value pairs) that will be extracted and made available in the view file.
      * @return string the rendering result
      * @throws \Exception
-     * @throws \Throwable
      */
     public function renderPhpFile($_file_, $_params_ = [])
     {
diff --git a/framework/behaviors/TimestampBehavior.php b/framework/behaviors/TimestampBehavior.php
index 4b4f54c2af6..7f79fe3bc9d 100644
--- a/framework/behaviors/TimestampBehavior.php
+++ b/framework/behaviors/TimestampBehavior.php
@@ -84,7 +84,7 @@ class TimestampBehavior extends AttributeBehavior
     /**
      * {@inheritdoc}
      *
-     * In case, when the value is `null`, the result of the PHP function [time()](https://secure.php.net/manual/en/function.time.php)
+     * In case, when the value is `null`, the result of the PHP function [time()](https://www.php.net/manual/en/function.time.php)
      * will be used as value.
      */
     public $value;
@@ -108,7 +108,7 @@ public function init()
     /**
      * {@inheritdoc}
      *
-     * In case, when the [[value]] is `null`, the result of the PHP function [time()](https://secure.php.net/manual/en/function.time.php)
+     * In case, when the [[value]] is `null`, the result of the PHP function [time()](https://www.php.net/manual/en/function.time.php)
      * will be used as value.
      */
     protected function getValue($event)
diff --git a/framework/caching/ApcCache.php b/framework/caching/ApcCache.php
index 50e893c4565..32b74eb5fbb 100644
--- a/framework/caching/ApcCache.php
+++ b/framework/caching/ApcCache.php
@@ -12,8 +12,8 @@
 /**
  * ApcCache provides APC caching in terms of an application component.
  *
- * To use this application component, the [APC PHP extension](https://secure.php.net/apc) must be loaded.
- * Alternatively [APCu PHP extension](https://secure.php.net/apcu) could be used via setting `useApcu` to `true`.
+ * To use this application component, the [APC PHP extension](https://www.php.net/apc) must be loaded.
+ * Alternatively [APCu PHP extension](https://www.php.net/apcu) could be used via setting `useApcu` to `true`.
  * In order to enable APC or APCu for CLI you should add "apc.enable_cli = 1" to your php.ini.
  *
  * See [[Cache]] for common cache operations that ApcCache supports.
diff --git a/framework/caching/Cache.php b/framework/caching/Cache.php
index ea79e1427ae..a4afaee5eb4 100644
--- a/framework/caching/Cache.php
+++ b/framework/caching/Cache.php
@@ -261,14 +261,15 @@ public function set($key, $value, $duration = null, $dependency = null)
      * expiration time will be replaced with the new ones, respectively.
      *
      * @param array $items the items to be cached, as key-value pairs.
-     * @param int $duration default number of seconds in which the cached values will expire. 0 means never expire.
+     * @param int $duration default duration in seconds before the cache will expire. If not set,
+     * default [[defaultDuration]] value is used.
      * @param Dependency $dependency dependency of the cached items. If the dependency changes,
      * the corresponding values in the cache will be invalidated when it is fetched via [[get()]].
      * This parameter is ignored if [[serializer]] is false.
      * @return array array of failed keys
      * @deprecated This method is an alias for [[multiSet()]] and will be removed in 2.1.0.
      */
-    public function mset($items, $duration = 0, $dependency = null)
+    public function mset($items, $duration = null, $dependency = null)
     {
         return $this->multiSet($items, $duration, $dependency);
     }
@@ -279,15 +280,20 @@ public function mset($items, $duration = 0, $dependency = null)
      * expiration time will be replaced with the new ones, respectively.
      *
      * @param array $items the items to be cached, as key-value pairs.
-     * @param int $duration default number of seconds in which the cached values will expire. 0 means never expire.
+     * @param int $duration default duration in seconds before the cache will expire. If not set,
+     * default [[defaultDuration]] value is used.
      * @param Dependency $dependency dependency of the cached items. If the dependency changes,
      * the corresponding values in the cache will be invalidated when it is fetched via [[get()]].
      * This parameter is ignored if [[serializer]] is false.
      * @return array array of failed keys
      * @since 2.0.7
      */
-    public function multiSet($items, $duration = 0, $dependency = null)
+    public function multiSet($items, $duration = null, $dependency = null)
     {
+        if ($duration === null) {
+            $duration = $this->defaultDuration;
+        }
+
         if ($dependency !== null && $this->serializer !== false) {
             $dependency->evaluateDependency($this);
         }
diff --git a/framework/caching/CacheInterface.php b/framework/caching/CacheInterface.php
index cc344154570..2b14c25e397 100644
--- a/framework/caching/CacheInterface.php
+++ b/framework/caching/CacheInterface.php
@@ -112,13 +112,14 @@ public function set($key, $value, $duration = null, $dependency = null);
      * expiration time will be replaced with the new ones, respectively.
      *
      * @param array $items the items to be cached, as key-value pairs.
-     * @param int $duration default number of seconds in which the cached values will expire. 0 means never expire.
+     * @param int $duration default duration in seconds before the cache will expire. If not set,
+     * default [[defaultDuration]] value is used.
      * @param Dependency $dependency dependency of the cached items. If the dependency changes,
      * the corresponding values in the cache will be invalidated when it is fetched via [[get()]].
      * This parameter is ignored if [[serializer]] is false.
      * @return array array of failed keys
      */
-    public function multiSet($items, $duration = 0, $dependency = null);
+    public function multiSet($items, $duration = null, $dependency = null);
 
     /**
      * Stores a value identified by a key into cache if the cache does not contain this key.
diff --git a/framework/caching/ExpressionDependency.php b/framework/caching/ExpressionDependency.php
index 503e6dc798d..09d6756bf83 100644
--- a/framework/caching/ExpressionDependency.php
+++ b/framework/caching/ExpressionDependency.php
@@ -15,7 +15,7 @@
  * the same as the one evaluated when storing the data to cache.
  *
  * A PHP expression can be any PHP code that has a value. To learn more about what an expression is,
- * please refer to the [php manual](https://secure.php.net/manual/en/language.expressions.php).
+ * please refer to the [php manual](https://www.php.net/manual/en/language.expressions.php).
  *
  * For more details and usage information on Cache, see the [guide article on caching](guide:caching-overview).
  *
@@ -27,7 +27,7 @@ class ExpressionDependency extends Dependency
     /**
      * @var string the string representation of a PHP expression whose result is used to determine the dependency.
      * A PHP expression can be any PHP code that evaluates to a value. To learn more about what an expression is,
-     * please refer to the [php manual](https://secure.php.net/manual/en/language.expressions.php).
+     * please refer to the [php manual](https://www.php.net/manual/en/language.expressions.php).
      */
     public $expression = 'true';
     /**
diff --git a/framework/caching/FileCache.php b/framework/caching/FileCache.php
index 378a84fb736..52a80c67b35 100644
--- a/framework/caching/FileCache.php
+++ b/framework/caching/FileCache.php
@@ -261,7 +261,7 @@ protected function gcRecursive($path, $expiredOnly)
     {
         if (($handle = opendir($path)) !== false) {
             while (($file = readdir($handle)) !== false) {
-                if (strpos($file, '.') === 0) {
+                if (strncmp($file, '.', 1) === 0) {
                     continue;
                 }
                 $fullPath = $path . DIRECTORY_SEPARATOR . $file;
diff --git a/framework/caching/MemCache.php b/framework/caching/MemCache.php
index 8fe5378b5d8..9c1e1791a3f 100644
--- a/framework/caching/MemCache.php
+++ b/framework/caching/MemCache.php
@@ -77,22 +77,22 @@ class MemCache extends Cache
      * By default the Memcached instances are destroyed at the end of the request. To create an instance that
      * persists between requests, you may specify a unique ID for the instance. All instances created with the
      * same ID will share the same connection.
-     * @see https://secure.php.net/manual/en/memcached.construct.php
+     * @see https://www.php.net/manual/en/memcached.construct.php
      */
     public $persistentId;
     /**
      * @var array options for Memcached. This property is used only when [[useMemcached]] is true.
-     * @see https://secure.php.net/manual/en/memcached.setoptions.php
+     * @see https://www.php.net/manual/en/memcached.setoptions.php
      */
     public $options;
     /**
      * @var string memcached sasl username. This property is used only when [[useMemcached]] is true.
-     * @see https://secure.php.net/manual/en/memcached.setsaslauthdata.php
+     * @see https://www.php.net/manual/en/memcached.setsaslauthdata.php
      */
     public $username;
     /**
      * @var string memcached sasl password. This property is used only when [[useMemcached]] is true.
-     * @see https://secure.php.net/manual/en/memcached.setsaslauthdata.php
+     * @see https://www.php.net/manual/en/memcached.setsaslauthdata.php
      */
     public $password;
 
@@ -249,8 +249,8 @@ public function getServers()
     /**
      * @param array $config list of memcache or memcached server configurations. Each element must be an array
      * with the following keys: host, port, persistent, weight, timeout, retryInterval, status.
-     * @see https://secure.php.net/manual/en/memcache.addserver.php
-     * @see https://secure.php.net/manual/en/memcached.addserver.php
+     * @see https://www.php.net/manual/en/memcache.addserver.php
+     * @see https://www.php.net/manual/en/memcached.addserver.php
      */
     public function setServers($config)
     {
@@ -286,7 +286,7 @@ protected function getValues($keys)
      *
      * @param string $key the key identifying the value to be cached
      * @param mixed $value the value to be cached.
-     * @see [Memcache::set()](https://secure.php.net/manual/en/memcache.set.php)
+     * @see [Memcache::set()](https://www.php.net/manual/en/memcache.set.php)
      * @param int $duration the number of seconds in which the cached value will expire. 0 means never expire.
      * @return bool true if the value is successfully stored into cache, false otherwise
      */
@@ -308,7 +308,7 @@ protected function setValues($data, $duration)
             $expire = $this->normalizeDuration($duration);
 
             // Memcached::setMulti() returns boolean
-            // @see https://secure.php.net/manual/en/memcached.setmulti.php
+            // @see https://www.php.net/manual/en/memcached.setmulti.php
             return $this->_cache->setMulti($data, $expire) ? [] : array_keys($data);
         }
 
@@ -321,7 +321,7 @@ protected function setValues($data, $duration)
      *
      * @param string $key the key identifying the value to be cached
      * @param mixed $value the value to be cached
-     * @see [Memcache::set()](https://secure.php.net/manual/en/memcache.set.php)
+     * @see [Memcache::set()](https://www.php.net/manual/en/memcache.set.php)
      * @param int $duration the number of seconds in which the cached value will expire. 0 means never expire.
      * @return bool true if the value is successfully stored into cache, false otherwise
      */
@@ -356,8 +356,8 @@ protected function flushValues()
      * Normalizes duration value
      *
      * @see https://github.com/yiisoft/yii2/issues/17710
-     * @see https://secure.php.net/manual/en/memcache.set.php
-     * @see https://secure.php.net/manual/en/memcached.expiration.php
+     * @see https://www.php.net/manual/en/memcache.set.php
+     * @see https://www.php.net/manual/en/memcached.expiration.php
      *
      * @since 2.0.31
      * @param int $duration
diff --git a/framework/caching/MemCacheServer.php b/framework/caching/MemCacheServer.php
index c6274814eee..96d10c46ad7 100644
--- a/framework/caching/MemCacheServer.php
+++ b/framework/caching/MemCacheServer.php
@@ -10,7 +10,7 @@
 /**
  * MemCacheServer represents the configuration data for a single memcache or memcached server.
  *
- * See [PHP manual](https://secure.php.net/manual/en/memcache.addserver.php) for detailed explanation
+ * See [PHP manual](https://www.php.net/manual/en/memcache.addserver.php) for detailed explanation
  * of each configuration property.
  *
  * For more details and usage information on Cache, see the [guide article on caching](guide:caching-overview).
diff --git a/framework/captcha/CaptchaAction.php b/framework/captcha/CaptchaAction.php
index e61a9ed34ae..c3b9c420e27 100644
--- a/framework/captcha/CaptchaAction.php
+++ b/framework/captcha/CaptchaAction.php
@@ -150,7 +150,7 @@ public function run()
     public function generateValidationHash($code)
     {
         for ($h = 0, $i = strlen($code) - 1; $i >= 0; --$i) {
-            $h += ord($code[$i]);
+            $h += ord($code[$i]) << $i;
         }
 
         return $h;
diff --git a/framework/composer.json b/framework/composer.json
index b211cb5eea3..2875edb6657 100644
--- a/framework/composer.json
+++ b/framework/composer.json
@@ -59,7 +59,7 @@
         "issues": "https://github.com/yiisoft/yii2/issues?state=open",
         "forum": "http://www.yiiframework.com/forum/",
         "wiki": "http://www.yiiframework.com/wiki/",
-        "irc": "irc://irc.libera.chat:6697/yii",
+        "irc": "ircs://irc.libera.chat:6697/yii",
         "source": "https://github.com/yiisoft/yii2"
     },
     "require": {
diff --git a/framework/console/Application.php b/framework/console/Application.php
index b8c07cdee49..4ee2535249d 100644
--- a/framework/console/Application.php
+++ b/framework/console/Application.php
@@ -11,7 +11,7 @@
 use yii\base\InvalidRouteException;
 
 // define STDIN, STDOUT and STDERR if the PHP SAPI did not define them (e.g. creating console application in web env)
-// https://secure.php.net/manual/en/features.commandline.io-streams.php
+// https://www.php.net/manual/en/features.commandline.io-streams.php
 defined('STDIN') or define('STDIN', fopen('php://stdin', 'r'));
 defined('STDOUT') or define('STDOUT', fopen('php://stdout', 'w'));
 defined('STDERR') or define('STDERR', fopen('php://stderr', 'w'));
diff --git a/framework/console/Controller.php b/framework/console/Controller.php
index fa0555386cc..6fb573db946 100644
--- a/framework/console/Controller.php
+++ b/framework/console/Controller.php
@@ -226,7 +226,12 @@ public function bindActionParams($action, $params)
                 }
                 $args[] = $actionParams[$key] = $params[$key];
                 unset($params[$key]);
-            } elseif (PHP_VERSION_ID >= 70100 && ($type = $param->getType()) !== null && !$type->isBuiltin()) {
+            } elseif (
+                PHP_VERSION_ID >= 70100
+                && ($type = $param->getType()) !== null
+                && $type instanceof \ReflectionNamedType
+                && !$type->isBuiltin()
+            ) {
                 try {
                     $this->bindInjectedParams($type, $name, $args, $requestedParams);
                 } catch (\yii\base\Exception $e) {
@@ -316,6 +321,7 @@ public function stdout($string)
      * ```
      *
      * @param string $string the string to print
+     * @param int ...$args additional parameters to decorate the output
      * @return int|bool Number of bytes printed or false on error
      */
     public function stderr($string)
diff --git a/framework/console/UnknownCommandException.php b/framework/console/UnknownCommandException.php
index 3dc4aed1bc7..29d00799b42 100644
--- a/framework/console/UnknownCommandException.php
+++ b/framework/console/UnknownCommandException.php
@@ -61,7 +61,7 @@ public function getName()
      *   available commands. The Levenshtein distance is defined as the minimal number of
      *   characters you have to replace, insert or delete to transform str1 into str2.
      *
-     * @see https://secure.php.net/manual/en/function.levenshtein.php
+     * @see https://www.php.net/manual/en/function.levenshtein.php
      * @return array a list of suggested alternatives sorted by similarity.
      */
     public function getSuggestedAlternatives()
@@ -104,7 +104,7 @@ public function getSuggestedAlternatives()
      *   available commands. The Levenshtein distance is defined as the minimal number of
      *   characters you have to replace, insert or delete to transform str1 into str2.
      *
-     * @see https://secure.php.net/manual/en/function.levenshtein.php
+     * @see https://www.php.net/manual/en/function.levenshtein.php
      * @param array $actions available command names.
      * @param string $command the command to compare to.
      * @return array a list of suggested alternatives sorted by similarity.
diff --git a/framework/console/controllers/BaseMigrateController.php b/framework/console/controllers/BaseMigrateController.php
index 0d3f0de7d39..24280c36e7c 100644
--- a/framework/console/controllers/BaseMigrateController.php
+++ b/framework/console/controllers/BaseMigrateController.php
@@ -37,7 +37,7 @@ abstract class BaseMigrateController extends Controller
      */
     public $defaultAction = 'up';
     /**
-     * @var string|array the directory containing the migration classes. This can be either
+     * @var string|array|null the directory containing the migration classes. This can be either
      * a [path alias](guide:concept-aliases) or a directory path.
      *
      * Migration classes located at this path should be declared without a namespace.
@@ -54,7 +54,7 @@ abstract class BaseMigrateController extends Controller
      * as the migration name contains the origin of the migration in the history, which is not the case when
      * using multiple migration paths.
      *
-     * @see $migrationNamespaces
+     * @see migrationNamespaces
      */
     public $migrationPath = ['@app/migrations'];
     /**
@@ -75,7 +75,7 @@ abstract class BaseMigrateController extends Controller
      * ```
      *
      * @since 2.0.10
-     * @see $migrationPath
+     * @see migrationPath
      */
     public $migrationNamespaces = [];
     /**
@@ -632,7 +632,7 @@ public function actionNew($limit = 10)
      * For example:
      *
      * ```
-     * yii migrate/create 'app\\migrations\\createUserTable'
+     * yii migrate/create app\\migrations\\createUserTable
      * ```
      *
      * In case [[migrationPath]] is not set and no namespace is provided, the first entry of [[migrationNamespaces]] will be used.
diff --git a/framework/console/controllers/MessageController.php b/framework/console/controllers/MessageController.php
index a8278d9db5c..5eb1e312a08 100644
--- a/framework/console/controllers/MessageController.php
+++ b/framework/console/controllers/MessageController.php
@@ -58,12 +58,11 @@ class MessageController extends \yii\console\Controller
      */
     public $languages = [];
     /**
-     * @var string the name of the function for translating messages.
-     * Defaults to 'Yii::t'. This is used as a mark to find the messages to be
-     * translated. You may use a string for single function name or an array for
-     * multiple function names.
+     * @var string|string[] the name of the function for translating messages.
+     * This is used as a mark to find the messages to be translated.
+     * You may use a string for single function name or an array for multiple function names.
      */
-    public $translator = 'Yii::t';
+    public $translator = ['Yii::t', '\Yii::t'];
     /**
      * @var bool whether to sort messages by keys when merging new messages
      * with the existing ones. Defaults to false, which means the new (untranslated)
@@ -91,13 +90,12 @@ class MessageController extends \yii\console\Controller
      * If a file/directory matches both a pattern in "only" and "except", it will NOT be processed.
      */
     public $except = [
-        '.svn',
-        '.git',
-        '.gitignore',
-        '.gitkeep',
-        '.hgignore',
-        '.hgkeep',
+        '.*',
+        '/.*',
         '/messages',
+        '/tests',
+        '/runtime',
+        '/vendor',
         '/BaseYii.php', // contains examples about Yii::t()
     ];
     /**
@@ -386,7 +384,7 @@ protected function saveMessagesToDb($messages, $db, $sourceMessageTable, $messag
 
         if (!$removeUnused) {
             foreach ($obsolete as $pk => $msg) {
-                if (strpos($msg, '@@') === 0 && substr($msg, -2) === '@@') {
+                if (strncmp($msg, '@@', 2) === 0 && substr($msg, -2) === '@@') {
                     unset($obsolete[$pk]);
                 }
             }
diff --git a/framework/console/controllers/MigrateController.php b/framework/console/controllers/MigrateController.php
index 3f0efeaac12..8bf011fe42a 100644
--- a/framework/console/controllers/MigrateController.php
+++ b/framework/console/controllers/MigrateController.php
@@ -387,7 +387,7 @@ private function normalizeTableName($name)
             $name = substr($name, 0, -1);
         }
 
-        if (strpos($name, '_') === 0) {
+        if (strncmp($name, '_', 1) === 0) {
             return substr($name, 1);
         }
 
@@ -606,7 +606,7 @@ protected function splitFieldIntoChunks($field)
     protected function addDefaultPrimaryKey(&$fields)
     {
         foreach ($fields as $field) {
-            if (false !== strripos($field['decorators'], 'primarykey()')) {
+            if ($field['property'] === 'id' || false !== strripos($field['decorators'], 'primarykey()')) {
                 return;
             }
         }
diff --git a/framework/console/controllers/ServeController.php b/framework/console/controllers/ServeController.php
index 67afee668b3..7df3b67c8f8 100644
--- a/framework/console/controllers/ServeController.php
+++ b/framework/console/controllers/ServeController.php
@@ -37,7 +37,7 @@ class ServeController extends Controller
     public $docroot = '@app/web';
     /**
      * @var string path or [path alias](guide:concept-aliases) to router script.
-     * See https://secure.php.net/manual/en/features.commandline.webserver.php
+     * See https://www.php.net/manual/en/features.commandline.webserver.php
      */
     public $router;
 
diff --git a/framework/data/ActiveDataFilter.php b/framework/data/ActiveDataFilter.php
index 88ad36254c2..5c46d0a449b 100644
--- a/framework/data/ActiveDataFilter.php
+++ b/framework/data/ActiveDataFilter.php
@@ -101,7 +101,7 @@ protected function buildCondition($condition)
 
         if (!empty($parts)) {
             if (count($parts) > 1) {
-                $parts = array_merge(['AND'], $parts);
+                array_unshift($parts, 'AND');
             } else {
                 $parts = array_shift($parts);
             }
diff --git a/framework/data/DataProviderInterface.php b/framework/data/DataProviderInterface.php
index 71ed1febfb9..0260c381e8f 100644
--- a/framework/data/DataProviderInterface.php
+++ b/framework/data/DataProviderInterface.php
@@ -61,7 +61,7 @@ public function getModels();
     public function getKeys();
 
     /**
-     * @return Sort the sorting object. If this is false, it means the sorting is disabled.
+     * @return Sort|false the sorting object. If this is false, it means the sorting is disabled.
      */
     public function getSort();
 
diff --git a/framework/data/Sort.php b/framework/data/Sort.php
index 0e620644272..bbb1ce9b336 100644
--- a/framework/data/Sort.php
+++ b/framework/data/Sort.php
@@ -305,8 +305,8 @@ public function getAttributeOrders($recalculate = false)
      * @param string $param the value of the [[sortParam]].
      * @return array the valid sort attributes.
      * @since 2.0.12
-     * @see $separator for the attribute name separator.
-     * @see $sortParam
+     * @see separator for the attribute name separator.
+     * @see sortParam
      */
     protected function parseSortParam($param)
     {
@@ -438,14 +438,25 @@ public function createSortParam($attribute)
         $definition = $this->attributes[$attribute];
         $directions = $this->getAttributeOrders();
         if (isset($directions[$attribute])) {
-            $direction = $directions[$attribute] === SORT_DESC ? SORT_ASC : SORT_DESC;
+            if ($this->enableMultiSort) {
+                if ($directions[$attribute] === SORT_ASC) {
+                    $direction = SORT_DESC;
+                } else {
+                    $direction = null;
+                }
+            } else {
+                $direction = $directions[$attribute] === SORT_DESC ? SORT_ASC : SORT_DESC;
+            }
+
             unset($directions[$attribute]);
         } else {
             $direction = isset($definition['default']) ? $definition['default'] : SORT_ASC;
         }
 
         if ($this->enableMultiSort) {
-            $directions = array_merge([$attribute => $direction], $directions);
+            if ($direction !== null) {
+                $directions = array_merge([$attribute => $direction], $directions);
+            }
         } else {
             $directions = [$attribute => $direction];
         }
diff --git a/framework/db/ActiveRecord.php b/framework/db/ActiveRecord.php
index 0ccbcca6305..face7132b76 100644
--- a/framework/db/ActiveRecord.php
+++ b/framework/db/ActiveRecord.php
@@ -115,9 +115,13 @@ class ActiveRecord extends BaseActiveRecord
      */
     public function loadDefaultValues($skipIfSet = true)
     {
-        foreach (static::getTableSchema()->columns as $column) {
-            if ($column->defaultValue !== null && (!$skipIfSet || $this->{$column->name} === null)) {
-                $this->{$column->name} = $column->defaultValue;
+        $columns = static::getTableSchema()->columns;
+        foreach ($this->attributes() as $name) {
+            if (isset($columns[$name])) {
+                $defaultValue = $columns[$name]->defaultValue;
+                if ($defaultValue !== null && (!$skipIfSet || $this->getAttribute($name) === null)) {
+                    $this->setAttribute($name, $defaultValue);
+                }
             }
         }
 
@@ -553,7 +557,7 @@ public static function populateRecord($record, $row)
      * @param array $attributes list of attributes that need to be saved. Defaults to `null`,
      * meaning all attributes that are loaded from DB will be saved.
      * @return bool whether the attributes are valid and the record is inserted successfully.
-     * @throws \Exception|\Throwable in case insert failed.
+     * @throws \Exception in case insert failed.
      */
     public function insert($runValidation = true, $attributes = null)
     {
@@ -663,7 +667,7 @@ protected function insertInternal($attributes = null)
      * or [[beforeSave()]] stops the updating process.
      * @throws StaleObjectException if [[optimisticLock|optimistic locking]] is enabled and the data
      * being updated is outdated.
-     * @throws \Exception|\Throwable in case update failed.
+     * @throws \Exception in case update failed.
      */
     public function update($runValidation = true, $attributeNames = null)
     {
@@ -712,7 +716,7 @@ public function update($runValidation = true, $attributeNames = null)
      * Note that it is possible the number of rows deleted is 0, even though the deletion execution is successful.
      * @throws StaleObjectException if [[optimisticLock|optimistic locking]] is enabled and the data
      * being deleted is outdated.
-     * @throws \Exception|\Throwable in case delete failed.
+     * @throws \Exception in case delete failed.
      */
     public function delete()
     {
diff --git a/framework/db/ActiveRelationTrait.php b/framework/db/ActiveRelationTrait.php
index 461ea759cc2..8f2a6e44289 100644
--- a/framework/db/ActiveRelationTrait.php
+++ b/framework/db/ActiveRelationTrait.php
@@ -167,7 +167,7 @@ public function inverseOf($relationName)
 
     /**
      * Finds the related records for the specified primary record.
-     * This method is invoked when a relation of an ActiveRecord is being accessed in a lazy fashion.
+     * This method is invoked when a relation of an ActiveRecord is being accessed lazily.
      * @param string $name the relation name
      * @param ActiveRecordInterface|BaseActiveRecord $model the primary model
      * @return mixed the related record(s)
@@ -589,7 +589,7 @@ private function getModelKey($model, $attributes)
     }
 
     /**
-     * @param mixed $value raw key value. Since 2.0.40 non-string values must be convertable to string (like special
+     * @param mixed $value raw key value. Since 2.0.40 non-string values must be convertible to string (like special
      * objects for cross-DBMS relations, for example: `|MongoId`).
      * @return string normalized key value.
      */
diff --git a/framework/db/ArrayExpression.php b/framework/db/ArrayExpression.php
index 7a36793efb7..e473eb10ec2 100644
--- a/framework/db/ArrayExpression.php
+++ b/framework/db/ArrayExpression.php
@@ -69,7 +69,6 @@ public function __construct($value, $type = null, $dimension = 1)
 
     /**
      * @return null|string
-     * @see type
      */
     public function getType()
     {
@@ -78,7 +77,6 @@ public function getType()
 
     /**
      * @return array|mixed|QueryInterface
-     * @see value
      */
     public function getValue()
     {
@@ -87,7 +85,6 @@ public function getValue()
 
     /**
      * @return int the number of indices needed to select an element
-     * @see dimensions
      */
     public function getDimension()
     {
@@ -97,7 +94,7 @@ public function getDimension()
     /**
      * Whether a offset exists
      *
-     * @link https://secure.php.net/manual/en/arrayaccess.offsetexists.php
+     * @link https://www.php.net/manual/en/arrayaccess.offsetexists.php
      * @param mixed $offset <p>
      * An offset to check for.
      * </p>
@@ -115,7 +112,7 @@ public function offsetExists($offset)
     /**
      * Offset to retrieve
      *
-     * @link https://secure.php.net/manual/en/arrayaccess.offsetget.php
+     * @link https://www.php.net/manual/en/arrayaccess.offsetget.php
      * @param mixed $offset <p>
      * The offset to retrieve.
      * </p>
@@ -130,7 +127,7 @@ public function offsetGet($offset)
     /**
      * Offset to set
      *
-     * @link https://secure.php.net/manual/en/arrayaccess.offsetset.php
+     * @link https://www.php.net/manual/en/arrayaccess.offsetset.php
      * @param mixed $offset <p>
      * The offset to assign the value to.
      * </p>
@@ -148,7 +145,7 @@ public function offsetSet($offset, $value)
     /**
      * Offset to unset
      *
-     * @link https://secure.php.net/manual/en/arrayaccess.offsetunset.php
+     * @link https://www.php.net/manual/en/arrayaccess.offsetunset.php
      * @param mixed $offset <p>
      * The offset to unset.
      * </p>
@@ -163,7 +160,7 @@ public function offsetUnset($offset)
     /**
      * Count elements of an object
      *
-     * @link https://secure.php.net/manual/en/countable.count.php
+     * @link https://www.php.net/manual/en/countable.count.php
      * @return int The custom count as an integer.
      * </p>
      * <p>
@@ -178,7 +175,7 @@ public function count()
     /**
      * Retrieve an external iterator
      *
-     * @link https://secure.php.net/manual/en/iteratoraggregate.getiterator.php
+     * @link https://www.php.net/manual/en/iteratoraggregate.getiterator.php
      * @return Traversable An instance of an object implementing <b>Iterator</b> or
      * <b>Traversable</b>
      * @since 2.0.14.1
diff --git a/framework/db/BatchQueryResult.php b/framework/db/BatchQueryResult.php
index 5158e4b281d..c473d0ecd23 100644
--- a/framework/db/BatchQueryResult.php
+++ b/framework/db/BatchQueryResult.php
@@ -246,7 +246,7 @@ private function getDbDriverName()
     /**
      * Unserialization is disabled to prevent remote code execution in case application
      * calls unserialize() on user input containing specially crafted string.
-     * @see CVE-2020-15148
+     * @see https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15148
      * @since 2.0.38
      */
     public function __wakeup()
diff --git a/framework/db/Command.php b/framework/db/Command.php
index 881a898a65a..53be1470dec 100644
--- a/framework/db/Command.php
+++ b/framework/db/Command.php
@@ -66,7 +66,7 @@ class Command extends Component
     public $pdoStatement;
     /**
      * @var int the default fetch mode for this command.
-     * @see https://secure.php.net/manual/en/pdostatement.setfetchmode.php
+     * @see https://www.php.net/manual/en/pdostatement.setfetchmode.php
      */
     public $fetchMode = \PDO::FETCH_ASSOC;
     /**
@@ -296,7 +296,7 @@ public function cancel()
      * @param int $length length of the data type
      * @param mixed $driverOptions the driver-specific options
      * @return $this the current command being executed
-     * @see https://secure.php.net/manual/en/function.PDOStatement-bindParam.php
+     * @see https://www.php.net/manual/en/function.PDOStatement-bindParam.php
      */
     public function bindParam($name, &$value, $dataType = null, $length = null, $driverOptions = null)
     {
@@ -338,7 +338,7 @@ protected function bindPendingParams()
      * @param mixed $value The value to bind to the parameter
      * @param int $dataType SQL data type of the parameter. If null, the type is determined by the PHP type of the value.
      * @return $this the current command being executed
-     * @see https://secure.php.net/manual/en/function.PDOStatement-bindValue.php
+     * @see https://www.php.net/manual/en/function.PDOStatement-bindValue.php
      */
     public function bindValue($name, $value, $dataType = null)
     {
@@ -399,7 +399,7 @@ public function query()
 
     /**
      * Executes the SQL statement and returns ALL rows at once.
-     * @param int $fetchMode the result fetch mode. Please refer to [PHP manual](https://secure.php.net/manual/en/function.PDOStatement-setFetchMode.php)
+     * @param int $fetchMode the result fetch mode. Please refer to [PHP manual](https://www.php.net/manual/en/function.PDOStatement-setFetchMode.php)
      * for valid fetch modes. If this parameter is null, the value set in [[fetchMode]] will be used.
      * @return array all rows of the query result. Each array element is an array representing a row of data.
      * An empty array is returned if the query results in nothing.
@@ -413,7 +413,7 @@ public function queryAll($fetchMode = null)
     /**
      * Executes the SQL statement and returns the first row of the result.
      * This method is best used when only the first row of result is needed for a query.
-     * @param int $fetchMode the result fetch mode. Please refer to [PHP manual](https://secure.php.net/manual/en/pdostatement.setfetchmode.php)
+     * @param int $fetchMode the result fetch mode. Please refer to [PHP manual](https://www.php.net/manual/en/pdostatement.setfetchmode.php)
      * for valid fetch modes. If this parameter is null, the value set in [[fetchMode]] will be used.
      * @return array|false the first row (in terms of an array) of the query result. False is returned if the query
      * results in nothing.
@@ -1136,7 +1136,7 @@ protected function logQuery($category)
     /**
      * Performs the actual DB query of a SQL statement.
      * @param string $method method of PDOStatement to be called
-     * @param int $fetchMode the result fetch mode. Please refer to [PHP manual](https://secure.php.net/manual/en/function.PDOStatement-setFetchMode.php)
+     * @param int $fetchMode the result fetch mode. Please refer to [PHP manual](https://www.php.net/manual/en/function.PDOStatement-setFetchMode.php)
      * for valid fetch modes. If this parameter is null, the value set in [[fetchMode]] will be used.
      * @return mixed the method execution result
      * @throws Exception if the query causes any problem
@@ -1195,7 +1195,7 @@ protected function queryInternal($method, $fetchMode = null)
      * Returns the cache key for the query.
      *
      * @param string $method method of PDOStatement to be called
-     * @param int $fetchMode the result fetch mode. Please refer to [PHP manual](https://secure.php.net/manual/en/function.PDOStatement-setFetchMode.php)
+     * @param int $fetchMode the result fetch mode. Please refer to [PHP manual](https://www.php.net/manual/en/function.PDOStatement-setFetchMode.php)
      * for valid fetch modes.
      * @return array the cache key
      * @since 2.0.16
diff --git a/framework/db/Connection.php b/framework/db/Connection.php
index c31a8689f47..74b954ffa43 100644
--- a/framework/db/Connection.php
+++ b/framework/db/Connection.php
@@ -15,11 +15,11 @@
 use yii\caching\CacheInterface;
 
 /**
- * Connection represents a connection to a database via [PDO](https://secure.php.net/manual/en/book.pdo.php).
+ * Connection represents a connection to a database via [PDO](https://www.php.net/manual/en/book.pdo.php).
  *
  * Connection works together with [[Command]], [[DataReader]] and [[Transaction]]
  * to provide data access to various DBMS in a common set of APIs. They are a thin wrapper
- * of the [PDO PHP extension](https://secure.php.net/manual/en/book.pdo.php).
+ * of the [PDO PHP extension](https://www.php.net/manual/en/book.pdo.php).
  *
  * Connection supports database replication and read-write splitting. In particular, a Connection component
  * can be configured with multiple [[masters]] and [[slaves]]. It will do load balancing and failover by choosing
@@ -154,10 +154,10 @@ class Connection extends Component
 
     /**
      * @var string the Data Source Name, or DSN, contains the information required to connect to the database.
-     * Please refer to the [PHP manual](https://secure.php.net/manual/en/pdo.construct.php) on
+     * Please refer to the [PHP manual](https://www.php.net/manual/en/pdo.construct.php) on
      * the format of the DSN string.
      *
-     * For [SQLite](https://secure.php.net/manual/en/ref.pdo-sqlite.connection.php) you may use a [path alias](guide:concept-aliases)
+     * For [SQLite](https://www.php.net/manual/en/ref.pdo-sqlite.connection.php) you may use a [path alias](guide:concept-aliases)
      * for specifying the database path, e.g. `sqlite:@app/data/db.sql`.
      *
      * @see charset
@@ -174,7 +174,7 @@ class Connection extends Component
     /**
      * @var array PDO attributes (name => value) that should be set when calling [[open()]]
      * to establish a DB connection. Please refer to the
-     * [PHP manual](https://secure.php.net/manual/en/pdo.setattribute.php) for
+     * [PHP manual](https://www.php.net/manual/en/pdo.setattribute.php) for
      * details about available attributes.
      */
     public $attributes;
@@ -499,7 +499,7 @@ public function getIsActive()
      * Use 0 to indicate that the cached data will never expire.
      * @param \yii\caching\Dependency $dependency the cache dependency associated with the cached query results.
      * @return mixed the return result of the callable
-     * @throws \Exception|\Throwable if there is any exception during query
+     * @throws \Exception if there is any exception during query
      * @see enableQueryCache
      * @see queryCache
      * @see noCache()
@@ -540,7 +540,7 @@ public function cache(callable $callable, $duration = null, $dependency = null)
      * @param callable $callable a PHP callable that contains DB queries which should not use query cache.
      * The signature of the callable is `function (Connection $db)`.
      * @return mixed the return result of the callable
-     * @throws \Exception|\Throwable if there is any exception during query
+     * @throws \Exception if there is any exception during query
      * @see enableQueryCache
      * @see queryCache
      * @see cache()
@@ -802,7 +802,7 @@ public function beginTransaction($isolationLevel = null)
      * @param callable $callback a valid PHP callback that performs the job. Accepts connection instance as parameter.
      * @param string|null $isolationLevel The isolation level to use for this transaction.
      * See [[Transaction::begin()]] for details.
-     * @throws \Exception|\Throwable if there is any exception during query. In this case the transaction will be rolled back.
+     * @throws \Exception if there is any exception during query. In this case the transaction will be rolled back.
      * @return mixed result of callback function
      */
     public function transaction(callable $callback, $isolationLevel = null)
@@ -923,7 +923,7 @@ public function getTableSchema($name, $refresh = false)
      * Returns the ID of the last inserted row or sequence value.
      * @param string $sequenceName name of the sequence object (required by some DBMS)
      * @return string the row ID of the last row inserted, or the last value retrieved from the sequence object
-     * @see https://secure.php.net/manual/en/pdo.lastinsertid.php
+     * @see https://www.php.net/manual/en/pdo.lastinsertid.php
      */
     public function getLastInsertID($sequenceName = '')
     {
@@ -935,7 +935,7 @@ public function getLastInsertID($sequenceName = '')
      * Note that if the parameter is not a string, it will be returned without change.
      * @param string $value string to be quoted
      * @return string the properly quoted string
-     * @see https://secure.php.net/manual/en/pdo.quote.php
+     * @see https://www.php.net/manual/en/pdo.quote.php
      */
     public function quoteValue($value)
     {
@@ -1116,7 +1116,7 @@ public function getMaster()
      * @param callable $callback a PHP callable to be executed by this method. Its signature is
      * `function (Connection $db)`. Its return value will be returned by this method.
      * @return mixed the return value of the callback
-     * @throws \Exception|\Throwable if there is any exception thrown from the callback
+     * @throws \Exception if there is any exception thrown from the callback
      */
     public function useMaster(callable $callback)
     {
diff --git a/framework/db/DataReader.php b/framework/db/DataReader.php
index 50a2d7dadc3..a8c875606d1 100644
--- a/framework/db/DataReader.php
+++ b/framework/db/DataReader.php
@@ -37,7 +37,7 @@
  * Doing it the second time will throw an exception.
  *
  * It is possible to use a specific mode of data fetching by setting
- * [[fetchMode]]. See the [PHP manual](https://secure.php.net/manual/en/function.PDOStatement-setFetchMode.php)
+ * [[fetchMode]]. See the [PHP manual](https://www.php.net/manual/en/function.PDOStatement-setFetchMode.php)
  * for more details about possible fetch mode.
  *
  * @property-read int $columnCount The number of columns in the result set. This property is read-only.
@@ -80,7 +80,7 @@ public function __construct(Command $command, $config = [])
      * should match the case of the column, as returned by the driver.
      * @param mixed $value Name of the PHP variable to which the column will be bound.
      * @param int $dataType Data type of the parameter
-     * @see https://secure.php.net/manual/en/function.PDOStatement-bindColumn.php
+     * @see https://www.php.net/manual/en/function.PDOStatement-bindColumn.php
      */
     public function bindColumn($column, &$value, $dataType = null)
     {
@@ -95,7 +95,7 @@ public function bindColumn($column, &$value, $dataType = null)
      * Set the default fetch mode for this statement.
      *
      * @param int $mode fetch mode
-     * @see https://secure.php.net/manual/en/function.PDOStatement-setFetchMode.php
+     * @see https://www.php.net/manual/en/function.PDOStatement-setFetchMode.php
      */
     public function setFetchMode($mode)
     {
diff --git a/framework/db/Exception.php b/framework/db/Exception.php
index ae16407f85d..1fb68df43da 100644
--- a/framework/db/Exception.php
+++ b/framework/db/Exception.php
@@ -17,7 +17,7 @@ class Exception extends \yii\base\Exception
 {
     /**
      * @var array the error info provided by a PDO exception. This is the same as returned
-     * by [PDO::errorInfo](https://secure.php.net/manual/en/pdo.errorinfo.php).
+     * by [PDO::errorInfo](https://www.php.net/manual/en/pdo.errorinfo.php).
      */
     public $errorInfo = [];
 
diff --git a/framework/db/JsonExpression.php b/framework/db/JsonExpression.php
index 0446ae87cc2..36b46030ae5 100644
--- a/framework/db/JsonExpression.php
+++ b/framework/db/JsonExpression.php
@@ -80,7 +80,7 @@ public function getType()
     /**
      * Specify data which should be serialized to JSON
      *
-     * @link https://secure.php.net/manual/en/jsonserializable.jsonserialize.php
+     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
      * @return mixed data which can be serialized by <b>json_encode</b>,
      * which is a value of any type other than a resource.
      * @since 2.0.14.2
diff --git a/framework/db/Migration.php b/framework/db/Migration.php
index a144d4a43f4..a8e2264f2c7 100644
--- a/framework/db/Migration.php
+++ b/framework/db/Migration.php
@@ -104,7 +104,7 @@ protected function getDb()
     /**
      * This method contains the logic to be executed when applying this migration.
      * Child classes may override this method to provide actual migration logic.
-     * @return bool return a false value to indicate the migration fails
+     * @return false|void|mixed return a false value to indicate the migration fails
      * and should not proceed further. All other return values mean the migration succeeds.
      */
     public function up()
@@ -133,7 +133,7 @@ public function up()
      * This method contains the logic to be executed when removing this migration.
      * The default implementation throws an exception indicating the migration cannot be removed.
      * Child classes may override this method if the corresponding migrations can be removed.
-     * @return bool return a false value to indicate the migration fails
+     * @return false|void|mixed return a false value to indicate the migration fails
      * and should not proceed further. All other return values mean the migration succeeds.
      */
     public function down()
@@ -177,7 +177,7 @@ private function printException($e)
      * Note: Not all DBMS support transactions. And some DB queries cannot be put into a transaction. For some examples,
      * please refer to [implicit commit](http://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html).
      *
-     * @return bool return a false value to indicate the migration fails
+     * @return false|void|mixed return a false value to indicate the migration fails
      * and should not proceed further. All other return values mean the migration succeeds.
      */
     public function safeUp()
@@ -194,7 +194,7 @@ public function safeUp()
      * Note: Not all DBMS support transactions. And some DB queries cannot be put into a transaction. For some examples,
      * please refer to [implicit commit](http://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html).
      *
-     * @return bool return a false value to indicate the migration fails
+     * @return false|void|mixed return a false value to indicate the migration fails
      * and should not proceed further. All other return values mean the migration succeeds.
      */
     public function safeDown()
diff --git a/framework/db/PdoValue.php b/framework/db/PdoValue.php
index 806eaa3bf31..3a0ce6f689c 100644
--- a/framework/db/PdoValue.php
+++ b/framework/db/PdoValue.php
@@ -16,9 +16,9 @@
  * [':name' => 'John', ':profile' => new PdoValue($profile, \PDO::PARAM_LOB)]`.
  * ```
  *
- * To see possible types, check [PDO::PARAM_* constants](https://secure.php.net/manual/en/pdo.constants.php).
+ * To see possible types, check [PDO::PARAM_* constants](https://www.php.net/manual/en/pdo.constants.php).
  *
- * @see https://secure.php.net/manual/en/pdostatement.bindparam.php
+ * @see https://www.php.net/manual/en/pdostatement.bindparam.php
  * @author Dmytro Naumenko <d.naumenko.a@gmail.com>
  * @since 2.0.14
  */
@@ -30,7 +30,7 @@ final class PdoValue implements ExpressionInterface
     private $value;
     /**
      * @var int One of PDO_PARAM_* constants
-     * @see https://secure.php.net/manual/en/pdo.constants.php
+     * @see https://www.php.net/manual/en/pdo.constants.php
      */
     private $type;
 
diff --git a/framework/db/Query.php b/framework/db/Query.php
index 1892c8a272e..d23893b3bc7 100644
--- a/framework/db/Query.php
+++ b/framework/db/Query.php
@@ -452,7 +452,7 @@ public function exists($db = null)
      * @param string|ExpressionInterface $selectExpression
      * @param Connection|null $db the database connection used to execute the query.
      * @return bool|string|null
-     * @throws \Throwable if can't create command
+     * @throws \Exception if can't create command
      */
     protected function queryScalar($selectExpression, $db)
     {
diff --git a/framework/db/QueryBuilder.php b/framework/db/QueryBuilder.php
index c6f74872313..bb032d78830 100644
--- a/framework/db/QueryBuilder.php
+++ b/framework/db/QueryBuilder.php
@@ -73,7 +73,7 @@ class QueryBuilder extends \yii\base\BaseObject
      *
      * In case you want to add custom conditions support, use the [[setConditionClasses()]] method.
      *
-     * @see setConditonClasses()
+     * @see setConditionClasses()
      * @see defaultConditionClasses()
      * @since 2.0.14
      */
@@ -159,7 +159,7 @@ protected function defaultConditionClasses()
      * default expression builders for this query builder. See [[expressionBuilders]] docs for details.
      *
      * @return array
-     * @see $expressionBuilders
+     * @see expressionBuilders
      * @since 2.0.14
      */
     protected function defaultExpressionBuilders()
diff --git a/framework/db/QueryTrait.php b/framework/db/QueryTrait.php
index 46527dc9f1c..9f6b06434b2 100644
--- a/framework/db/QueryTrait.php
+++ b/framework/db/QueryTrait.php
@@ -39,8 +39,8 @@ trait QueryTrait
     /**
      * @var array|null how to sort the query results. This is used to construct the ORDER BY clause in a SQL statement.
      * The array keys are the columns to be sorted by, and the array values are the corresponding sort directions which
-     * can be either [SORT_ASC](https://secure.php.net/manual/en/array.constants.php#constant.sort-asc)
-     * or [SORT_DESC](https://secure.php.net/manual/en/array.constants.php#constant.sort-desc).
+     * can be either [SORT_ASC](https://www.php.net/manual/en/array.constants.php#constant.sort-asc)
+     * or [SORT_DESC](https://www.php.net/manual/en/array.constants.php#constant.sort-desc).
      * The array may also contain [[ExpressionInterface]] objects. If that is the case, the expressions
      * will be converted into strings without any change.
      */
diff --git a/framework/db/Schema.php b/framework/db/Schema.php
index 120141d1120..71a6ea57759 100644
--- a/framework/db/Schema.php
+++ b/framework/db/Schema.php
@@ -256,7 +256,7 @@ public function getQueryBuilder()
      * Determines the PDO type for the given PHP data value.
      * @param mixed $data the data whose PDO type is to be determined
      * @return int the PDO type
-     * @see https://secure.php.net/manual/en/pdo.constants.php
+     * @see https://www.php.net/manual/en/pdo.constants.php
      */
     public function getPdoType($data)
     {
@@ -361,7 +361,7 @@ public function findUniqueIndexes($table)
      * @param string $sequenceName name of the sequence object (required by some DBMS)
      * @return string the row ID of the last row inserted, or the last value retrieved from the sequence object
      * @throws InvalidCallException if the DB connection is not active
-     * @see https://secure.php.net/manual/en/function.PDO-lastInsertId.php
+     * @see https://www.php.net/manual/en/function.PDO-lastInsertId.php
      */
     public function getLastInsertID($sequenceName = '')
     {
@@ -452,7 +452,7 @@ public function insert($table, $columns)
      * Note that if the parameter is not a string, it will be returned without change.
      * @param string $str string to be quoted
      * @return string the properly quoted string
-     * @see https://secure.php.net/manual/en/function.PDO-quote.php
+     * @see https://www.php.net/manual/en/function.PDO-quote.php
      */
     public function quoteValue($str)
     {
@@ -480,7 +480,7 @@ public function quoteValue($str)
     public function quoteTableName($name)
     {
 
-        if (strpos($name, '(') === 0 && strpos($name, ')') === strlen($name) - 1) {
+        if (strncmp($name, '(', 1) === 0 && strpos($name, ')') === strlen($name) - 1) {
             return $name;
         }
         if (strpos($name, '{{') !== false) {
diff --git a/framework/db/Transaction.php b/framework/db/Transaction.php
index 7a119d1171e..87e72dd18d1 100644
--- a/framework/db/Transaction.php
+++ b/framework/db/Transaction.php
@@ -36,7 +36,7 @@
  * ```
  *
  * > Note: in the above code we have two catch-blocks for compatibility
- * > with PHP 5.x and PHP 7.x. `\Exception` implements the [`\Throwable` interface](https://secure.php.net/manual/en/class.throwable.php)
+ * > with PHP 5.x and PHP 7.x. `\Exception` implements the [`\Throwable` interface](https://www.php.net/manual/en/class.throwable.php)
  * > since PHP 7.0, so you can skip the part with `\Exception` if your app uses only PHP 7.0 and higher.
  *
  * @property-read bool $isActive Whether this transaction is active. Only an active transaction can
diff --git a/framework/db/cubrid/Schema.php b/framework/db/cubrid/Schema.php
index a487235fdd6..73a06c4d130 100644
--- a/framework/db/cubrid/Schema.php
+++ b/framework/db/cubrid/Schema.php
@@ -326,7 +326,7 @@ protected function loadColumnSchema($info)
      * Determines the PDO type for the given PHP data value.
      * @param mixed $data the data whose PDO type is to be determined
      * @return int the PDO type
-     * @see https://secure.php.net/manual/en/pdo.constants.php
+     * @see https://www.php.net/manual/en/pdo.constants.php
      */
     public function getPdoType($data)
     {
diff --git a/framework/db/oci/Schema.php b/framework/db/oci/Schema.php
index 7b1cc80997b..cba0b206a76 100644
--- a/framework/db/oci/Schema.php
+++ b/framework/db/oci/Schema.php
@@ -372,7 +372,7 @@ protected function getTableSequenceName($tableName)
 
     /**
      * @Overrides method in class 'Schema'
-     * @see https://secure.php.net/manual/en/function.PDO-lastInsertId.php -> Oracle does not support this
+     * @see https://www.php.net/manual/en/function.PDO-lastInsertId.php -> Oracle does not support this
      *
      * Returns the ID of the last inserted row or sequence value.
      * @param string $sequenceName name of the sequence object (required by some DBMS)
@@ -421,7 +421,7 @@ protected function createColumn($column)
                     if ($defaultValue !== null) {
                         if (
                             strlen($defaultValue) > 2
-                            && strpos($defaultValue, "'") === 0
+                            && strncmp($defaultValue, "'", 1) === 0
                             && substr($defaultValue, -1) === "'"
                         ) {
                             $defaultValue = substr($defaultValue, 1, -1);
diff --git a/framework/db/pgsql/Schema.php b/framework/db/pgsql/Schema.php
index 8f0f1e7d42a..7f6b9d018cc 100644
--- a/framework/db/pgsql/Schema.php
+++ b/framework/db/pgsql/Schema.php
@@ -443,7 +443,7 @@ public function findUniqueIndexes($table)
                 $row = array_change_key_case($row, CASE_LOWER);
             }
             $column = $row['columnname'];
-            if (strpos($column, '"') === 0) {
+            if (strncmp($column, '"', 1) === 0) {
                 // postgres will quote names that are not lowercase-only
                 // https://github.com/yiisoft/yii2/issues/10613
                 $column = substr($column, 1, -1);
diff --git a/framework/di/Container.php b/framework/di/Container.php
index 19678348dee..8917754016b 100644
--- a/framework/di/Container.php
+++ b/framework/di/Container.php
@@ -26,8 +26,8 @@
  * Container supports constructor injection as well as property injection.
  *
  * To use Container, you first need to set up the class dependencies by calling [[set()]].
- * You then call [[get()]] to create a new class object. Container will automatically instantiate
- * dependent objects, inject them into the object being created, configure and finally return the newly created object.
+ * You then call [[get()]] to create a new class object. The Container will automatically instantiate
+ * dependent objects, inject them into the object being created, configure, and finally return the newly created object.
  *
  * By default, [[\Yii::$container]] refers to a Container instance which is used by [[\Yii::createObject()]]
  * to create new object instances. You may use this method to replace the `new` operator
@@ -146,7 +146,7 @@ class Container extends Component
      * In this case, the constructor parameters and object configurations will be used
      * only if the class is instantiated the first time.
      *
-     * @param string|Instance $class the class Instance, name or an alias name (e.g. `foo`) that was previously
+     * @param string|Instance $class the class Instance, name, or an alias name (e.g. `foo`) that was previously
      * registered via [[set()]] or [[setSingleton()]].
      * @param array $params a list of constructor parameter values. Use one of two definitions:
      *  - Parameters as name-value pairs, for example: `['posts' => PostRepository::class]`.
@@ -296,7 +296,7 @@ public function setSingleton($class, $definition = [], array $params = [])
     /**
      * Returns a value indicating whether the container has the definition of the specified name.
      * @param string $class class name, interface name or alias name
-     * @return bool whether the container has the definition of the specified name..
+     * @return bool Whether the container has the definition of the specified name.
      * @see set()
      */
     public function has($class)
@@ -606,8 +606,8 @@ protected function resolveDependencies($dependencies, $reflection = null)
     /**
      * Invoke a callback with resolving dependencies in parameters.
      *
-     * This methods allows invoking a callback and let type hinted parameter names to be
-     * resolved as objects of the Container. It additionally allow calling function using named parameters.
+     * This method allows invoking a callback and let type hinted parameter names to be
+     * resolved as objects of the Container. It additionally allows calling function using named parameters.
      *
      * For example, the following callback may be invoked using the Container to resolve the formatter dependency:
      *
diff --git a/framework/di/Instance.php b/framework/di/Instance.php
index bea4fe8cdd4..62fb50e1d2e 100644
--- a/framework/di/Instance.php
+++ b/framework/di/Instance.php
@@ -188,7 +188,7 @@ public function get($container = null)
      * @param array $state
      * @return Instance
      * @throws InvalidConfigException when $state property does not contain `id` parameter
-     * @see var_export()
+     * @see https://www.php.net/manual/en/function.var-export.php
      * @since 2.0.12
      */
     public static function __set_state($state)
diff --git a/framework/filters/AccessRule.php b/framework/filters/AccessRule.php
index aece5ccf68a..8cb4fca24b7 100644
--- a/framework/filters/AccessRule.php
+++ b/framework/filters/AccessRule.php
@@ -62,8 +62,8 @@ class AccessRule extends Component
      * Note that it is preferred to check for permissions instead.
      *
      * If this property is not set or empty, it means this rule applies regardless of roles.
-     * @see $permissions
-     * @see $roleParams
+     * @see permissions
+     * @see roleParams
      */
     public $roles;
     /**
@@ -72,8 +72,8 @@ class AccessRule extends Component
      *
      * If this property is not set or empty, it means this rule applies regardless of permissions.
      * @since 2.0.12
-     * @see $roles
-     * @see $roleParams
+     * @see roles
+     * @see roleParams
      */
     public $permissions;
     /**
@@ -106,7 +106,7 @@ class AccessRule extends Component
      *
      * A reference to the [[AccessRule]] instance will be passed to the closure as the first parameter.
      *
-     * @see $roles
+     * @see roles
      * @since 2.0.12
      */
     public $roleParams = [];
diff --git a/framework/filters/HttpCache.php b/framework/filters/HttpCache.php
index 4964e59be75..2a6f6e32a4c 100644
--- a/framework/filters/HttpCache.php
+++ b/framework/filters/HttpCache.php
@@ -91,10 +91,10 @@ class HttpCache extends ActionFilter
      */
     public $cacheControlHeader = 'public, max-age=3600';
     /**
-     * @var string the name of the cache limiter to be set when [session_cache_limiter()](https://secure.php.net/manual/en/function.session-cache-limiter.php)
+     * @var string the name of the cache limiter to be set when [session_cache_limiter()](https://www.php.net/manual/en/function.session-cache-limiter.php)
      * is called. The default value is an empty string, meaning turning off automatic sending of cache headers entirely.
      * You may set this property to be `public`, `private`, `private_no_expire`, and `nocache`.
-     * Please refer to [session_cache_limiter()](https://secure.php.net/manual/en/function.session-cache-limiter.php)
+     * Please refer to [session_cache_limiter()](https://www.php.net/manual/en/function.session-cache-limiter.php)
      * for detailed explanation of these values.
      *
      * If this property is `null`, then `session_cache_limiter()` will not be called. As a result,
diff --git a/framework/filters/PageCache.php b/framework/filters/PageCache.php
index 774e8dbd479..1930aa0873f 100644
--- a/framework/filters/PageCache.php
+++ b/framework/filters/PageCache.php
@@ -124,7 +124,6 @@ class PageCache extends ActionFilter implements DynamicContentAwareInterface
      * @var bool|array a boolean value indicating whether to cache all cookies, or an array of
      * cookie names indicating which cookies can be cached. Be very careful with caching cookies, because
      * it may leak sensitive or private data stored in cookies to unwanted users.
-     * @see insertResponseCollectionIntoData()
      * @since 2.0.4
      */
     public $cacheCookies = false;
@@ -132,7 +131,6 @@ class PageCache extends ActionFilter implements DynamicContentAwareInterface
      * @var bool|array a boolean value indicating whether to cache all HTTP headers, or an array of
      * HTTP header names (case-insensitive) indicating which HTTP headers can be cached.
      * Note if your HTTP headers contain sensitive information, you should white-list which headers can be cached.
-     * @see insertResponseCollectionIntoData()
      * @since 2.0.4
      */
     public $cacheHeaders = true;
diff --git a/framework/filters/auth/HttpBasicAuth.php b/framework/filters/auth/HttpBasicAuth.php
index 8ba40e0bf73..546d0e628e6 100644
--- a/framework/filters/auth/HttpBasicAuth.php
+++ b/framework/filters/auth/HttpBasicAuth.php
@@ -37,7 +37,7 @@
  *             'class' => \yii\filters\auth\HttpBasicAuth::class,
  *             'auth' => function ($username, $password) {
  *                 $user = User::find()->where(['username' => $username])->one();
- *                 if ($user->verifyPassword($password)) {
+ *                 if ($user && $user->validatePassword($password)) {
  *                     return $user;
  *                 }
  *                 return null;
diff --git a/framework/helpers/BaseArrayHelper.php b/framework/helpers/BaseArrayHelper.php
index 8bc7ef2bc0b..dcd28657c9e 100644
--- a/framework/helpers/BaseArrayHelper.php
+++ b/framework/helpers/BaseArrayHelper.php
@@ -70,6 +70,8 @@ public static function toArray($object, $properties = [], $recursive = true)
             }
 
             return $object;
+        } elseif ($object instanceof \DateTimeInterface) {
+            return (array)$object;
         } elseif (is_object($object)) {
             if (!empty($properties)) {
                 $className = get_class($object);
@@ -615,7 +617,7 @@ public static function keyExists($key, $array, $caseSensitive = true)
     {
         if ($caseSensitive) {
             // Function `isset` checks key faster but skips `null`, `array_key_exists` handles this case
-            // https://secure.php.net/manual/en/function.array-key-exists.php#107786
+            // https://www.php.net/manual/en/function.array-key-exists.php#107786
             if (is_array($array) && (isset($array[$key]) || array_key_exists($key, $array))) {
                 return true;
             }
@@ -647,7 +649,7 @@ public static function keyExists($key, $array, $caseSensitive = true)
      * When sorting by multiple keys with different sorting directions, use an array of sorting directions.
      * @param int|array $sortFlag the PHP sort flag. Valid values include
      * `SORT_REGULAR`, `SORT_NUMERIC`, `SORT_STRING`, `SORT_LOCALE_STRING`, `SORT_NATURAL` and `SORT_FLAG_CASE`.
-     * Please refer to [PHP manual](https://secure.php.net/manual/en/function.sort.php)
+     * Please refer to [PHP manual](https://www.php.net/manual/en/function.sort.php)
      * for more details. When sorting by multiple keys with different sort flags, use an array of sort flags.
      * @throws InvalidArgumentException if the $direction or $sortFlag parameters do not have
      * correct number of elements as that of $key.
@@ -698,7 +700,7 @@ public static function multisort(&$array, $key, $direction = SORT_ASC, $sortFlag
      * @param string $charset the charset that the data is using. If not set,
      * [[\yii\base\Application::charset]] will be used.
      * @return array the encoded data
-     * @see https://secure.php.net/manual/en/function.htmlspecialchars.php
+     * @see https://www.php.net/manual/en/function.htmlspecialchars.php
      */
     public static function htmlEncode($data, $valuesOnly = true, $charset = null)
     {
@@ -731,7 +733,7 @@ public static function htmlEncode($data, $valuesOnly = true, $charset = null)
      * @param bool $valuesOnly whether to decode array values only. If false,
      * both the array keys and array values will be decoded.
      * @return array the decoded data
-     * @see https://secure.php.net/manual/en/function.htmlspecialchars-decode.php
+     * @see https://www.php.net/manual/en/function.htmlspecialchars-decode.php
      */
     public static function htmlDecode($data, $valuesOnly = true)
     {
@@ -829,14 +831,14 @@ public static function isIndexed($array, $consecutive = false)
     /**
      * Check whether an array or [[Traversable]] contains an element.
      *
-     * This method does the same as the PHP function [in_array()](https://secure.php.net/manual/en/function.in-array.php)
+     * This method does the same as the PHP function [in_array()](https://www.php.net/manual/en/function.in-array.php)
      * but additionally works for objects that implement the [[Traversable]] interface.
      * @param mixed $needle The value to look for.
      * @param array|Traversable $haystack The set of values to search.
      * @param bool $strict Whether to enable strict (`===`) comparison.
      * @return bool `true` if `$needle` was found in `$haystack`, `false` otherwise.
      * @throws InvalidArgumentException if `$haystack` is neither traversable nor an array.
-     * @see https://secure.php.net/manual/en/function.in-array.php
+     * @see https://www.php.net/manual/en/function.in-array.php
      * @since 2.0.7
      */
     public static function isIn($needle, $haystack, $strict = false)
@@ -859,11 +861,11 @@ public static function isIn($needle, $haystack, $strict = false)
     /**
      * Checks whether a variable is an array or [[Traversable]].
      *
-     * This method does the same as the PHP function [is_array()](https://secure.php.net/manual/en/function.is-array.php)
+     * This method does the same as the PHP function [is_array()](https://www.php.net/manual/en/function.is-array.php)
      * but additionally works on objects that implement the [[Traversable]] interface.
      * @param mixed $var The variable being evaluated.
      * @return bool whether $var can be traversed via foreach
-     * @see https://secure.php.net/manual/en/function.is-array.php
+     * @see https://www.php.net/manual/en/function.is-array.php
      * @since 2.0.8
      */
     public static function isTraversable($var)
@@ -952,7 +954,7 @@ public static function filter($array, $filters)
                 continue;
             }
 
-            if (is_string($filter) && strpos($filter, '!') === 0) {
+            if (is_string($filter) && strncmp($filter, '!', 1) === 0) {
                 $excludeFilters[] = substr($filter, 1);
                 continue;
             }
diff --git a/framework/helpers/BaseFileHelper.php b/framework/helpers/BaseFileHelper.php
index b1bf1c19e52..8dd20649e76 100644
--- a/framework/helpers/BaseFileHelper.php
+++ b/framework/helpers/BaseFileHelper.php
@@ -99,13 +99,12 @@ public static function normalizePath($path, $ds = DIRECTORY_SEPARATOR)
      * "path/to/zh-CN/view.php". If the file is not found, it will try a fallback with just a language code that is
      * "zh" i.e. "path/to/zh/view.php". If it is not found as well the original file will be returned.
      *
-     * If the target and the source language codes are the same,
-     * the original file will be returned.
+     * If the target and the source language codes are the same, the original file will be returned.
      *
      * @param string $file the original file
-     * @param string $language the target language that the file should be localized to.
+     * @param string|null $language the target language that the file should be localized to.
      * If not set, the value of [[\yii\base\Application::language]] will be used.
-     * @param string $sourceLanguage the language that the original file is in.
+     * @param string|null $sourceLanguage the language that the original file is in.
      * If not set, the value of [[\yii\base\Application::sourceLanguage]] will be used.
      * @return string the matching localized file, or the original file if the localized version is not found.
      * If the target and the source language codes are the same, the original file will be returned.
@@ -138,11 +137,11 @@ public static function localize($file, $language = null, $sourceLanguage = null)
     /**
      * Determines the MIME type of the specified file.
      * This method will first try to determine the MIME type based on
-     * [finfo_open](https://secure.php.net/manual/en/function.finfo-open.php). If the `fileinfo` extension is not installed,
+     * [finfo_open](https://www.php.net/manual/en/function.finfo-open.php). If the `fileinfo` extension is not installed,
      * it will fall back to [[getMimeTypeByExtension()]] when `$checkExtension` is true.
      * @param string $file the file name.
-     * @param string $magicFile name of the optional magic database file (or alias), usually something like `/path/to/magic.mime`.
-     * This will be passed as the second parameter to [finfo_open()](https://secure.php.net/manual/en/function.finfo-open.php)
+     * @param string|null $magicFile name of the optional magic database file (or alias), usually something like `/path/to/magic.mime`.
+     * This will be passed as the second parameter to [finfo_open()](https://www.php.net/manual/en/function.finfo-open.php)
      * when the `fileinfo` extension is installed. If the MIME type is being determined based via [[getMimeTypeByExtension()]]
      * and this is null, it will use the file specified by [[mimeMagicFile]].
      * @param bool $checkExtension whether to use the file extension to determine the MIME type in case
@@ -180,7 +179,7 @@ public static function getMimeType($file, $magicFile = null, $checkExtension = t
      * Determines the MIME type based on the extension name of the specified file.
      * This method will use a local map between extension names and MIME types.
      * @param string $file the file name.
-     * @param string $magicFile the path (or alias) of the file that contains all available MIME type information.
+     * @param string|null $magicFile the path (or alias) of the file that contains all available MIME type information.
      * If this is not set, the file specified by [[mimeMagicFile]] will be used.
      * @return string|null the MIME type. Null is returned if the MIME type cannot be determined.
      */
@@ -202,7 +201,7 @@ public static function getMimeTypeByExtension($file, $magicFile = null)
      * Determines the extensions by given MIME type.
      * This method will use a local map between extension names and MIME types.
      * @param string $mimeType file MIME type.
-     * @param string $magicFile the path (or alias) of the file that contains all available MIME type information.
+     * @param string|null $magicFile the path (or alias) of the file that contains all available MIME type information.
      * If this is not set, the file specified by [[mimeMagicFile]] will be used.
      * @return array the extensions corresponding to the specified MIME type
      */
@@ -503,13 +502,14 @@ public static function findFiles($dir, $options = [])
      * @param array $options options for directory searching. Valid options are:
      *
      * - `filter`: callback, a PHP callback that is called for each directory or file.
-     *   The signature of the callback should be: `function ($path)`, where `$path` refers the full path to be filtered.
-     *   The callback can return one of the following values:
+     *   The signature of the callback should be: `function (string $path): bool`, where `$path` refers
+     *   the full path to be filtered. The callback can return one of the following values:
      *
      *   * `true`: the directory will be returned
      *   * `false`: the directory will NOT be returned
      *
      * - `recursive`: boolean, whether the files under the subdirectories should also be looked for. Defaults to `true`.
+     * See [[findFiles()]] for more options.
      * @return array directories found under the directory, in no particular order. Ordering depends on the files system used.
      * @throws InvalidArgumentException if the dir is invalid.
      * @since 2.0.14
@@ -539,6 +539,8 @@ public static function findDirectories($dir, $options = [])
 
     /**
      * @param string $dir
+     * @param array $options
+     * @return array
      */
     private static function setBasePath($dir, $options)
     {
@@ -553,6 +555,8 @@ private static function setBasePath($dir, $options)
 
     /**
      * @param string $dir
+     * @return resource
+     * @throws InvalidArgumentException if unable to open directory
      */
     private static function openDir($dir)
     {
@@ -565,13 +569,15 @@ private static function openDir($dir)
 
     /**
      * @param string $dir
+     * @return string
+     * @throws InvalidArgumentException if directory not exists
      */
     private static function clearDir($dir)
     {
         if (!is_dir($dir)) {
             throw new InvalidArgumentException("The dir argument must be a directory: $dir");
         }
-        return rtrim($dir, DIRECTORY_SEPARATOR);
+        return rtrim($dir, '\/');
     }
 
     /**
@@ -697,7 +703,7 @@ private static function matchBasename($baseName, $pattern, $firstWildcard, $flag
     private static function matchPathname($path, $basePath, $pattern, $firstWildcard, $flags)
     {
         // match with FNM_PATHNAME; the pattern has base implicitly in front of it.
-        if (strpos($pattern, '/') === 0) {
+        if (strncmp($pattern, '/', 1) === 0) {
             $pattern = StringHelper::byteSubstr($pattern, 1, StringHelper::byteLength($pattern));
             if ($firstWildcard !== false && $firstWildcard !== 0) {
                 $firstWildcard--;
@@ -807,7 +813,7 @@ private static function parseExcludePattern($pattern, $caseSensitive)
             return $result;
         }
 
-        if (strpos($pattern, '!') === 0) {
+        if (strncmp($pattern, '!', 1) === 0) {
             $result['flags'] |= self::PATTERN_NEGATIVE;
             $pattern = StringHelper::byteSubstr($pattern, 1, StringHelper::byteLength($pattern));
         }
@@ -819,7 +825,7 @@ private static function parseExcludePattern($pattern, $caseSensitive)
             $result['flags'] |= self::PATTERN_NODIR;
         }
         $result['firstWildcard'] = self::firstWildcardInPattern($pattern);
-        if (strpos($pattern, '*') === 0 && self::firstWildcardInPattern(StringHelper::byteSubstr($pattern, 1, StringHelper::byteLength($pattern))) === false) {
+        if (strncmp($pattern, '*', 1) === 0 && self::firstWildcardInPattern(StringHelper::byteSubstr($pattern, 1, StringHelper::byteLength($pattern))) === false) {
             $result['flags'] |= self::PATTERN_ENDSWITH;
         }
         $result['pattern'] = $pattern;
diff --git a/framework/helpers/BaseFormatConverter.php b/framework/helpers/BaseFormatConverter.php
index 340f7d4447e..84417bfee04 100644
--- a/framework/helpers/BaseFormatConverter.php
+++ b/framework/helpers/BaseFormatConverter.php
@@ -91,7 +91,7 @@ class BaseFormatConverter
      *
      * Pattern constructs that are not supported by the PHP format will be removed.
      *
-     * [php date() function format]: https://secure.php.net/manual/en/function.date.php
+     * [php date() function format]: https://www.php.net/manual/en/function.date.php
      * [ICU format]: http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax
      *
      * @param string $pattern date format pattern in ICU format.
@@ -238,7 +238,7 @@ public static function convertDateIcuToPhp($pattern, $type = 'date', $locale = n
      *
      * Pattern constructs that are not supported by the ICU format will be removed.
      *
-     * [php date() function format]: https://secure.php.net/manual/en/function.date.php
+     * [php date() function format]: https://www.php.net/manual/en/function.date.php
      * [ICU format]: http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax
      *
      * Since 2.0.13 it handles escaped characters correctly.
@@ -248,7 +248,7 @@ public static function convertDateIcuToPhp($pattern, $type = 'date', $locale = n
      */
     public static function convertDatePhpToIcu($pattern)
     {
-        // https://secure.php.net/manual/en/function.date.php
+        // https://www.php.net/manual/en/function.date.php
         $result = strtr($pattern, [
             "'" => "''''",  // single `'` should be encoded as `''`, which internally should be encoded as `''''`
             // Day
@@ -497,7 +497,7 @@ public static function convertDateIcuToJui($pattern, $type = 'date', $locale = n
      *
      * Pattern constructs that are not supported by the jQuery UI format will be removed.
      *
-     * [php date() function format]: https://secure.php.net/manual/en/function.date.php
+     * [php date() function format]: https://www.php.net/manual/en/function.date.php
      * [jQuery UI date format]: http://api.jqueryui.com/datepicker/#utility-formatDate
      *
      * @param string $pattern date format pattern in php date()-function format.
@@ -505,7 +505,7 @@ public static function convertDateIcuToJui($pattern, $type = 'date', $locale = n
      */
     public static function convertDatePhpToJui($pattern)
     {
-        // https://secure.php.net/manual/en/function.date.php
+        // https://www.php.net/manual/en/function.date.php
         return strtr($pattern, [
             // Day
             'd' => 'dd',    // Day of the month, 2 digits with leading zeros 	01 to 31
diff --git a/framework/helpers/BaseHtml.php b/framework/helpers/BaseHtml.php
index 83caf53b8b0..5d89314971f 100644
--- a/framework/helpers/BaseHtml.php
+++ b/framework/helpers/BaseHtml.php
@@ -104,7 +104,7 @@ class BaseHtml
      * HTML entities in `$content` will not be further encoded.
      * @return string the encoded content
      * @see decode()
-     * @see https://secure.php.net/manual/en/function.htmlspecialchars.php
+     * @see https://www.php.net/manual/en/function.htmlspecialchars.php
      */
     public static function encode($content, $doubleEncode = true)
     {
@@ -117,7 +117,7 @@ public static function encode($content, $doubleEncode = true)
      * @param string $content the content to be decoded
      * @return string the decoded content
      * @see encode()
-     * @see https://secure.php.net/manual/en/function.htmlspecialchars-decode.php
+     * @see https://www.php.net/manual/en/function.htmlspecialchars-decode.php
      */
     public static function decode($content)
     {
@@ -1745,7 +1745,6 @@ public static function activeListBox($model, $attribute, $items, $options = [])
      * about attribute expression.
      * @param array $items the data item used to generate the checkboxes.
      * The array keys are the checkbox values, and the array values are the corresponding labels.
-     * Note that the labels will NOT be HTML-encoded, while the values will.
      * @param array $options options (name => config) for the checkbox list container tag.
      * The following options are specially handled:
      *
@@ -1787,7 +1786,6 @@ public static function activeCheckboxList($model, $attribute, $items, $options =
      * about attribute expression.
      * @param array $items the data item used to generate the radio buttons.
      * The array keys are the radio values, and the array values are the corresponding labels.
-     * Note that the labels will NOT be HTML-encoded, while the values will.
      * @param array $options options (name => config) for the radio button list container tag.
      * The following options are specially handled:
      *
@@ -1829,7 +1827,6 @@ public static function activeRadioList($model, $attribute, $items, $options = []
      * about attribute expression.
      * @param array $items the data item used to generate the input fields.
      * The array keys are the input values, and the array values are the corresponding labels.
-     * Note that the labels will NOT be HTML-encoded, while the values will.
      * @param array $options options (name => config) for the input list. The supported special options
      * depend on the input type specified by `$type`.
      * @return string the generated input list
@@ -2016,7 +2013,6 @@ public static function renderTagAttributes($attributes)
      *
      * @param array $options the options to be modified.
      * @param string|array $class the CSS class(es) to be added
-     * @see mergeCssClasses()
      * @see removeCssClass()
      */
     public static function addCssClass(&$options, $class)
diff --git a/framework/helpers/BaseInflector.php b/framework/helpers/BaseInflector.php
index 2e01e761907..4cad3f92279 100644
--- a/framework/helpers/BaseInflector.php
+++ b/framework/helpers/BaseInflector.php
@@ -287,7 +287,7 @@ class BaseInflector
     /**
      * @var mixed Either a [[\Transliterator]], or a string from which a [[\Transliterator]] can be built
      * for transliteration. Used by [[transliterate()]] when intl is available. Defaults to [[TRANSLITERATE_LOOSE]]
-     * @see https://secure.php.net/manual/en/transliterator.transliterate.php
+     * @see https://www.php.net/manual/en/transliterator.transliterate.php
      */
     public static $transliterator = self::TRANSLITERATE_LOOSE;
 
@@ -371,11 +371,11 @@ public static function camelize($word)
      */
     public static function camel2words($name, $ucwords = true)
     {
-        $label = mb_strtolower(trim(str_replace([
-            '-',
-            '_',
-            '.',
-        ], ' ', preg_replace('/(?<!\p{Lu})(\p{Lu})|(\p{Lu})(?=\p{Ll})/u', ' \0', $name))), self::encoding());
+        // Add a space before any uppercase letter preceded by a lowercase letter (xY => x Y)
+        // and any uppercase letter preceded by an uppercase letter and followed by a lowercase letter (XYz => X Yz)
+        $label = preg_replace('/(?<=\p{Ll})\p{Lu}|(?<=\p{L})\p{Lu}(?=\p{Ll})/u', ' \0', $name);
+
+        $label = mb_strtolower(trim(str_replace(['-', '_', '.'], ' ', $label)), self::encoding());
 
         return $ucwords ? StringHelper::mb_ucwords($label, self::encoding()) : $label;
     }
diff --git a/framework/helpers/BaseJson.php b/framework/helpers/BaseJson.php
index 2637653e845..ad41de7f714 100644
--- a/framework/helpers/BaseJson.php
+++ b/framework/helpers/BaseJson.php
@@ -9,8 +9,9 @@
 
 use yii\base\Arrayable;
 use yii\base\InvalidArgumentException;
-use yii\web\JsExpression;
 use yii\base\Model;
+use yii\web\JsExpression;
+use yii\web\JsonResponseFormatter;
 
 /**
  * BaseJson provides concrete implementation for [[Json]].
@@ -28,21 +29,29 @@ class BaseJson
      * In case `prettyPrint` is `null` (default) the `options` passed to `encode` functions will not be changed.
      * @since 2.0.43
      */
-    public static $prettyPrint = null;
+    public static $prettyPrint;
+
+    /**
+     * @var bool Avoids objects with zero-indexed keys to be encoded as array
+     * `Json::encode((object)['test'])` will be encoded as an object not as an array. This matches the behaviour of `json_encode()`.
+     * Defaults to false to avoid any backwards compatibility issues.
+     * Enable for single purpose: `Json::$keepObjectType = true;`
+     * @see JsonResponseFormatter documentation to enable for all JSON responses
+     * @since 2.0.44
+     */
+    public static $keepObjectType = false;
+
     /**
-     * List of JSON Error messages assigned to constant names for better handling of version differences.
-     * @var array
+     * @var array List of JSON Error messages assigned to constant names for better handling of PHP <= 5.5.
      * @since 2.0.7
      */
     public static $jsonErrorMessages = [
-        'JSON_ERROR_DEPTH' => 'The maximum stack depth has been exceeded.',
-        'JSON_ERROR_STATE_MISMATCH' => 'Invalid or malformed JSON.',
-        'JSON_ERROR_CTRL_CHAR' => 'Control character error, possibly incorrectly encoded.',
-        'JSON_ERROR_SYNTAX' => 'Syntax error.',
-        'JSON_ERROR_UTF8' => 'Malformed UTF-8 characters, possibly incorrectly encoded.', // PHP 5.3.3
-        'JSON_ERROR_RECURSION' => 'One or more recursive references in the value to be encoded.', // PHP 5.5.0
-        'JSON_ERROR_INF_OR_NAN' => 'One or more NAN or INF values in the value to be encoded', // PHP 5.5.0
-        'JSON_ERROR_UNSUPPORTED_TYPE' => 'A value of a type that cannot be encoded was given', // PHP 5.5.0
+        'JSON_ERROR_SYNTAX' => 'Syntax error',
+        'JSON_ERROR_UNSUPPORTED_TYPE' => 'Type is not supported',
+        'JSON_ERROR_DEPTH' => 'The maximum stack depth has been exceeded',
+        'JSON_ERROR_STATE_MISMATCH' => 'Invalid or malformed JSON',
+        'JSON_ERROR_CTRL_CHAR' => 'Control character error, possibly incorrectly encoded',
+        'JSON_ERROR_UTF8' => 'Malformed UTF-8 characters, possibly incorrectly encoded',
     ];
 
 
@@ -58,7 +67,7 @@ class BaseJson
      *
      * @param mixed $value the data to be encoded.
      * @param int $options the encoding options. For more details please refer to
-     * <https://secure.php.net/manual/en/function.json-encode.php>. Default is `JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE`.
+     * <https://www.php.net/manual/en/function.json-encode.php>. Default is `JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE`.
      * @return string the encoding result.
      * @throws InvalidArgumentException if there is any encoding error.
      */
@@ -126,7 +135,7 @@ public static function decode($json, $asArray = true)
     /**
      * Handles [[encode()]] and [[decode()]] errors by throwing exceptions with the respective error message.
      *
-     * @param int $lastError error code from [json_last_error()](https://secure.php.net/manual/en/function.json-last-error.php).
+     * @param int $lastError error code from [json_last_error()](https://www.php.net/manual/en/function.json-last-error.php).
      * @throws InvalidArgumentException if there is any encoding/decoding error.
      * @since 2.0.6
      */
@@ -136,15 +145,14 @@ protected static function handleJsonError($lastError)
             return;
         }
 
-        $availableErrors = [];
-        foreach (static::$jsonErrorMessages as $const => $message) {
-            if (defined($const)) {
-                $availableErrors[constant($const)] = $message;
-            }
+        if (PHP_VERSION_ID >= 50500) {
+            throw new InvalidArgumentException(json_last_error_msg(), $lastError);
         }
 
-        if (isset($availableErrors[$lastError])) {
-            throw new InvalidArgumentException($availableErrors[$lastError], $lastError);
+        foreach (static::$jsonErrorMessages as $const => $message) {
+            if (defined($const) && constant($const) === $lastError) {
+                throw new InvalidArgumentException($message, $lastError);
+            }
         }
 
         throw new InvalidArgumentException('Unknown JSON encoding/decoding error.');
@@ -159,6 +167,8 @@ protected static function handleJsonError($lastError)
      */
     protected static function processData($data, &$expressions, $expPrefix)
     {
+        $revertToObject = false;
+
         if (is_object($data)) {
             if ($data instanceof JsExpression) {
                 $token = "!{[$expPrefix=" . count($expressions) . ']}!';
@@ -179,16 +189,28 @@ protected static function processData($data, &$expressions, $expPrefix)
                 $data = $data->toArray();
             } elseif ($data instanceof \SimpleXMLElement) {
                 $data = (array) $data;
+
+                // Avoid empty elements to be returned as array.
+                // Not breaking BC because empty array was always cast to stdClass before.
+                $revertToObject = true;
             } else {
+                /*
+                 * $data type is changed to array here and its elements will be processed further
+                 * We must cast $data back to object later to keep intended dictionary type in JSON.
+                 * Revert is only done when keepObjectType flag is provided to avoid breaking BC
+                 */
+                $revertToObject = static::$keepObjectType;
+
                 $result = [];
                 foreach ($data as $name => $value) {
                     $result[$name] = $value;
                 }
                 $data = $result;
-            }
 
-            if ($data === []) {
-                return new \stdClass();
+                // Avoid empty objects to be returned as array (would break BC without keepObjectType flag)
+                if ($data === []) {
+                    $revertToObject = true;
+                }
             }
         }
 
@@ -200,11 +222,12 @@ protected static function processData($data, &$expressions, $expPrefix)
             }
         }
 
-        return $data;
+        return $revertToObject ? (object) $data : $data;
     }
 
     /**
      * Generates a summary of the validation errors.
+     *
      * @param Model|Model[] $models the model(s) whose validation errors are to be displayed.
      * @param array $options the tag options in terms of name-value pairs. The following options are specially handled:
      *
@@ -219,13 +242,14 @@ public static function errorSummary($models, $options = [])
         $showAllErrors = ArrayHelper::remove($options, 'showAllErrors', false);
         $lines = self::collectErrors($models, $showAllErrors);
 
-        return json_encode($lines);
+        return static::encode($lines);
     }
 
     /**
-     * Return array of the validation errors
+     * Return array of the validation errors.
+     *
      * @param Model|Model[] $models the model(s) whose validation errors are to be displayed.
-     * @param $showAllErrors boolean, if set to true every error message for each attribute will be shown otherwise
+     * @param bool $showAllErrors if set to true every error message for each attribute will be shown otherwise
      * only the first error message for each attribute will be shown.
      * @return array of the validation errors
      * @since 2.0.14
@@ -233,14 +257,14 @@ public static function errorSummary($models, $options = [])
     private static function collectErrors($models, $showAllErrors)
     {
         $lines = [];
+
         if (!is_array($models)) {
             $models = [$models];
         }
-
         foreach ($models as $model) {
-            $lines = array_unique(array_merge($lines, $model->getErrorSummary($showAllErrors)));
+            $lines[] = $model->getErrorSummary($showAllErrors);
         }
 
-        return $lines;
+        return array_unique(call_user_func_array('array_merge', $lines));
     }
 }
diff --git a/framework/helpers/BaseMarkdown.php b/framework/helpers/BaseMarkdown.php
index 08da9c5b0e1..9b88c725018 100644
--- a/framework/helpers/BaseMarkdown.php
+++ b/framework/helpers/BaseMarkdown.php
@@ -45,7 +45,7 @@ class BaseMarkdown
     /**
      * @var string the markdown flavor to use when none is specified explicitly.
      * Defaults to `original`.
-     * @see $flavors
+     * @see flavors
      */
     public static $defaultFlavor = 'original';
 
diff --git a/framework/helpers/BaseStringHelper.php b/framework/helpers/BaseStringHelper.php
index 8ab4db035d4..738147ea4c9 100644
--- a/framework/helpers/BaseStringHelper.php
+++ b/framework/helpers/BaseStringHelper.php
@@ -41,14 +41,14 @@ public static function byteLength($string)
      * @param int $length the desired portion length. If not specified or `null`, there will be
      * no limit on length i.e. the output will be until the end of the string.
      * @return string the extracted part of string, or FALSE on failure or an empty string.
-     * @see https://secure.php.net/manual/en/function.substr.php
+     * @see https://www.php.net/manual/en/function.substr.php
      */
     public static function byteSubstr($string, $start, $length = null)
     {
         if ($length === null) {
             $length = static::byteLength($string);
         }
- 
+
         return mb_substr($string, $start, $length, '8bit');
     }
 
@@ -63,7 +63,7 @@ public static function byteSubstr($string, $start, $length = null)
      * @param string $path A path string.
      * @param string $suffix If the name component ends in suffix this will also be cut off.
      * @return string the trailing name component of the given path.
-     * @see https://secure.php.net/manual/en/function.basename.php
+     * @see https://www.php.net/manual/en/function.basename.php
      */
     public static function basename($path, $suffix = '')
     {
@@ -71,7 +71,7 @@ public static function basename($path, $suffix = '')
         if ($len > 0 && mb_substr($path, -$len) === $suffix) {
             $path = mb_substr($path, 0, -$len);
         }
- 
+
         $path = rtrim(str_replace('\\', '/', $path), '/');
         $pos = mb_strrpos($path, '/');
         if ($pos !== false) {
@@ -88,13 +88,18 @@ public static function basename($path, $suffix = '')
      *
      * @param string $path A path string.
      * @return string the parent directory's path.
-     * @see https://secure.php.net/manual/en/function.basename.php
+     * @see https://www.php.net/manual/en/function.basename.php
      */
     public static function dirname($path)
     {
-        $pos = mb_strrpos(str_replace('\\', '/', $path), '/');
-        if ($pos !== false) {
-            return mb_substr($path, 0, $pos);
+        $normalizedPath = rtrim(
+            str_replace('\\', '/', $path),
+            '/'
+        );
+        $separatorPosition = mb_strrpos($normalizedPath, '/');
+
+        if ($separatorPosition !== false) {
+            return mb_substr($path, 0, $separatorPosition);
         }
 
         return '';
@@ -440,7 +445,7 @@ public static function matchWildcard($pattern, $string, $options = [])
      * @param string $string the string to be proceeded
      * @param string $encoding Optional, defaults to "UTF-8"
      * @return string
-     * @see https://secure.php.net/manual/en/function.ucfirst.php
+     * @see https://www.php.net/manual/en/function.ucfirst.php
      * @since 2.0.16
      */
     public static function mb_ucfirst($string, $encoding = 'UTF-8')
@@ -468,7 +473,7 @@ public static function mb_ucwords($string, $encoding = 'UTF-8')
         }
 
         $parts = preg_split('/(\s+[^\w]+\s+|^[^\w]+\s+|\s+)/u', $string, -1, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE);
-        $ucfirstEven = !trim(mb_substr($parts[0], -1, 1, $encoding));
+        $ucfirstEven = trim(mb_substr($parts[0], -1, 1, $encoding)) === '';
         foreach ($parts as $key => $value) {
             $isEven = (bool)($key % 2);
             if ($ucfirstEven === $isEven) {
diff --git a/framework/helpers/BaseUrl.php b/framework/helpers/BaseUrl.php
index 4da728e6816..fdf4f53d3d6 100644
--- a/framework/helpers/BaseUrl.php
+++ b/framework/helpers/BaseUrl.php
@@ -248,7 +248,7 @@ public static function ensureScheme($url, $scheme)
             return $url;
         }
 
-        if (strpos($url, '//') === 0) {
+        if (strncmp($url, '//', 2) === 0) {
             // e.g. //example.com/path/to/resource
             return $scheme === '' ? $url : "$scheme:$url";
         }
diff --git a/framework/helpers/Markdown.php b/framework/helpers/Markdown.php
index 8552d1320c9..c86e5e47664 100644
--- a/framework/helpers/Markdown.php
+++ b/framework/helpers/Markdown.php
@@ -23,7 +23,7 @@
  * For more details please refer to the [Markdown library documentation](https://github.com/cebe/markdown#readme).
  *
  * > Note: The Markdown library works with PHPDoc annotations so if you use it together with
- * > PHP `opcache` make sure [it does not strip comments](https://secure.php.net/manual/en/opcache.configuration.php#ini.opcache.save-comments).
+ * > PHP `opcache` make sure [it does not strip comments](https://www.php.net/manual/en/opcache.configuration.php#ini.opcache.save-comments).
  *
  * @author Carsten Brandt <mail@cebe.cc>
  * @since 2.0
diff --git a/framework/helpers/ReplaceArrayValue.php b/framework/helpers/ReplaceArrayValue.php
index a408af264d4..3ce281cd2e3 100644
--- a/framework/helpers/ReplaceArrayValue.php
+++ b/framework/helpers/ReplaceArrayValue.php
@@ -79,7 +79,7 @@ public function __construct($value)
      * @param array $state
      * @return ReplaceArrayValue
      * @throws InvalidConfigException when $state property does not contain `value` parameter
-     * @see var_export()
+     * @see https://www.php.net/manual/en/function.var-export.php
      * @since 2.0.16
      */
     public static function __set_state($state)
diff --git a/framework/helpers/UnsetArrayValue.php b/framework/helpers/UnsetArrayValue.php
index e350c86e811..331b0619a43 100644
--- a/framework/helpers/UnsetArrayValue.php
+++ b/framework/helpers/UnsetArrayValue.php
@@ -54,7 +54,7 @@ class UnsetArrayValue
      *
      * @param array $state
      * @return UnsetArrayValue
-     * @see var_export()
+     * @see https://www.php.net/manual/en/function.var-export.php
      * @since 2.0.16
      */
     public static function __set_state($state)
diff --git a/framework/i18n/Formatter.php b/framework/i18n/Formatter.php
index 27bad524d5c..cf67ddfa0f0 100644
--- a/framework/i18n/Formatter.php
+++ b/framework/i18n/Formatter.php
@@ -35,7 +35,7 @@
  * You can access that instance via `Yii::$app->formatter`.
  *
  * The Formatter class is designed to format values according to a [[locale]]. For this feature to work
- * the [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) has to be installed.
+ * the [PHP intl extension](https://www.php.net/manual/en/book.intl.php) has to be installed.
  * Most of the methods however work also if the PHP intl extension is not installed by providing
  * a fallback implementation. Without intl month and day names are in English only.
  * Note that even if the intl extension is installed, formatting date and time values for years >=2038 or <=1901
@@ -44,7 +44,7 @@
  *
  * > Note: The Formatter class is meant to be used for formatting values for display to users in different
  * > languages and time zones. If you need to format a date or time in machine readable format, use the
- * > PHP [date()](https://secure.php.net/manual/en/function.date.php) function instead.
+ * > PHP [date()](https://www.php.net/manual/en/function.date.php) function instead.
  *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @author Enrica Ruedin <e.ruedin@guggach.com>
@@ -94,7 +94,7 @@ class Formatter extends Component
     /**
      * @var string the locale ID that is used to localize the date and number formatting.
      * For number and date formatting this is only effective when the
-     * [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) is installed.
+     * [PHP intl extension](https://www.php.net/manual/en/book.intl.php) is installed.
      * If not set, [[\yii\base\Application::language]] will be used.
      */
     public $locale;
@@ -108,9 +108,9 @@ class Formatter extends Component
     /**
      * @var string the time zone to use for formatting time and date values.
      *
-     * This can be any value that may be passed to [date_default_timezone_set()](https://secure.php.net/manual/en/function.date-default-timezone-set.php)
+     * This can be any value that may be passed to [date_default_timezone_set()](https://www.php.net/manual/en/function.date-default-timezone-set.php)
      * e.g. `UTC`, `Europe/Berlin` or `America/Chicago`.
-     * Refer to the [php manual](https://secure.php.net/manual/en/timezones.php) for available time zones.
+     * Refer to the [php manual](https://www.php.net/manual/en/timezones.php) for available time zones.
      * If this property is not set, [[\yii\base\Application::timeZone]] will be used.
      *
      * Note that the default time zone for input data is assumed to be UTC by default if no time zone is included in the input date value.
@@ -121,7 +121,7 @@ class Formatter extends Component
      * @var string the time zone that is assumed for input values if they do not include a time zone explicitly.
      *
      * The value must be a valid time zone identifier, e.g. `UTC`, `Europe/Berlin` or `America/Chicago`.
-     * Please refer to the [php manual](https://secure.php.net/manual/en/timezones.php) for available time zones.
+     * Please refer to the [php manual](https://www.php.net/manual/en/timezones.php) for available time zones.
      *
      * It defaults to `UTC` so you only have to adjust this value if you store datetime values in another time zone in your database.
      *
@@ -137,7 +137,7 @@ class Formatter extends Component
      *
      * It can also be a custom format as specified in the [ICU manual](http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax).
      * Alternatively this can be a string prefixed with `php:` representing a format that can be recognized by the
-     * PHP [date()](https://secure.php.net/manual/en/function.date.php)-function.
+     * PHP [date()](https://www.php.net/manual/en/function.date.php)-function.
      *
      * For example:
      *
@@ -153,7 +153,7 @@ class Formatter extends Component
      *
      * It can also be a custom format as specified in the [ICU manual](http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax).
      * Alternatively this can be a string prefixed with `php:` representing a format that can be recognized by the
-     * PHP [date()](https://secure.php.net/manual/en/function.date.php)-function.
+     * PHP [date()](https://www.php.net/manual/en/function.date.php)-function.
      *
      * For example:
      *
@@ -170,7 +170,7 @@ class Formatter extends Component
      * It can also be a custom format as specified in the [ICU manual](http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax).
      *
      * Alternatively this can be a string prefixed with `php:` representing a format that can be recognized by the
-     * PHP [date()](https://secure.php.net/manual/en/function.date.php)-function.
+     * PHP [date()](https://www.php.net/manual/en/function.date.php)-function.
      *
      * For example:
      *
@@ -182,7 +182,7 @@ class Formatter extends Component
     public $datetimeFormat = 'medium';
     /**
      * @var \IntlCalendar|int|null the calendar to be used for date formatting. The value of this property will be directly
-     * passed to the [constructor of the `IntlDateFormatter` class](https://secure.php.net/manual/en/intldateformatter.create.php).
+     * passed to the [constructor of the `IntlDateFormatter` class](https://www.php.net/manual/en/intldateformatter.create.php).
      *
      * Defaults to `null`, which means the Gregorian calendar will be used. You may also explicitly pass the constant
      * `\IntlDateFormatter::GREGORIAN` for Gregorian calendar.
@@ -201,42 +201,42 @@ class Formatter extends Component
      * Available calendar names can be found in the [ICU manual](http://userguide.icu-project.org/datetime/calendar).
      *
      * Since PHP 5.5 you may also use an instance of the [[\IntlCalendar]] class.
-     * Check the [PHP manual](https://secure.php.net/manual/en/intldateformatter.create.php) for more details.
+     * Check the [PHP manual](https://www.php.net/manual/en/intldateformatter.create.php) for more details.
      *
-     * If the [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) is not available, setting this property will have no effect.
+     * If the [PHP intl extension](https://www.php.net/manual/en/book.intl.php) is not available, setting this property will have no effect.
      *
-     * @see https://secure.php.net/manual/en/intldateformatter.create.php
-     * @see https://secure.php.net/manual/en/class.intldateformatter.php#intl.intldateformatter-constants.calendartypes
-     * @see https://secure.php.net/manual/en/class.intlcalendar.php
+     * @see https://www.php.net/manual/en/intldateformatter.create.php
+     * @see https://www.php.net/manual/en/class.intldateformatter.php#intl.intldateformatter-constants.calendartypes
+     * @see https://www.php.net/manual/en/class.intlcalendar.php
      * @since 2.0.7
      */
     public $calendar;
     /**
      * @var string|null the character displayed as the decimal point when formatting a number.
      * If not set, the decimal separator corresponding to [[locale]] will be used.
-     * If [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) is not available, the default value is '.'.
+     * If [PHP intl extension](https://www.php.net/manual/en/book.intl.php) is not available, the default value is '.'.
      */
     public $decimalSeparator;
     /**
      * @var string the character displayed as the decimal point when formatting a currency.
      * If not set, the currency decimal separator corresponding to [[locale]] will be used.
-     * If [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) is not available, setting this property will have no effect.
+     * If [PHP intl extension](https://www.php.net/manual/en/book.intl.php) is not available, setting this property will have no effect.
      * @since 2.0.35
      */
     public $currencyDecimalSeparator;
     /**
      * @var string|null the character displayed as the thousands separator (also called grouping separator) character when formatting a number.
      * If not set, the thousand separator corresponding to [[locale]] will be used.
-     * If [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) is not available, the default value is ','.
+     * If [PHP intl extension](https://www.php.net/manual/en/book.intl.php) is not available, the default value is ','.
      */
     public $thousandSeparator;
     /**
      * @var array a list of name value pairs that are passed to the
-     * intl [NumberFormatter::setAttribute()](https://secure.php.net/manual/en/numberformatter.setattribute.php) method of all
+     * intl [NumberFormatter::setAttribute()](https://www.php.net/manual/en/numberformatter.setattribute.php) method of all
      * the number formatter objects created by [[createNumberFormatter()]].
-     * This property takes only effect if the [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) is installed.
+     * This property takes only effect if the [PHP intl extension](https://www.php.net/manual/en/book.intl.php) is installed.
      *
-     * Please refer to the [PHP manual](https://secure.php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants.unumberformatattribute)
+     * Please refer to the [PHP manual](https://www.php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants.unumberformatattribute)
      * for the possible options.
      *
      * For example to adjust the maximum and minimum value of fraction digits you can configure this property like the following:
@@ -251,11 +251,11 @@ class Formatter extends Component
     public $numberFormatterOptions = [];
     /**
      * @var array a list of name value pairs that are passed to the
-     * intl [NumberFormatter::setTextAttribute()](https://secure.php.net/manual/en/numberformatter.settextattribute.php) method of all
+     * intl [NumberFormatter::setTextAttribute()](https://www.php.net/manual/en/numberformatter.settextattribute.php) method of all
      * the number formatter objects created by [[createNumberFormatter()]].
-     * This property takes only effect if the [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) is installed.
+     * This property takes only effect if the [PHP intl extension](https://www.php.net/manual/en/book.intl.php) is installed.
      *
-     * Please refer to the [PHP manual](https://secure.php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants.unumberformattextattribute)
+     * Please refer to the [PHP manual](https://www.php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants.unumberformattextattribute)
      * for the possible options.
      *
      * For example to change the minus sign for negative numbers you can configure this property like the following:
@@ -269,11 +269,11 @@ class Formatter extends Component
     public $numberFormatterTextOptions = [];
     /**
      * @var array a list of name value pairs that are passed to the
-     * intl [NumberFormatter::setSymbol()](https://secure.php.net/manual/en/numberformatter.setsymbol.php) method of all
+     * intl [NumberFormatter::setSymbol()](https://www.php.net/manual/en/numberformatter.setsymbol.php) method of all
      * the number formatter objects created by [[createNumberFormatter()]].
-     * This property takes only effect if the [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) is installed.
+     * This property takes only effect if the [PHP intl extension](https://www.php.net/manual/en/book.intl.php) is installed.
      *
-     * Please refer to the [PHP manual](https://secure.php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants.unumberformatsymbol)
+     * Please refer to the [PHP manual](https://www.php.net/manual/en/class.numberformatter.php#intl.numberformatter-constants.unumberformatsymbol)
      * for the possible options.
      *
      * For example to choose a custom currency symbol, e.g. [U+20BD](http://unicode-table.com/en/20BD/) instead of `руб.` for Russian Ruble:
@@ -377,7 +377,7 @@ class Formatter extends Component
     ];
 
     /**
-     * @var bool whether the [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) is loaded.
+     * @var bool whether the [PHP intl extension](https://www.php.net/manual/en/book.intl.php) is loaded.
      */
     private $_intlLoaded = false;
     /**
@@ -626,9 +626,9 @@ public function asBoolean($value)
      * types of value are supported:
      *
      * - an integer representing a UNIX timestamp. A UNIX timestamp is always in UTC by its definition.
-     * - a string that can be [parsed to create a DateTime object](https://secure.php.net/manual/en/datetime.formats.php).
+     * - a string that can be [parsed to create a DateTime object](https://www.php.net/manual/en/datetime.formats.php).
      *   The timestamp is assumed to be in [[defaultTimeZone]] unless a time zone is explicitly given.
-     * - a PHP [DateTime](https://secure.php.net/manual/en/class.datetime.php) object. You may set the time zone
+     * - a PHP [DateTime](https://www.php.net/manual/en/class.datetime.php) object. You may set the time zone
      *   for the DateTime object to specify the source time zone.
      *
      * The formatter will convert date values according to [[timeZone]] before formatting it.
@@ -642,7 +642,7 @@ public function asBoolean($value)
      * It can also be a custom format as specified in the [ICU manual](http://userguide.icu-project.org/formatparse/datetime).
      *
      * Alternatively this can be a string prefixed with `php:` representing a format that can be recognized by the
-     * PHP [date()](https://secure.php.net/manual/en/function.date.php)-function.
+     * PHP [date()](https://www.php.net/manual/en/function.date.php)-function.
      *
      * @return string the formatted result.
      * @throws InvalidArgumentException if the input value can not be evaluated as a date value.
@@ -664,9 +664,9 @@ public function asDate($value, $format = null)
      * types of value are supported:
      *
      * - an integer representing a UNIX timestamp. A UNIX timestamp is always in UTC by its definition.
-     * - a string that can be [parsed to create a DateTime object](https://secure.php.net/manual/en/datetime.formats.php).
+     * - a string that can be [parsed to create a DateTime object](https://www.php.net/manual/en/datetime.formats.php).
      *   The timestamp is assumed to be in [[defaultTimeZone]] unless a time zone is explicitly given.
-     * - a PHP [DateTime](https://secure.php.net/manual/en/class.datetime.php) object. You may set the time zone
+     * - a PHP [DateTime](https://www.php.net/manual/en/class.datetime.php) object. You may set the time zone
      *   for the DateTime object to specify the source time zone.
      *
      * The formatter will convert date values according to [[timeZone]] before formatting it.
@@ -679,7 +679,7 @@ public function asDate($value, $format = null)
      * It can also be a custom format as specified in the [ICU manual](http://userguide.icu-project.org/formatparse/datetime).
      *
      * Alternatively this can be a string prefixed with `php:` representing a format that can be recognized by the
-     * PHP [date()](https://secure.php.net/manual/en/function.date.php)-function.
+     * PHP [date()](https://www.php.net/manual/en/function.date.php)-function.
      *
      * @return string the formatted result.
      * @throws InvalidArgumentException if the input value can not be evaluated as a date value.
@@ -701,9 +701,9 @@ public function asTime($value, $format = null)
      * types of value are supported:
      *
      * - an integer representing a UNIX timestamp. A UNIX timestamp is always in UTC by its definition.
-     * - a string that can be [parsed to create a DateTime object](https://secure.php.net/manual/en/datetime.formats.php).
+     * - a string that can be [parsed to create a DateTime object](https://www.php.net/manual/en/datetime.formats.php).
      *   The timestamp is assumed to be in [[defaultTimeZone]] unless a time zone is explicitly given.
-     * - a PHP [DateTime](https://secure.php.net/manual/en/class.datetime.php) object. You may set the time zone
+     * - a PHP [DateTime](https://www.php.net/manual/en/class.datetime.php) object. You may set the time zone
      *   for the DateTime object to specify the source time zone.
      *
      * The formatter will convert date values according to [[timeZone]] before formatting it.
@@ -716,7 +716,7 @@ public function asTime($value, $format = null)
      * It can also be a custom format as specified in the [ICU manual](http://userguide.icu-project.org/formatparse/datetime).
      *
      * Alternatively this can be a string prefixed with `php:` representing a format that can be recognized by the
-     * PHP [date()](https://secure.php.net/manual/en/function.date.php)-function.
+     * PHP [date()](https://www.php.net/manual/en/function.date.php)-function.
      *
      * @return string the formatted result.
      * @throws InvalidArgumentException if the input value can not be evaluated as a date value.
@@ -747,9 +747,9 @@ public function asDatetime($value, $format = null)
      * types of value are supported:
      *
      * - an integer representing a UNIX timestamp
-     * - a string that can be [parsed to create a DateTime object](https://secure.php.net/manual/en/datetime.formats.php).
+     * - a string that can be [parsed to create a DateTime object](https://www.php.net/manual/en/datetime.formats.php).
      *   The timestamp is assumed to be in [[defaultTimeZone]] unless a time zone is explicitly given.
-     * - a PHP [DateTime](https://secure.php.net/manual/en/class.datetime.php) object
+     * - a PHP [DateTime](https://www.php.net/manual/en/class.datetime.php) object
      *
      * @param string $format the format used to convert the value into a date string.
      * @param string $type 'date', 'time', or 'datetime'.
@@ -846,9 +846,9 @@ private function formatDateTimeValue($value, $format, $type)
      * types of value are supported:
      *
      * - an integer representing a UNIX timestamp
-     * - a string that can be [parsed to create a DateTime object](https://secure.php.net/manual/en/datetime.formats.php).
+     * - a string that can be [parsed to create a DateTime object](https://www.php.net/manual/en/datetime.formats.php).
      *   The timestamp is assumed to be in [[defaultTimeZone]] unless a time zone is explicitly given.
-     * - a PHP [DateTime](https://secure.php.net/manual/en/class.datetime.php) object
+     * - a PHP [DateTime](https://www.php.net/manual/en/class.datetime.php) object
      *
      * @param bool $checkDateTimeInfo whether to also check if the date/time value has some time and date information attached.
      * Defaults to `false`. If `true`, the method will then return an array with the first element being the normalized
@@ -920,9 +920,9 @@ protected function normalizeDatetimeValue($value, $checkDateTimeInfo = false)
      * types of value are supported:
      *
      * - an integer representing a UNIX timestamp
-     * - a string that can be [parsed to create a DateTime object](https://secure.php.net/manual/en/datetime.formats.php).
+     * - a string that can be [parsed to create a DateTime object](https://www.php.net/manual/en/datetime.formats.php).
      *   The timestamp is assumed to be in [[defaultTimeZone]] unless a time zone is explicitly given.
-     * - a PHP [DateTime](https://secure.php.net/manual/en/class.datetime.php) object
+     * - a PHP [DateTime](https://www.php.net/manual/en/class.datetime.php) object
      *
      * @return string the formatted result.
      */
@@ -948,9 +948,9 @@ public function asTimestamp($value)
      * types of value are supported:
      *
      * - an integer representing a UNIX timestamp
-     * - a string that can be [parsed to create a DateTime object](https://secure.php.net/manual/en/datetime.formats.php).
+     * - a string that can be [parsed to create a DateTime object](https://www.php.net/manual/en/datetime.formats.php).
      *   The timestamp is assumed to be in [[defaultTimeZone]] unless a time zone is explicitly given.
-     * - a PHP [DateTime](https://secure.php.net/manual/en/class.datetime.php) object
+     * - a PHP [DateTime](https://www.php.net/manual/en/class.datetime.php) object
      * - a PHP DateInterval object (a positive time interval will refer to the past, a negative one to the future)
      *
      * @param int|string|DateTime|DateTimeInterface|null $referenceTime if specified the value is used as a reference time instead of `now`
@@ -1030,7 +1030,7 @@ public function asRelativeTime($value, $referenceTime = null)
      * Represents the value as duration in human readable format.
      *
      * @param DateInterval|string|int|null $value the value to be formatted. Acceptable formats:
-     *  - [DateInterval object](https://secure.php.net/manual/ru/class.dateinterval.php)
+     *  - [DateInterval object](https://www.php.net/manual/ru/class.dateinterval.php)
      *  - integer - number of seconds. For example: value `131` represents `2 minutes, 11 seconds`
      *  - ISO8601 duration format. For example, all of these values represent `1 day, 2 hours, 30 minutes` duration:
      *    `2015-01-01T13:00:00Z/2015-01-02T13:30:00Z` - between two datetime values
@@ -1101,7 +1101,7 @@ public function asDuration($value, $implodeString = ', ', $negativeSign = '-')
      * Formats the value as an integer number by removing any decimal digits without rounding.
      *
      * Since 2.0.16 numbers that are mispresented after normalization are formatted as strings using fallback function
-     * without [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) support. For very big numbers it's
+     * without [PHP intl extension](https://www.php.net/manual/en/book.intl.php) support. For very big numbers it's
      * recommended to pass them as strings and not use scientific notation otherwise the output might be wrong.
      *
      * @param mixed $value the value to be formatted.
@@ -1142,7 +1142,7 @@ public function asInteger($value, $options = [], $textOptions = [])
      * value is rounded automatically to the defined decimal digits.
      *
      * Since 2.0.16 numbers that are mispresented after normalization are formatted as strings using fallback function
-     * without [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) support. For very big numbers it's
+     * without [PHP intl extension](https://www.php.net/manual/en/book.intl.php) support. For very big numbers it's
      * recommended to pass them as strings and not use scientific notation otherwise the output might be wrong.
      *
      * @param mixed $value the value to be formatted.
@@ -1192,7 +1192,7 @@ public function asDecimal($value, $decimals = null, $options = [], $textOptions
      * Formats the value as a percent number with "%" sign.
      *
      * Since 2.0.16 numbers that are mispresented after normalization are formatted as strings using fallback function
-     * without [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) support. For very big numbers it's
+     * without [PHP intl extension](https://www.php.net/manual/en/book.intl.php) support. For very big numbers it's
      * recommended to pass them as strings and not use scientific notation otherwise the output might be wrong.
      *
      * @param mixed $value the value to be formatted. It must be a factor e.g. `0.75` will result in `75%`.
@@ -1245,7 +1245,7 @@ public function asPercent($value, $decimals = null, $options = [], $textOptions
      * If not given, the number of digits depends in the input value and is determined based on
      * `NumberFormatter::MIN_FRACTION_DIGITS` and `NumberFormatter::MAX_FRACTION_DIGITS`, which can be configured
      * using [[$numberFormatterOptions]].
-     * If the [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) is not available, the default value
+     * If the [PHP intl extension](https://www.php.net/manual/en/book.intl.php) is not available, the default value
      * depends on your PHP configuration.
      * If you want consistent behavior between environments where intl is available and not, you should explicitly
      * specify a value here.
@@ -1280,7 +1280,7 @@ public function asScientific($value, $decimals = null, $options = [], $textOptio
     /**
      * Formats the value as a currency number.
      *
-     * This function does not require the [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) to be installed
+     * This function does not require the [PHP intl extension](https://www.php.net/manual/en/book.intl.php) to be installed
      * to work, but it is highly recommended to install it to get good formatting results.
      *
      * Since 2.0.16 numbers that are mispresented after normalization are formatted as strings using fallback function
@@ -1311,7 +1311,7 @@ public function asCurrency($value, $currency = null, $options = [], $textOptions
         if ($this->_intlLoaded) {
             $currency = $currency ?: $this->currencyCode;
             // currency code must be set before fraction digits
-            // https://secure.php.net/manual/en/numberformatter.formatcurrency.php#114376
+            // https://www.php.net/manual/en/numberformatter.formatcurrency.php#114376
             if ($currency && !isset($textOptions[NumberFormatter::CURRENCY_CODE])) {
                 $textOptions[NumberFormatter::CURRENCY_CODE] = $currency;
             }
@@ -1341,14 +1341,14 @@ public function asCurrency($value, $currency = null, $options = [], $textOptions
     /**
      * Formats the value as a number spellout.
      *
-     * This function requires the [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) to be installed.
+     * This function requires the [PHP intl extension](https://www.php.net/manual/en/book.intl.php) to be installed.
      *
      * This formatter does not work well with very big numbers.
      *
      * @param mixed $value the value to be formatted
      * @return string the formatted result.
      * @throws InvalidArgumentException if the input value is not numeric or the formatting failed.
-     * @throws InvalidConfigException when the [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) is not available.
+     * @throws InvalidConfigException when the [PHP intl extension](https://www.php.net/manual/en/book.intl.php) is not available.
      */
     public function asSpellout($value)
     {
@@ -1371,14 +1371,14 @@ public function asSpellout($value)
     /**
      * Formats the value as a ordinal value of a number.
      *
-     * This function requires the [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) to be installed.
+     * This function requires the [PHP intl extension](https://www.php.net/manual/en/book.intl.php) to be installed.
      *
      * This formatter does not work well with very big numbers.
      *
      * @param mixed $value the value to be formatted
      * @return string the formatted result.
      * @throws InvalidArgumentException if the input value is not numeric or the formatting failed.
-     * @throws InvalidConfigException when the [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) is not available.
+     * @throws InvalidConfigException when the [PHP intl extension](https://www.php.net/manual/en/book.intl.php) is not available.
      */
     public function asOrdinal($value)
     {
@@ -1751,9 +1751,9 @@ protected function formatNumber($value, $decimals, $maxPosition, $formatBase, $o
     /**
      * Normalizes a numeric input value.
      *
-     * - everything [empty](https://secure.php.net/manual/en/function.empty.php) will result in `0`
-     * - a [numeric](https://secure.php.net/manual/en/function.is-numeric.php) string will be casted to float
-     * - everything else will be returned if it is [numeric](https://secure.php.net/manual/en/function.is-numeric.php),
+     * - everything [empty](https://www.php.net/manual/en/function.empty.php) will result in `0`
+     * - a [numeric](https://www.php.net/manual/en/function.is-numeric.php) string will be casted to float
+     * - everything else will be returned if it is [numeric](https://www.php.net/manual/en/function.is-numeric.php),
      *   otherwise an exception is thrown.
      *
      * @param mixed $value the input value
diff --git a/framework/i18n/GettextMessageSource.php b/framework/i18n/GettextMessageSource.php
index d96fb5290f0..b3190ba4c63 100644
--- a/framework/i18n/GettextMessageSource.php
+++ b/framework/i18n/GettextMessageSource.php
@@ -8,6 +8,7 @@
 namespace yii\i18n;
 
 use Yii;
+use yii\base\InvalidArgumentException;
 
 /**
  * GettextMessageSource represents a message source that is based on GNU Gettext.
@@ -32,19 +33,19 @@ class GettextMessageSource extends MessageSource
     const PO_FILE_EXT = '.po';
 
     /**
-     * @var string
+     * @var string base directory of messages files
      */
     public $basePath = '@app/messages';
     /**
-     * @var string
+     * @var string sub-directory of messages files
      */
     public $catalog = 'messages';
     /**
-     * @var bool
+     * @var bool whether to use generated MO files
      */
     public $useMoFile = true;
     /**
-     * @var bool
+     * @var bool whether to use big-endian when reading and writing an integer
      */
     public $useBigEndian = false;
 
@@ -129,6 +130,10 @@ protected function loadFallbackMessages($category, $fallbackLanguage, $messages,
      */
     protected function getMessageFilePath($language)
     {
+        $language = (string) $language;
+        if ($language !== '' && !preg_match('/^[a-z_-]+$/i', $language)) {
+            throw new InvalidArgumentException(sprintf('Invalid language code: "%s".', $language));
+        }
         $messageFile = Yii::getAlias($this->basePath) . '/' . $language . '/' . $this->catalog;
         if ($this->useMoFile) {
             $messageFile .= self::MO_FILE_EXT;
diff --git a/framework/i18n/Locale.php b/framework/i18n/Locale.php
index 86b78de6a88..a0e1a1b48cf 100644
--- a/framework/i18n/Locale.php
+++ b/framework/i18n/Locale.php
@@ -14,7 +14,7 @@
 /**
  * Locale provides various locale information via convenient methods.
  *
- * The class requires [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) to be installed.
+ * The class requires [PHP intl extension](https://www.php.net/manual/en/book.intl.php) to be installed.
  *
  * @property-read string $currencySymbol This property is read-only.
  *
diff --git a/framework/i18n/MessageFormatter.php b/framework/i18n/MessageFormatter.php
index 7aec4824149..47e4246fd21 100644
--- a/framework/i18n/MessageFormatter.php
+++ b/framework/i18n/MessageFormatter.php
@@ -23,7 +23,7 @@
  *   substituted.
  * - Fixes PHP 5.5 weird placeholder replacement in case no arguments are provided at all (https://bugs.php.net/bug.php?id=65920).
  * - Offers limited support for message formatting in case PHP intl extension is not installed.
- *   However it is highly recommended that you install [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) if you want
+ *   However it is highly recommended that you install [PHP intl extension](https://www.php.net/manual/en/book.intl.php) if you want
  *   to use MessageFormatter features.
  *
  *   The fallback implementation only supports the following message formats:
@@ -32,7 +32,7 @@
  *   - simple parameters
  *   - integer number parameters
  *
- *   The fallback implementation does NOT support the ['apostrophe-friendly' syntax](https://secure.php.net/manual/en/messageformatter.formatmessage.php).
+ *   The fallback implementation does NOT support the ['apostrophe-friendly' syntax](https://www.php.net/manual/en/messageformatter.formatmessage.php).
  *   Also messages that are working with the fallback implementation are not necessarily compatible with the
  *   PHP intl MessageFormatter so do not rely on the fallback if you are able to install intl extension somehow.
  *
@@ -51,7 +51,7 @@ class MessageFormatter extends Component
 
     /**
      * Get the error code from the last operation.
-     * @link https://secure.php.net/manual/en/messageformatter.geterrorcode.php
+     * @link https://www.php.net/manual/en/messageformatter.geterrorcode.php
      * @return string Code of the last error.
      */
     public function getErrorCode()
@@ -61,7 +61,7 @@ public function getErrorCode()
 
     /**
      * Get the error text from the last operation.
-     * @link https://secure.php.net/manual/en/messageformatter.geterrormessage.php
+     * @link https://www.php.net/manual/en/messageformatter.geterrormessage.php
      * @return string Description of the last error.
      */
     public function getErrorMessage()
@@ -72,7 +72,7 @@ public function getErrorMessage()
     /**
      * Formats a message via [ICU message format](http://userguide.icu-project.org/formatparse/messages).
      *
-     * It uses the PHP intl extension's [MessageFormatter](https://secure.php.net/manual/en/class.messageformatter.php)
+     * It uses the PHP intl extension's [MessageFormatter](https://www.php.net/manual/en/class.messageformatter.php)
      * and works around some issues.
      * If PHP intl is not installed a fallback will be used that supports a subset of the ICU message format.
      *
@@ -134,7 +134,7 @@ public function format($pattern, $params, $language)
     /**
      * Parses an input string according to an [ICU message format](http://userguide.icu-project.org/formatparse/messages) pattern.
      *
-     * It uses the PHP intl extension's [MessageFormatter::parse()](https://secure.php.net/manual/en/messageformatter.parsemessage.php)
+     * It uses the PHP intl extension's [MessageFormatter::parse()](https://www.php.net/manual/en/messageformatter.parsemessage.php)
      * and adds support for named arguments.
      * Usage of this method requires PHP intl extension to be installed.
      *
@@ -423,7 +423,7 @@ private function parseToken($token, $args, $locale)
                         $selector = trim(mb_substr($selector, $pos + 1, mb_strlen($selector, $charset), $charset));
                     }
                     if ($message === false && $selector === 'other' ||
-                        strpos($selector, '=') === 0 && (int) mb_substr($selector, 1, mb_strlen($selector, $charset), $charset) === $arg ||
+                        strncmp($selector, '=', 1) === 0 && (int) mb_substr($selector, 1, mb_strlen($selector, $charset), $charset) === $arg ||
                         $selector === 'one' && $arg - $offset == 1
                     ) {
                         $message = implode(',', str_replace('#', $arg - $offset, $plural[$i]));
diff --git a/framework/i18n/PhpMessageSource.php b/framework/i18n/PhpMessageSource.php
index 4bcfcd9adff..4dd860a5ced 100644
--- a/framework/i18n/PhpMessageSource.php
+++ b/framework/i18n/PhpMessageSource.php
@@ -8,6 +8,7 @@
 namespace yii\i18n;
 
 use Yii;
+use yii\base\InvalidArgumentException;
 
 /**
  * PhpMessageSource represents a message source that stores translated messages in PHP scripts.
@@ -132,6 +133,10 @@ protected function loadFallbackMessages($category, $fallbackLanguage, $messages,
      */
     protected function getMessageFilePath($category, $language)
     {
+        $language = (string) $language;
+        if ($language !== '' && !preg_match('/^[a-z_-]+$/i', $language)) {
+            throw new InvalidArgumentException(sprintf('Invalid language code: "%s".', $language));
+        }
         $messageFile = Yii::getAlias($this->basePath) . "/$language/";
         if (isset($this->fileMap[$category])) {
             $messageFile .= $this->fileMap[$category];
diff --git a/framework/log/Dispatcher.php b/framework/log/Dispatcher.php
index 8109e0b8978..9b4136c04f3 100644
--- a/framework/log/Dispatcher.php
+++ b/framework/log/Dispatcher.php
@@ -106,8 +106,8 @@ public function init()
 
     /**
      * Gets the connected logger.
-     * If not set, [[\Yii::getLogger()]] will be used.
-     * @property Logger the logger. If not set, [[\Yii::getLogger()]] will be used.
+     * If not set, [[Yii::getLogger()]] will be used.
+     * @property Logger the logger. If not set, [[Yii::getLogger()]] will be used.
      * @return Logger the logger.
      */
     public function getLogger()
@@ -123,12 +123,15 @@ public function getLogger()
      * Sets the connected logger.
      * @param Logger|string|array $value the logger to be used. This can either be a logger instance
      * or a configuration that will be used to create one using [[Yii::createObject()]].
+     * If you are providing custom logger configuration and would like it to be used for the whole application 
+     * and not just for the dispatcher you should use [[Yii::setLogger()]] instead.
      */
     public function setLogger($value)
     {
         if (is_string($value) || is_array($value)) {
             $value = Yii::createObject($value);
         }
+
         $this->_logger = $value;
         $this->_logger->dispatcher = $this;
     }
diff --git a/framework/log/FileTarget.php b/framework/log/FileTarget.php
index a29c67367af..157c0db50ed 100644
--- a/framework/log/FileTarget.php
+++ b/framework/log/FileTarget.php
@@ -64,9 +64,9 @@ class FileTarget extends Target
      * systems which do not play well with rename on open files. Rotation by renaming however is
      * a bit faster.
      *
-     * The problem with windows systems where the [rename()](https://secure.php.net/manual/en/function.rename.php)
+     * The problem with windows systems where the [rename()](https://www.php.net/manual/en/function.rename.php)
      * function does not work with files that are opened by some process is described in a
-     * [comment by Martin Pelletier](https://secure.php.net/manual/en/function.rename.php#102274) in
+     * [comment by Martin Pelletier](https://www.php.net/manual/en/function.rename.php#102274) in
      * the PHP documentation. By setting rotateByCopy to `true` you can work
      * around this problem.
      */
diff --git a/framework/log/Logger.php b/framework/log/Logger.php
index 42d71cc988d..a4f21dd4aa7 100644
--- a/framework/log/Logger.php
+++ b/framework/log/Logger.php
@@ -196,7 +196,7 @@ public function flush($final = false)
                 if (is_int($index)) {
                     $messages[] = $message;
                 } else {
-                    if (strpos($index, 'begin-') === 0) {
+                    if (strncmp($index, 'begin-', 6) === 0) {
                         $oppositeProfile = 'end-' . substr($index, 6);
                     } else {
                         $oppositeProfile = 'begin-' . substr($index, 4);
diff --git a/framework/log/SyslogTarget.php b/framework/log/SyslogTarget.php
index 6a9b0cfbb7d..84bde8941f5 100644
--- a/framework/log/SyslogTarget.php
+++ b/framework/log/SyslogTarget.php
@@ -27,9 +27,9 @@ class SyslogTarget extends Target
      */
     public $facility = LOG_USER;
     /**
-     * @var int openlog options. This is a bitfield passed as the `$option` parameter to [openlog()](https://secure.php.net/openlog).
+     * @var int openlog options. This is a bitfield passed as the `$option` parameter to [openlog()](https://www.php.net/openlog).
      * Defaults to `null` which means to use the default options `LOG_ODELAY | LOG_PID`.
-     * @see https://secure.php.net/openlog for available options.
+     * @see https://www.php.net/openlog for available options.
      * @since 2.0.11
      */
     public $options;
diff --git a/framework/requirements/requirements.php b/framework/requirements/requirements.php
index 29ab338b91b..b6e3d80965c 100644
--- a/framework/requirements/requirements.php
+++ b/framework/requirements/requirements.php
@@ -47,7 +47,7 @@
         'name' => 'MBString extension',
         'mandatory' => true,
         'condition' => extension_loaded('mbstring'),
-        'by' => '<a href="https://secure.php.net/manual/en/book.mbstring.php">Multibyte string</a> processing',
+        'by' => '<a href="https://www.php.net/manual/en/book.mbstring.php">Multibyte string</a> processing',
         'memo' => 'Required for multibyte encoding string processing.'
     ),
     array(
@@ -61,7 +61,7 @@
         'name' => 'Intl extension',
         'mandatory' => false,
         'condition' => $this->checkPhpExtensionVersion('intl', '1.0.2', '>='),
-        'by' => '<a href="https://secure.php.net/manual/en/book.intl.php">Internationalization</a> support',
+        'by' => '<a href="https://www.php.net/manual/en/book.intl.php">Internationalization</a> support',
         'memo' => 'PHP Intl extension 1.0.2 or higher is required when you want to use advanced parameters formatting
         in <code>Yii::t()</code>, non-latin languages with <code>Inflector::slug()</code>,
         <abbr title="Internationalized domain names">IDN</abbr>-feature of
@@ -71,7 +71,7 @@
         'name' => 'ICU version',
         'mandatory' => false,
         'condition' => defined('INTL_ICU_VERSION') && version_compare(INTL_ICU_VERSION, '49', '>='),
-        'by' => '<a href="https://secure.php.net/manual/en/book.intl.php">Internationalization</a> support',
+        'by' => '<a href="https://www.php.net/manual/en/book.intl.php">Internationalization</a> support',
         'memo' => 'ICU 49.0 or higher is required when you want to use <code>#</code> placeholder in plural rules
         (for example, plural in
         <a href=\"http://www.yiiframework.com/doc-2.0/yii-i18n-formatter.html#asRelativeTime%28%29-detail\">
@@ -82,7 +82,7 @@
         'name' => 'ICU Data version',
         'mandatory' => false,
         'condition' => defined('INTL_ICU_DATA_VERSION') && version_compare(INTL_ICU_DATA_VERSION, '49.1', '>='),
-        'by' => '<a href="https://secure.php.net/manual/en/book.intl.php">Internationalization</a> support',
+        'by' => '<a href="https://www.php.net/manual/en/book.intl.php">Internationalization</a> support',
         'memo' => 'ICU Data 49.1 or higher is required when you want to use <code>#</code> placeholder in plural rules
         (for example, plural in
         <a href=\"http://www.yiiframework.com/doc-2.0/yii-i18n-formatter.html#asRelativeTime%28%29-detail\">
@@ -93,14 +93,14 @@
         'name' => 'Fileinfo extension',
         'mandatory' => false,
         'condition' => extension_loaded('fileinfo'),
-        'by' => '<a href="https://secure.php.net/manual/en/book.fileinfo.php">File Information</a>',
+        'by' => '<a href="https://www.php.net/manual/en/book.fileinfo.php">File Information</a>',
         'memo' => 'Required for files upload to detect correct file mime-types.'
     ),
     array(
         'name' => 'DOM extension',
         'mandatory' => false,
         'condition' => extension_loaded('dom'),
-        'by' => '<a href="https://secure.php.net/manual/en/book.dom.php">Document Object Model</a>',
+        'by' => '<a href="https://www.php.net/manual/en/book.dom.php">Document Object Model</a>',
         'memo' => 'Required for REST API to send XML responses via <code>yii\web\XmlResponseFormatter</code>.'
     ),
     array(
diff --git a/framework/rest/CreateAction.php b/framework/rest/CreateAction.php
index 82e77b72db1..82537a56ca8 100644
--- a/framework/rest/CreateAction.php
+++ b/framework/rest/CreateAction.php
@@ -52,7 +52,7 @@ public function run()
         if ($model->save()) {
             $response = Yii::$app->getResponse();
             $response->setStatusCode(201);
-            $id = implode(',', array_values($model->getPrimaryKey(true)));
+            $id = implode(',', $model->getPrimaryKey(true));
             $response->getHeaders()->set('Location', Url::toRoute([$this->viewAction, 'id' => $id], true));
         } elseif (!$model->hasErrors()) {
             throw new ServerErrorHttpException('Failed to create the object for unknown reason.');
diff --git a/framework/test/BaseActiveFixture.php b/framework/test/BaseActiveFixture.php
index 317d0fa85f1..54c30c99384 100644
--- a/framework/test/BaseActiveFixture.php
+++ b/framework/test/BaseActiveFixture.php
@@ -84,7 +84,7 @@ public function load()
      *
      * @return array the data to be put into the database
      * @throws InvalidConfigException if the specified data file does not exist.
-     * @see [[loadData]]
+     * @see loadData()
      */
     protected function getData()
     {
diff --git a/framework/validators/CompareValidator.php b/framework/validators/CompareValidator.php
index a57886d7c1d..fbe4d2cbe2b 100644
--- a/framework/validators/CompareValidator.php
+++ b/framework/validators/CompareValidator.php
@@ -16,7 +16,7 @@
  *
  * The value being compared with can be another attribute value
  * (specified via [[compareAttribute]]) or a constant (specified via
- * [[compareValue]]. When both are specified, the latter takes
+ * [[compareValue]]). When both are specified, the latter takes
  * precedence. If neither is specified, the attribute will be compared
  * with another attribute whose name is by appending "_repeat" to the source
  * attribute name.
@@ -105,14 +105,10 @@ public function init()
         if ($this->message === null) {
             switch ($this->operator) {
                 case '==':
-                    $this->message = Yii::t('yii', '{attribute} must be equal to "{compareValueOrAttribute}".');
-                    break;
                 case '===':
                     $this->message = Yii::t('yii', '{attribute} must be equal to "{compareValueOrAttribute}".');
                     break;
                 case '!=':
-                    $this->message = Yii::t('yii', '{attribute} must not be equal to "{compareValueOrAttribute}".');
-                    break;
                 case '!==':
                     $this->message = Yii::t('yii', '{attribute} must not be equal to "{compareValueOrAttribute}".');
                     break;
diff --git a/framework/validators/DateValidator.php b/framework/validators/DateValidator.php
index 24604cf6721..7d920108ab7 100644
--- a/framework/validators/DateValidator.php
+++ b/framework/validators/DateValidator.php
@@ -60,7 +60,7 @@ class DateValidator extends Validator
      * This property influences the default value of [[format]] and also sets the correct behavior when [[format]] is one of the intl
      * short formats, `short`, `medium`, `long`, or `full`.
      *
-     * This is only effective when the [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) is installed.
+     * This is only effective when the [PHP intl extension](https://www.php.net/manual/en/book.intl.php) is installed.
      *
      * This property can be set to the following values:
      *
@@ -76,7 +76,7 @@ class DateValidator extends Validator
      * This can be a date time pattern as described in the [ICU manual](http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax).
      *
      * Alternatively this can be a string prefixed with `php:` representing a format that can be recognized by the PHP Datetime class.
-     * Please refer to <https://secure.php.net/manual/en/datetime.createfromformat.php> on supported formats.
+     * Please refer to <https://www.php.net/manual/en/datetime.createfromformat.php> on supported formats.
      *
      * If this property is not set, the default value will be obtained from `Yii::$app->formatter->dateFormat`, see [[\yii\i18n\Formatter::dateFormat]] for details.
      * Since version 2.0.8 the default value will be determined from different formats of the formatter class,
@@ -95,8 +95,8 @@ class DateValidator extends Validator
      * ```
      *
      * **Note:** the underlying date parsers being used vary dependent on the format. If you use the ICU format and
-     * the [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) is installed, the [IntlDateFormatter](https://secure.php.net/manual/en/intldateformatter.parse.php)
-     * is used to parse the input value. In all other cases the PHP [DateTime](https://secure.php.net/manual/en/datetime.createfromformat.php) class
+     * the [PHP intl extension](https://www.php.net/manual/en/book.intl.php) is installed, the [IntlDateFormatter](https://www.php.net/manual/en/intldateformatter.parse.php)
+     * is used to parse the input value. In all other cases the PHP [DateTime](https://www.php.net/manual/en/datetime.createfromformat.php) class
      * is used. The IntlDateFormatter has the advantage that it can parse international dates like `12. Mai 2015` or `12 мая 2014`, while the
      * PHP parser is limited to English only. The PHP parser however is more strict about the input format as it will not accept
      * `12.05.05` for the format `php:d.m.Y`, but the IntlDateFormatter will accept it for the format `dd.MM.yyyy`.
@@ -105,16 +105,16 @@ class DateValidator extends Validator
     public $format;
     /**
      * @var string the locale ID that is used to localize the date parsing.
-     * This is only effective when the [PHP intl extension](https://secure.php.net/manual/en/book.intl.php) is installed.
+     * This is only effective when the [PHP intl extension](https://www.php.net/manual/en/book.intl.php) is installed.
      * If not set, the locale of the [[\yii\base\Application::formatter|formatter]] will be used.
      * See also [[\yii\i18n\Formatter::locale]].
      */
     public $locale;
     /**
      * @var string the timezone to use for parsing date and time values.
-     * This can be any value that may be passed to [date_default_timezone_set()](https://secure.php.net/manual/en/function.date-default-timezone-set.php)
+     * This can be any value that may be passed to [date_default_timezone_set()](https://www.php.net/manual/en/function.date-default-timezone-set.php)
      * e.g. `UTC`, `Europe/Berlin` or `America/Chicago`.
-     * Refer to the [php manual](https://secure.php.net/manual/en/timezones.php) for available timezones.
+     * Refer to the [php manual](https://www.php.net/manual/en/timezones.php) for available timezones.
      * If this property is not set, [[\yii\base\Application::timeZone]] will be used.
      */
     public $timeZone;
@@ -150,9 +150,9 @@ class DateValidator extends Validator
     /**
      * @var string the timezone to use when populating the [[timestampAttribute]] with [[timestampAttributeFormat]]. Defaults to `UTC`.
      *
-     * This can be any value that may be passed to [date_default_timezone_set()](https://secure.php.net/manual/en/function.date-default-timezone-set.php)
+     * This can be any value that may be passed to [date_default_timezone_set()](https://www.php.net/manual/en/function.date-default-timezone-set.php)
      * e.g. `UTC`, `Europe/Berlin` or `America/Chicago`.
-     * Refer to the [php manual](https://secure.php.net/manual/en/timezones.php) for available timezones.
+     * Refer to the [php manual](https://www.php.net/manual/en/timezones.php) for available timezones.
      *
      * If [[timestampAttributeFormat]] is not set, this property will be ignored.
      * @see timestampAttributeFormat
diff --git a/framework/validators/ExistValidator.php b/framework/validators/ExistValidator.php
index 679bf57d26b..4b7d94f3861 100644
--- a/framework/validators/ExistValidator.php
+++ b/framework/validators/ExistValidator.php
@@ -133,7 +133,9 @@ private function checkTargetRelationExistence($model, $attribute)
 
         $connection = $model::getDb();
         if ($this->forceMasterDb && method_exists($connection, 'useMaster')) {
-            $exists = $connection->useMaster([$relationQuery, 'exists']);
+            $exists = $connection->useMaster(function() use ($relationQuery) {
+                return $relationQuery->exists();
+            });
         } else {
             $exists = $relationQuery->exists();
         }
diff --git a/framework/validators/FileValidator.php b/framework/validators/FileValidator.php
index d67934ffd74..7a7f5c5c42b 100644
--- a/framework/validators/FileValidator.php
+++ b/framework/validators/FileValidator.php
@@ -62,8 +62,8 @@ class FileValidator extends Validator
      * Defaults to null, meaning no limit.
      * Note, the size limit is also affected by `upload_max_filesize` and `post_max_size` INI setting
      * and the 'MAX_FILE_SIZE' hidden field value. See [[getSizeLimit()]] for details.
-     * @see https://secure.php.net/manual/en/ini.core.php#ini.upload-max-filesize
-     * @see https://secure.php.net/post-max-size
+     * @see https://www.php.net/manual/en/ini.core.php#ini.upload-max-filesize
+     * @see https://www.php.net/post-max-size
      * @see getSizeLimit
      * @see tooBig for the customized message for a file that is too big.
      */
@@ -77,7 +77,7 @@ class FileValidator extends Validator
      * > Note: The maximum number of files allowed to be uploaded simultaneously is
      * also limited with PHP directive `max_file_uploads`, which defaults to 20.
      *
-     * @see https://secure.php.net/manual/en/ini.core.php#ini.max-file-uploads
+     * @see https://www.php.net/manual/en/ini.core.php#ini.max-file-uploads
      * @see tooMany for the customized message when too many files are uploaded.
      */
     public $maxFiles = 1;
diff --git a/framework/validators/UniqueValidator.php b/framework/validators/UniqueValidator.php
index 7aa1e8131a4..f383ec9afc3 100644
--- a/framework/validators/UniqueValidator.php
+++ b/framework/validators/UniqueValidator.php
@@ -191,10 +191,10 @@ private function modelExists($targetClass, $conditions, $model)
                 // only select primary key to optimize query
                 $columnsCondition = array_flip($targetClass::primaryKey());
                 $query->select(array_flip($this->applyTableAlias($query, $columnsCondition)));
-                
+
                 // any with relation can't be loaded because related fields are not selected
                 $query->with = null;
-    
+
                 if (is_array($query->joinWith)) {
                     // any joinWiths need to have eagerLoading turned off to prevent related fields being loaded
                     foreach ($query->joinWith as &$joinWith) {
@@ -321,7 +321,7 @@ private function applyTableAlias($query, $conditions, $alias = null)
         foreach ($conditions as $columnName => $columnValue) {
             if (strpos($columnName, '(') === false) {
                 $columnName = preg_replace('/^' . preg_quote($alias) . '\.(.*)$/', '$1', $columnName);
-                if (strpos($columnName, '[[') === 0) {
+                if (strncmp($columnName, '[[', 2) === 0) {
                     $prefixedColumn = "{$alias}.{$columnName}";
                 } else {
                     $prefixedColumn = "{$alias}.[[{$columnName}]]";
diff --git a/framework/web/AssetBundle.php b/framework/web/AssetBundle.php
index d04ad40eba6..aca626cd4d9 100644
--- a/framework/web/AssetBundle.php
+++ b/framework/web/AssetBundle.php
@@ -16,7 +16,7 @@
  * AssetBundle represents a collection of asset files, such as CSS, JS, images.
  *
  * Each asset bundle has a unique name that globally identifies it among all asset bundles used in an application.
- * The name is the [fully qualified class name](https://secure.php.net/manual/en/language.namespaces.rules.php)
+ * The name is the [fully qualified class name](https://www.php.net/manual/en/language.namespaces.rules.php)
  * of the class representing it.
  *
  * An asset bundle can depend on other asset bundles. When registering an asset bundle
@@ -40,7 +40,7 @@ class AssetBundle extends BaseObject
      * If you do not set this property, it means the source asset files are located under [[basePath]].
      *
      * You can use either a directory or an alias of the directory.
-     * @see $publishOptions
+     * @see publishOptions
      */
     public $sourcePath;
     /**
diff --git a/framework/web/CompositeUrlRule.php b/framework/web/CompositeUrlRule.php
index d707c64ccc4..550a6d7e738 100644
--- a/framework/web/CompositeUrlRule.php
+++ b/framework/web/CompositeUrlRule.php
@@ -132,8 +132,8 @@ protected function iterateRules($rules, $manager, $route, $params)
      *
      * @return null|int Status of the URL creation after the last [[createUrl()]] call. `null` if rule does not provide
      * info about create status.
-     * @see $createStatus
-     * @see https://secure.php.net/manual/en/language.operators.bitwise.php
+     * @see createStatus
+     * @see https://www.php.net/manual/en/language.operators.bitwise.php
      * @since 2.0.12
      */
     public function getCreateUrlStatus()
diff --git a/framework/web/Controller.php b/framework/web/Controller.php
index b52cf80c9e1..2913e1993e4 100644
--- a/framework/web/Controller.php
+++ b/framework/web/Controller.php
@@ -177,7 +177,12 @@ public function bindActionParams($action, $params)
                 }
                 $args[] = $actionParams[$name] = $params[$name];
                 unset($params[$name]);
-            } elseif (PHP_VERSION_ID >= 70100 && ($type = $param->getType()) !== null && !$type->isBuiltin()) {
+            } elseif (
+                PHP_VERSION_ID >= 70100
+                && ($type = $param->getType()) !== null
+                && $type instanceof \ReflectionNamedType
+                && !$type->isBuiltin()
+            ) {
                 try {
                     $this->bindInjectedParams($type, $name, $args, $requestedParams);
                 } catch (HttpException $e) {
diff --git a/framework/web/Cookie.php b/framework/web/Cookie.php
index 84b694b4768..434e5cdf299 100644
--- a/framework/web/Cookie.php
+++ b/framework/web/Cookie.php
@@ -22,7 +22,7 @@ class Cookie extends \yii\base\BaseObject
      * during CSRF-prone request methods (e.g. POST, PUT, PATCH etc).
      * E.g. a POST request from https://otherdomain.com to https://yourdomain.com will not include the cookie, however a GET request will.
      * When a user follows a link from https://otherdomain.com to https://yourdomain.com it will include the cookie
-     * @see $sameSite
+     * @see sameSite
      */
     const SAME_SITE_LAX = 'Lax';
     /**
@@ -30,7 +30,7 @@ class Cookie extends \yii\base\BaseObject
      * regardless of the request method and even when following a regular link.
      * E.g. a GET request from https://otherdomain.com to https://yourdomain.com or a user following a link from
      * https://otherdomain.com to https://yourdomain.com will not include the cookie.
-     * @see $sameSite
+     * @see sameSite
      */
     const SAME_SITE_STRICT = 'Strict';
     /**
@@ -38,8 +38,8 @@ class Cookie extends \yii\base\BaseObject
      * i.e in responses to both first-party and cross-origin requests.
      * E.g. a POST request from https://otherdomain.com to https://yourdomain.com will include the cookie.
      * Note: If `sameSite` is set to None, the `secure` attribute must be set to `true` (otherwise the cookie will be blocked by the browser).
-     * @see $sameSite
-     * @see $secure
+     * @see sameSite
+     * @see secure
      * @since 2.0.43
      */
     const SAME_SITE_NONE = 'None';
diff --git a/framework/web/DbSession.php b/framework/web/DbSession.php
index d1ff105930b..d82484a4435 100644
--- a/framework/web/DbSession.php
+++ b/framework/web/DbSession.php
@@ -206,7 +206,7 @@ public function writeSession($id, $data)
         }
 
         // exception must be caught in session write handler
-        // https://secure.php.net/manual/en/function.session-set-save-handler.php#refsect1-function.session-set-save-handler-notes
+        // https://www.php.net/manual/en/function.session-set-save-handler.php#refsect1-function.session-set-save-handler-notes
         try {
             // ensure backwards compatability (fixed #9438)
             if ($this->writeCallback && !$this->fields) {
diff --git a/framework/web/ErrorAction.php b/framework/web/ErrorAction.php
index 81f06b643f7..67bd8a6d413 100644
--- a/framework/web/ErrorAction.php
+++ b/framework/web/ErrorAction.php
@@ -76,7 +76,7 @@ class ErrorAction extends Action
 
     /**
      * @var \Exception the exception object, normally is filled on [[init()]] method call.
-     * @see [[findException()]] to know default way of obtaining exception.
+     * @see findException() to know default way of obtaining exception.
      * @since 2.0.11
      */
     protected $exception;
diff --git a/framework/web/ErrorHandler.php b/framework/web/ErrorHandler.php
index 0d573ad7927..5bb28dec3ee 100644
--- a/framework/web/ErrorHandler.php
+++ b/framework/web/ErrorHandler.php
@@ -401,7 +401,7 @@ public function createServerInformationLink()
             'http://lighttpd.net/' => ['lighttpd'],
             'http://gwan.com/' => ['g-wan', 'gwan'],
             'http://iis.net/' => ['iis', 'services'],
-            'https://secure.php.net/manual/en/features.commandline.webserver.php' => ['development'],
+            'https://www.php.net/manual/en/features.commandline.webserver.php' => ['development'],
         ];
         if (isset($_SERVER['SERVER_SOFTWARE'])) {
             foreach ($serverUrls as $url => $keywords) {
diff --git a/framework/web/HeaderCollection.php b/framework/web/HeaderCollection.php
index ee33a2795bd..0e03214511e 100644
--- a/framework/web/HeaderCollection.php
+++ b/framework/web/HeaderCollection.php
@@ -180,7 +180,7 @@ public function toArray()
      */
     public function fromArray(array $array)
     {
-        $this->_headers = $array;
+        $this->_headers = array_change_key_case($array, CASE_LOWER);
     }
 
     /**
diff --git a/framework/web/JsonResponseFormatter.php b/framework/web/JsonResponseFormatter.php
index cb847c36e8d..2218ca0d9ab 100644
--- a/framework/web/JsonResponseFormatter.php
+++ b/framework/web/JsonResponseFormatter.php
@@ -26,6 +26,7 @@
  *         \yii\web\Response::FORMAT_JSON => [
  *              'class' => 'yii\web\JsonResponseFormatter',
  *              'prettyPrint' => YII_DEBUG, // use "pretty" output in debug mode
+ *              'keepObjectType' => false, // keep object type for zero-indexed objects
  *              // ...
  *         ],
  *     ],
@@ -67,7 +68,7 @@ class JsonResponseFormatter extends Component implements ResponseFormatterInterf
     public $useJsonp = false;
     /**
      * @var int the encoding options passed to [[Json::encode()]]. For more details please refer to
-     * <https://secure.php.net/manual/en/function.json-encode.php>.
+     * <https://www.php.net/manual/en/function.json-encode.php>.
      * Default is `JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE`.
      * This property has no effect, when [[useJsonp]] is `true`.
      * @since 2.0.7
@@ -82,6 +83,13 @@ class JsonResponseFormatter extends Component implements ResponseFormatterInterf
      */
     public $prettyPrint = false;
 
+    /**
+     * @var bool Avoids objects with zero-indexed keys to be encoded as array
+     * Json::encode((object)['test']) will be encoded as an object not array. This matches the behaviour of json_encode().
+     * Defaults to Json::$keepObjectType value
+     * @since 2.0.44
+     */
+    public $keepObjectType;
 
     /**
      * Formats the specified response.
@@ -97,7 +105,7 @@ public function format($response)
             $this->contentType .= '; charset=UTF-8';
         }
         $response->getHeaders()->set('Content-Type', $this->contentType);
-  
+
         if ($this->useJsonp) {
             $this->formatJsonp($response);
         } else {
@@ -116,7 +124,16 @@ protected function formatJson($response)
             if ($this->prettyPrint) {
                 $options |= JSON_PRETTY_PRINT;
             }
+
+            $default = Json::$keepObjectType;
+            if ($this->keepObjectType !== null) {
+                Json::$keepObjectType = $this->keepObjectType;
+            }
+
             $response->content = Json::encode($response->data, $options);
+
+            // Restore default value to avoid any unexpected behaviour
+            Json::$keepObjectType = $default;
         } elseif ($response->content === null) {
             $response->content = 'null';
         }
diff --git a/framework/web/Request.php b/framework/web/Request.php
index 51dd502ba1b..bcaeb03af51 100644
--- a/framework/web/Request.php
+++ b/framework/web/Request.php
@@ -208,7 +208,7 @@ class Request extends \yii\base\Request
      * See [[IpValidator::::setRanges()|IpValidator::setRanges()]]
      * and [[IpValidator::networks]] for advanced matching.
      *
-     * @see $secureHeaders
+     * @see secureHeaders
      * @since 2.0.13
      */
     public $trustedHosts = [];
@@ -218,8 +218,8 @@ class Request extends \yii\base\Request
      * If the list contains the `Forwarded` header, processing will be done according to RFC 7239.
      * The match of header names is case-insensitive.
      * @see https://en.wikipedia.org/wiki/List_of_HTTP_header_fields
-     * @see https://tools.ietf.org/html/rfc7239
-     * @see $trustedHosts
+     * @see https://datatracker.ietf.org/doc/html/rfc7239
+     * @see trustedHosts
      * @since 2.0.13
      */
     public $secureHeaders = [
@@ -240,8 +240,8 @@ class Request extends \yii\base\Request
      * It's not advisable to put insecure headers here.
      * To use the `Forwarded` header according to RFC 7239, the header must be added to [[secureHeaders]] list.
      * The match of header names is case-insensitive.
-     * @see $trustedHosts
-     * @see $secureHeaders
+     * @see trustedHosts
+     * @see secureHeaders
      * @since 2.0.13
      */
     public $ipHeaders = [
@@ -252,8 +252,8 @@ class Request extends \yii\base\Request
      * The array keys are header names and the array value is a list of header values that indicate a secure connection.
      * The match of header names and values is case-insensitive.
      * It's not advisable to put insecure headers here.
-     * @see $trustedHosts
-     * @see $secureHeaders
+     * @see trustedHosts
+     * @see secureHeaders
      * @since 2.0.13
      */
     public $secureProtocolHeaders = [
@@ -554,7 +554,7 @@ public function setRawBody($rawBody)
      * Request parameters are determined using the parsers configured in [[parsers]] property.
      * If no parsers are configured for the current [[contentType]] it uses the PHP function `mb_parse_str()`
      * to parse the [[rawBody|request body]].
-     * @return array the request parameters given in the request body.
+     * @return array|object the request parameters given in the request body.
      * @throws \yii\base\InvalidConfigException if a registered parser does not implement the [[RequestParserInterface]].
      * @see getMethod()
      * @see getBodyParam()
@@ -723,7 +723,7 @@ public function getQueryParam($name, $defaultValue = null)
      *
      * By default this value is based on the user request information. This method will
      * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not.
-     * You may want to check out the [PHP documentation](https://secure.php.net/manual/en/reserved.variables.server.php)
+     * You may want to check out the [PHP documentation](https://www.php.net/manual/en/reserved.variables.server.php)
      * for more information on these variables.
      *
      * You may explicitly specify it by setting the [[setHostInfo()|hostInfo]] property.
@@ -1171,7 +1171,7 @@ public function getUserAgent()
     /**
      * Returns the user IP address from [[ipHeaders]].
      * @return string|null user IP address, null if not available
-     * @see $ipHeaders
+     * @see ipHeaders
      * @since 2.0.28
      */
     protected function getUserIpFromIpHeaders()
@@ -1216,9 +1216,9 @@ public function getUserIP()
      *
      * @param string $ips comma separated IP list
      * @return string|null IP as string. Null is returned if IP can not be determined from header.
-     * @see $getUserHost
-     * @see $ipHeader
-     * @see $trustedHeaders
+     * @see getUserHost()
+     * @see ipHeaders
+     * @see getTrustedHeaders()
      * @since 2.0.28
      */
     protected function getUserIpFromIpHeader($ips)
diff --git a/framework/web/Session.php b/framework/web/Session.php
index a7de39f1824..5ac99277f50 100644
--- a/framework/web/Session.php
+++ b/framework/web/Session.php
@@ -101,7 +101,7 @@ class Session extends Component implements \IteratorAggregate, \ArrayAccess, \Co
     /**
      * @var array parameter-value pairs to override default session cookie parameters that are used for session_set_cookie_params() function
      * Array may have the following possible keys: 'lifetime', 'path', 'domain', 'secure', 'httponly'
-     * @see https://secure.php.net/manual/en/function.session-set-cookie-params.php
+     * @see https://www.php.net/manual/en/function.session-set-cookie-params.php
      */
     private $_cookieParams = ['httponly' => true];
     /**
@@ -294,7 +294,7 @@ public function setHasSessionId($value)
 
     /**
      * Gets the session ID.
-     * This is a wrapper for [PHP session_id()](https://secure.php.net/manual/en/function.session-id.php).
+     * This is a wrapper for [PHP session_id()](https://www.php.net/manual/en/function.session-id.php).
      * @return string the current session ID
      */
     public function getId()
@@ -304,7 +304,7 @@ public function getId()
 
     /**
      * Sets the session ID.
-     * This is a wrapper for [PHP session_id()](https://secure.php.net/manual/en/function.session-id.php).
+     * This is a wrapper for [PHP session_id()](https://www.php.net/manual/en/function.session-id.php).
      * @param string $value the session ID for the current session
      */
     public function setId($value)
@@ -315,7 +315,7 @@ public function setId($value)
     /**
      * Updates the current session ID with a newly generated one.
      *
-     * Please refer to <https://secure.php.net/session_regenerate_id> for more details.
+     * Please refer to <https://www.php.net/session_regenerate_id> for more details.
      *
      * This method has no effect when session is not [[getIsActive()|active]].
      * Make sure to call [[open()]] before calling it.
@@ -339,7 +339,7 @@ public function regenerateID($deleteOldSession = false)
 
     /**
      * Gets the name of the current session.
-     * This is a wrapper for [PHP session_name()](https://secure.php.net/manual/en/function.session-name.php).
+     * This is a wrapper for [PHP session_name()](https://www.php.net/manual/en/function.session-name.php).
      * @return string the current session name
      */
     public function getName()
@@ -349,7 +349,7 @@ public function getName()
 
     /**
      * Sets the name for the current session.
-     * This is a wrapper for [PHP session_name()](https://secure.php.net/manual/en/function.session-name.php).
+     * This is a wrapper for [PHP session_name()](https://www.php.net/manual/en/function.session-name.php).
      * @param string $value the session name for the current session, must be an alphanumeric string.
      * It defaults to "PHPSESSID".
      */
@@ -362,7 +362,7 @@ public function setName($value)
 
     /**
      * Gets the current session save path.
-     * This is a wrapper for [PHP session_save_path()](https://secure.php.net/manual/en/function.session-save-path.php).
+     * This is a wrapper for [PHP session_save_path()](https://www.php.net/manual/en/function.session-save-path.php).
      * @return string the current session save path, defaults to '/tmp'.
      */
     public function getSavePath()
@@ -372,7 +372,7 @@ public function getSavePath()
 
     /**
      * Sets the current session save path.
-     * This is a wrapper for [PHP session_save_path()](https://secure.php.net/manual/en/function.session-save-path.php).
+     * This is a wrapper for [PHP session_save_path()](https://www.php.net/manual/en/function.session-save-path.php).
      * @param string $value the current session save path. This can be either a directory name or a [path alias](guide:concept-aliases).
      * @throws InvalidArgumentException if the path is not a valid directory
      */
@@ -388,7 +388,7 @@ public function setSavePath($value)
 
     /**
      * @return array the session cookie parameters.
-     * @see https://secure.php.net/manual/en/function.session-get-cookie-params.php
+     * @see https://www.php.net/manual/en/function.session-get-cookie-params.php
      */
     public function getCookieParams()
     {
@@ -411,7 +411,7 @@ public function getCookieParams()
      * See https://www.owasp.org/index.php/SameSite for more information about `sameSite`.
      *
      * @throws InvalidArgumentException if the parameters are incomplete.
-     * @see https://secure.php.net/manual/en/function.session-set-cookie-params.php
+     * @see https://www.php.net/manual/en/function.session-set-cookie-params.php
      */
     public function setCookieParams(array $value)
     {
@@ -422,7 +422,7 @@ public function setCookieParams(array $value)
      * Sets the session cookie parameters.
      * This method is called by [[open()]] when it is about to open the session.
      * @throws InvalidArgumentException if the parameters are incomplete.
-     * @see https://secure.php.net/manual/en/function.session-set-cookie-params.php
+     * @see https://www.php.net/manual/en/function.session-set-cookie-params.php
      */
     private function setCookieParamsInternal()
     {
@@ -548,7 +548,7 @@ public function setTimeout($value)
     }
 
     /**
-     * @var bool Whether strict mode is enabled or not.
+     * @param bool $value Whether strict mode is enabled or not.
      * When `true` this setting prevents the session component to use an uninitialized session ID.
      * Note: Enabling `useStrictMode` on PHP < 5.5.2 is only supported with custom storage classes.
      * Warning! Although enabling strict mode is mandatory for secure sessions, the default value of 'session.use-strict-mode' is `0`.
@@ -961,7 +961,7 @@ public function hasFlash($key)
 
     /**
      * This method is required by the interface [[\ArrayAccess]].
-     * @param mixed $offset the offset to check on
+     * @param int|string $offset the offset to check on
      * @return bool
      */
     public function offsetExists($offset)
@@ -973,7 +973,7 @@ public function offsetExists($offset)
 
     /**
      * This method is required by the interface [[\ArrayAccess]].
-     * @param int $offset the offset to retrieve element.
+     * @param int|string $offset the offset to retrieve element.
      * @return mixed the element at the offset, null if no element is found at the offset
      */
     public function offsetGet($offset)
@@ -985,7 +985,7 @@ public function offsetGet($offset)
 
     /**
      * This method is required by the interface [[\ArrayAccess]].
-     * @param int $offset the offset to set element
+     * @param int|string $offset the offset to set element
      * @param mixed $item the element value
      */
     public function offsetSet($offset, $item)
@@ -996,7 +996,7 @@ public function offsetSet($offset, $item)
 
     /**
      * This method is required by the interface [[\ArrayAccess]].
-     * @param mixed $offset the offset to unset element
+     * @param int|string $offset the offset to unset element
      */
     public function offsetUnset($offset)
     {
diff --git a/framework/web/UploadedFile.php b/framework/web/UploadedFile.php
index ed8fa111b89..a6609703cd5 100644
--- a/framework/web/UploadedFile.php
+++ b/framework/web/UploadedFile.php
@@ -54,7 +54,7 @@ class UploadedFile extends BaseObject
     public $size;
     /**
      * @var int an error code describing the status of this file uploading.
-     * @see https://secure.php.net/manual/en/features.file-upload.errors.php
+     * @see https://www.php.net/manual/en/features.file-upload.errors.php
      */
     public $error;
 
diff --git a/framework/web/UrlNormalizerRedirectException.php b/framework/web/UrlNormalizerRedirectException.php
index 195d45b8fd4..88147cf3a48 100644
--- a/framework/web/UrlNormalizerRedirectException.php
+++ b/framework/web/UrlNormalizerRedirectException.php
@@ -18,12 +18,12 @@ class UrlNormalizerRedirectException extends \yii\base\Exception
 {
     /**
      * @var array|string the parameter to be used to generate a valid URL for redirection
-     * @see [[\yii\helpers\Url::to()]]
+     * @see \yii\helpers\Url::to()
      */
     public $url;
     /**
      * @var bool|string the URI scheme to use in the generated URL for redirection
-     * @see [[\yii\helpers\Url::to()]]
+     * @see \yii\helpers\Url::to()
      */
     public $scheme;
     /**
diff --git a/framework/web/UrlRule.php b/framework/web/UrlRule.php
index 25d3cd81faf..84719ecdad9 100644
--- a/framework/web/UrlRule.php
+++ b/framework/web/UrlRule.php
@@ -42,27 +42,27 @@ class UrlRule extends BaseObject implements UrlRuleInterface
     const CREATION_ONLY = 2;
     /**
      * Represents the successful URL generation by last [[createUrl()]] call.
-     * @see $createStatus
+     * @see createStatus
      * @since 2.0.12
      */
     const CREATE_STATUS_SUCCESS = 0;
     /**
      * Represents the unsuccessful URL generation by last [[createUrl()]] call, because rule does not support
      * creating URLs.
-     * @see $createStatus
+     * @see createStatus
      * @since 2.0.12
      */
     const CREATE_STATUS_PARSING_ONLY = 1;
     /**
      * Represents the unsuccessful URL generation by last [[createUrl()]] call, because of mismatched route.
-     * @see $createStatus
+     * @see createStatus
      * @since 2.0.12
      */
     const CREATE_STATUS_ROUTE_MISMATCH = 2;
     /**
      * Represents the unsuccessful URL generation by last [[createUrl()]] call, because of mismatched
      * or missing parameters.
-     * @see $createStatus
+     * @see createStatus
      * @since 2.0.12
      */
     const CREATE_STATUS_PARAMS_MISMATCH = 4;
@@ -543,7 +543,7 @@ public function createUrl($manager, $route, $params)
      *
      * @return null|int Status of the URL creation after the last [[createUrl()]] call. `null` if rule does not provide
      * info about create status.
-     * @see $createStatus
+     * @see createStatus
      * @since 2.0.12
      */
     public function getCreateUrlStatus()
diff --git a/framework/web/User.php b/framework/web/User.php
index 1aa791b6f67..863b6d4b428 100644
--- a/framework/web/User.php
+++ b/framework/web/User.php
@@ -728,6 +728,10 @@ protected function renewAuthStatus()
                 $this->renewIdentityCookie();
             }
         }
+
+        if ($this->getIdentity(false) === null) {
+            $this->switchIdentity(null);
+        }
     }
 
     /**
diff --git a/framework/web/View.php b/framework/web/View.php
index 3d2f1e6dd3a..15a8f7b12df 100644
--- a/framework/web/View.php
+++ b/framework/web/View.php
@@ -133,6 +133,12 @@ class View extends \yii\base\View
 
     private $_assetManager;
 
+    /**
+     * Whether [[endPage()]] has been called and all files have been registered
+     * @var bool
+     */
+    private $_isPageEnded = false;
+
 
     /**
      * Marks the position of an HTML head section.
@@ -174,6 +180,8 @@ public function endPage($ajaxMode = false)
     {
         $this->trigger(self::EVENT_END_PAGE);
 
+        $this->_isPageEnded = true;
+
         $content = ob_get_clean();
 
         echo strtr($content, [
@@ -490,6 +498,10 @@ private function registerFile($type, $url, $options = [], $key = null)
         }
         $appendTimestamp = ArrayHelper::remove($options, 'appendTimestamp', $assetManagerAppendTimestamp);
 
+        if ($this->_isPageEnded) {
+            Yii::warning('You\'re trying to register a file after View::endPage() has been called');
+        }
+
         if (empty($depends)) {
             // register directly without AssetManager
             if ($appendTimestamp && Url::isRelative($url)) {
diff --git a/framework/web/XmlResponseFormatter.php b/framework/web/XmlResponseFormatter.php
index 40e9776bc72..e250cb4ab5e 100644
--- a/framework/web/XmlResponseFormatter.php
+++ b/framework/web/XmlResponseFormatter.php
@@ -10,7 +10,6 @@
 use DOMDocument;
 use DOMElement;
 use DOMException;
-use DOMText;
 use yii\base\Arrayable;
 use yii\base\Component;
 use yii\helpers\StringHelper;
@@ -38,7 +37,10 @@ class XmlResponseFormatter extends Component implements ResponseFormatterInterfa
      */
     public $encoding;
     /**
-     * @var string the name of the root element. If set to false, null or is empty then no root tag should be added.
+     * @var string|string[]|false the name of the root element. If set to false, null or is empty then no root tag
+     * should be added.
+     *
+     * Since 2.0.44 URI namespace could be specified by passing `[namespace, tag name]` array.
      */
     public $rootTag = 'response';
     /**
@@ -52,14 +54,26 @@ class XmlResponseFormatter extends Component implements ResponseFormatterInterfa
      */
     public $useTraversableAsArray = true;
     /**
-     * @var bool if object tags should be added
+     * @var bool if object class names should be used as tag names
      * @since 2.0.11
      */
     public $useObjectTags = true;
+    /**
+     * @var bool if true, converts object tags to lowercase, `$useObjectTags` must be enabled
+     * @since 2.0.43
+     */
+    public $objectTagToLowercase = false;
+
+    /**
+     * @var DOMDocument the XML document, serves as the root of the document tree
+     * @since 2.0.43
+     */
+    protected $dom;
 
 
     /**
      * Formats the specified response.
+     *
      * @param Response $response the response to be formatted.
      */
     public function format($response)
@@ -70,21 +84,27 @@ public function format($response)
         }
         $response->getHeaders()->set('Content-Type', $this->contentType);
         if ($response->data !== null) {
-            $dom = new DOMDocument($this->version, $charset);
+            $this->dom = new DOMDocument($this->version, $charset);
             if (!empty($this->rootTag)) {
-                $root = new DOMElement($this->rootTag);
-                $dom->appendChild($root);
+                if (is_array($this->rootTag)) {
+                    $root = $this->dom->createElementNS($this->rootTag[0], $this->rootTag[1]);
+                } else {
+                    $root = $this->dom->createElement($this->rootTag);
+                }
+                $this->dom->appendChild($root);
                 $this->buildXml($root, $response->data);
             } else {
-                $this->buildXml($dom, $response->data);
+                $this->buildXml($this->dom, $response->data);
             }
-            $response->content = $dom->saveXML();
+            $response->content = $this->dom->saveXML();
         }
     }
 
     /**
-     * @param DOMElement $element
-     * @param mixed $data
+     * Recursively adds data to XML document.
+     *
+     * @param DOMElement|DOMDocument $element current element
+     * @param mixed $data content of the current element
      */
     protected function buildXml($element, $data)
     {
@@ -95,18 +115,22 @@ protected function buildXml($element, $data)
                 if (is_int($name) && is_object($value)) {
                     $this->buildXml($element, $value);
                 } elseif (is_array($value) || is_object($value)) {
-                    $child = new DOMElement($this->getValidXmlElementName($name));
+                    $child = $this->dom->createElement($this->getValidXmlElementName($name));
                     $element->appendChild($child);
                     $this->buildXml($child, $value);
                 } else {
-                    $child = new DOMElement($this->getValidXmlElementName($name));
+                    $child = $this->dom->createElement($this->getValidXmlElementName($name));
+                    $child->appendChild($this->dom->createTextNode($this->formatScalarValue($value)));
                     $element->appendChild($child);
-                    $child->appendChild(new DOMText($this->formatScalarValue($value)));
                 }
             }
         } elseif (is_object($data)) {
             if ($this->useObjectTags) {
-                $child = new DOMElement(StringHelper::basename(get_class($data)));
+                $name = StringHelper::basename(get_class($data));
+                if ($this->objectTagToLowercase) {
+                    $name = strtolower($name);
+                }
+                $child = $this->dom->createElement($name);
                 $element->appendChild($child);
             } else {
                 $child = $element;
@@ -121,7 +145,7 @@ protected function buildXml($element, $data)
                 $this->buildXml($child, $array);
             }
         } else {
-            $element->appendChild(new DOMText($this->formatScalarValue($data)));
+            $element->appendChild($this->dom->createTextNode($this->formatScalarValue($data)));
         }
     }
 
@@ -152,7 +176,7 @@ protected function formatScalarValue($value)
      *
      * Falls back to [[itemTag]] otherwise.
      *
-     * @param mixed $name
+     * @param mixed $name the original name
      * @return string
      * @since 2.0.12
      */
@@ -168,7 +192,7 @@ protected function getValidXmlElementName($name)
     /**
      * Checks if name is valid to be used in XML.
      *
-     * @param mixed $name
+     * @param mixed $name the name to test
      * @return bool
      * @see http://stackoverflow.com/questions/2519845/how-to-check-if-string-is-a-valid-xml-element-name/2519943#2519943
      * @since 2.0.12
@@ -176,8 +200,7 @@ protected function getValidXmlElementName($name)
     protected function isValidXmlName($name)
     {
         try {
-            new DOMElement($name);
-            return true;
+            return $this->dom->createElement($name) !== false;
         } catch (DOMException $e) {
             return false;
         }
diff --git a/framework/widgets/ActiveField.php b/framework/widgets/ActiveField.php
index 484d2998be4..9d86aeebab0 100644
--- a/framework/widgets/ActiveField.php
+++ b/framework/widgets/ActiveField.php
@@ -20,6 +20,8 @@
  *
  * For more details and usage information on ActiveField, see the [guide article on forms](guide:input-forms).
  *
+ * @property-read string $inputId The attribute `id` of the input element
+ *
  * @author Qiang Xue <qiang.xue@gmail.com>
  * @since 2.0
  */
@@ -306,7 +308,7 @@ public function label($label = null, $options = [])
      *   See also [[\yii\helpers\Html::tag()]].
      *
      * If you set a custom `id` for the error element, you may need to adjust the [[$selectors]] accordingly.
-     * @see $errorOptions
+     * @see errorOptions
      * @return $this the field object itself.
      */
     public function error($options = [])
@@ -925,11 +927,14 @@ protected function getInputId()
      */
     protected function addAriaAttributes(&$options)
     {
+        // Get proper attribute name when attribute name is tabular.
+        $attributeName = Html::getAttributeName($this->attribute);
+
         if ($this->addAriaAttributes) {
-            if (!isset($options['aria-required']) && $this->model->isAttributeRequired($this->attribute)) {
+            if (!isset($options['aria-required']) && $this->model->isAttributeRequired($attributeName)) {
                 $options['aria-required'] = 'true';
             }
-            if (!isset($options['aria-invalid']) && $this->model->hasErrors($this->attribute)) {
+            if (!isset($options['aria-invalid']) && $this->model->hasErrors($attributeName)) {
                 $options['aria-invalid'] = 'true';
             }
         }
diff --git a/framework/widgets/Menu.php b/framework/widgets/Menu.php
index d9775d602d4..7e60700ccfd 100644
--- a/framework/widgets/Menu.php
+++ b/framework/widgets/Menu.php
@@ -306,7 +306,7 @@ protected function isItemActive($item)
     {
         if (isset($item['url']) && is_array($item['url']) && isset($item['url'][0])) {
             $route = Yii::getAlias($item['url'][0]);
-            if (strpos($route, '/') !== 0 && Yii::$app->controller) {
+            if (strncmp($route, '/', 1) !== 0 && Yii::$app->controller) {
                 $route = Yii::$app->controller->module->getUniqueId() . '/' . $route;
             }
             if (ltrim($route, '/') !== $this->route) {
diff --git a/tests/data/ar/CroppedType.php b/tests/data/ar/CroppedType.php
new file mode 100644
index 00000000000..92922a7e1fe
--- /dev/null
+++ b/tests/data/ar/CroppedType.php
@@ -0,0 +1,33 @@
+<?php
+/**
+ * @link http://www.yiiframework.com/
+ * @copyright Copyright (c) 2008 Yii Software LLC
+ * @license http://www.yiiframework.com/license/
+ */
+
+namespace yiiunit\data\ar;
+
+/**
+ * Model representing 2 columns from "type" table.
+ *
+ * @property int $int_col
+ * @property int $int_col2 DEFAULT 1
+ */
+class CroppedType extends ActiveRecord
+{
+    /**
+     * @inheritDoc
+     */
+    public static function tableName()
+    {
+        return '{{%type}}';
+    }
+
+    /**
+     * @inheritDoc
+     */
+    public function attributes()
+    {
+        return ['int_col', 'int_col2'];
+    }
+}
diff --git a/tests/data/base/ArrayAccessObject.php b/tests/data/base/ArrayAccessObject.php
index 79a66dece6b..bf62ef2b0e9 100644
--- a/tests/data/base/ArrayAccessObject.php
+++ b/tests/data/base/ArrayAccessObject.php
@@ -19,7 +19,7 @@ class ArrayAccessObject extends TraversableObject implements \ArrayAccess
     /**
      * Whether a offset exists
      *
-     * @link https://secure.php.net/manual/en/arrayaccess.offsetexists.php
+     * @link https://www.php.net/manual/en/arrayaccess.offsetexists.php
      * @param mixed $offset <p>
      * An offset to check for.
      * </p>
@@ -37,7 +37,7 @@ public function offsetExists($offset)
     /**
      * Offset to retrieve
      *
-     * @link https://secure.php.net/manual/en/arrayaccess.offsetget.php
+     * @link https://www.php.net/manual/en/arrayaccess.offsetget.php
      * @param mixed $offset <p>
      * The offset to retrieve.
      * </p>
@@ -52,7 +52,7 @@ public function offsetGet($offset)
     /**
      * Offset to set
      *
-     * @link https://secure.php.net/manual/en/arrayaccess.offsetset.php
+     * @link https://www.php.net/manual/en/arrayaccess.offsetset.php
      * @param mixed $offset <p>
      * The offset to assign the value to.
      * </p>
@@ -70,7 +70,7 @@ public function offsetSet($offset, $value)
     /**
      * Offset to unset
      *
-     * @link https://secure.php.net/manual/en/arrayaccess.offsetunset.php
+     * @link https://www.php.net/manual/en/arrayaccess.offsetunset.php
      * @param mixed $offset <p>
      * The offset to unset.
      * </p>
diff --git a/tests/data/console/migrate_create/create_id_field_not_as_pk.php b/tests/data/console/migrate_create/create_id_field_not_as_pk.php
new file mode 100644
index 00000000000..0cefcb33679
--- /dev/null
+++ b/tests/data/console/migrate_create/create_id_field_not_as_pk.php
@@ -0,0 +1,37 @@
+<?php
+/**
+ * @link http://www.yiiframework.com/
+ * @copyright Copyright (c) 2008 Yii Software LLC
+ * @license http://www.yiiframework.com/license/
+ */
+
+return <<<CODE
+<?php
+
+{$namespace}use yii\db\Migration;
+
+/**
+ * Handles the creation of table `{{%{table}}}`.
+ */
+class {$class} extends Migration
+{
+    /**
+     * {@inheritdoc}
+     */
+    public function safeUp()
+    {
+        \$this->createTable('{{%{table}}}', [
+            'id' => \$this->integer(11)->notNull(),
+        ]);
+    }
+
+    /**
+     * {@inheritdoc}
+     */
+    public function safeDown()
+    {
+        \$this->dropTable('{{%{table}}}');
+    }
+}
+
+CODE;
diff --git a/tests/data/helpers/CustomDebugInfo.php b/tests/data/helpers/CustomDebugInfo.php
index 67ff276fe14..94a01db9c9a 100644
--- a/tests/data/helpers/CustomDebugInfo.php
+++ b/tests/data/helpers/CustomDebugInfo.php
@@ -18,7 +18,7 @@ class CustomDebugInfo
     public $unitPrice;
 
     /**
-     * @see https://secure.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.debuginfo
+     * @see https://www.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.debuginfo
      *
      * @return array
      */
diff --git a/tests/framework/base/ViewTest.php b/tests/framework/base/ViewTest.php
index fae03cdd723..58e16415dd3 100644
--- a/tests/framework/base/ViewTest.php
+++ b/tests/framework/base/ViewTest.php
@@ -97,4 +97,22 @@ public function testRelativePathInView()
 
         $this->assertSame($subViewContent, $view->render('@testviews/base'));
     }
+
+    public function testAfterRender()
+    {
+        $view = new View();
+        $filename = 'path/to/file';
+        $params = ['search' => 'simple', 'replace' => 'new'];
+        $output = 'This is a simple rendered output. (filename)';
+        $expectedOutput = 'This is a new rendered output. (path/to/file)';
+
+        $view->on(View::EVENT_AFTER_RENDER, function (ViewEvent $event) {
+            $event->output = str_replace($event->params['search'], $event->params['replace'], $event->output);
+            $event->output = str_replace('filename', $event->viewFile, $event->output);
+        });
+
+        $view->afterRender($filename, $params, $output);
+
+        $this->assertSame($expectedOutput, $output);
+    }
 }
diff --git a/tests/framework/console/controllers/BaseMessageControllerTest.php b/tests/framework/console/controllers/BaseMessageControllerTest.php
index 87a186fceb6..b3485967e45 100644
--- a/tests/framework/console/controllers/BaseMessageControllerTest.php
+++ b/tests/framework/console/controllers/BaseMessageControllerTest.php
@@ -170,7 +170,8 @@ public function testCreateTranslation()
     {
         $category = 'test.category1';
         $message = 'test message';
-        $sourceFileContent = "Yii::t('{$category}', '{$message}');";
+        $message2 = 'test message 2';
+        $sourceFileContent = "Yii::t('{$category}', '{$message}');\n\Yii::t('{$category}', '{$message2}');";
         $this->createSourceFile($sourceFileContent);
 
         $this->saveConfigFile($this->getConfig());
@@ -178,6 +179,7 @@ public function testCreateTranslation()
 
         $messages = $this->loadMessages($category);
         $this->assertArrayHasKey($message, $messages, "\"$message\" is missing in translation file. Command output:\n\n" . $out);
+        $this->assertArrayHasKey($message2, $messages, "\"$message2\" is missing in translation file. Command output:\n\n" . $out);
     }
 
     /**
diff --git a/tests/framework/console/controllers/MigrateControllerTest.php b/tests/framework/console/controllers/MigrateControllerTest.php
index e93e2a28061..31e235adaea 100644
--- a/tests/framework/console/controllers/MigrateControllerTest.php
+++ b/tests/framework/console/controllers/MigrateControllerTest.php
@@ -133,6 +133,9 @@ public function generateMigrationDataProvider()
                     price:money(11,2):notNull,
                     parenthesis_in_comment:string(255):notNull:comment(\'Name of set (RU)\')',
             ],
+            'create_id_field_not_as_pk' => [
+                'fields' => 'id:integer(11):notNull',
+            ],
             'create_fields_with_col_method_after_default_value' => [
                 'fields' => 'id:primaryKey,
                     title:string(10):notNull:unique:defaultValue("test"):after("id"),
@@ -229,6 +232,7 @@ public function generateMigrationDataProvider()
 
             ['create_fields', 'create_test_table', 'test', $params['create_fields']],
             ['create_fields', 'create_TEST_table', 'TEST', $params['create_fields']],
+            ['create_id_field_not_as_pk', 'create_test_table', 'test', $params['create_id_field_not_as_pk']],
             ['create_title_pk', 'create_test_table', 'test', $params['create_title_pk']],
             ['create_title_pk', 'create_TEST_table', 'TEST', $params['create_title_pk']],
             ['create_unsigned_pk', 'create_test_table', 'test', $params['create_unsigned_pk']],
diff --git a/tests/framework/data/SortTest.php b/tests/framework/data/SortTest.php
index ff50a98403b..89cd8a0d69e 100644
--- a/tests/framework/data/SortTest.php
+++ b/tests/framework/data/SortTest.php
@@ -163,8 +163,30 @@ public function testCreateSortParam()
             'route' => 'site/index',
         ]);
 
+        $sort->params = ['sort' => 'age,-name'];
+        $sort->getAttributeOrders(true);
         $this->assertEquals('-age,-name', $sort->createSortParam('age'));
+        $this->assertEquals('age', $sort->createSortParam('name'));
+
+        $sort->params = ['sort' => 'age'];
+        $sort->getAttributeOrders(true);
+        $this->assertEquals('-age', $sort->createSortParam('age'));
+
+        $sort->params = ['sort' => '-age'];
+        $sort->getAttributeOrders(true);
+        $this->assertEquals('', $sort->createSortParam('age'));
+
+        $sort->params = ['sort' => 'age'];
+        $sort->getAttributeOrders(true);
         $this->assertEquals('name,age', $sort->createSortParam('name'));
+
+        $sort->params = ['sort' => 'name,age'];
+        $sort->getAttributeOrders(true);
+        $this->assertEquals('-name,age', $sort->createSortParam('name'));
+
+        $sort->params = ['sort' => '-name,age'];
+        $sort->getAttributeOrders(true);
+        $this->assertEquals('age', $sort->createSortParam('name'));
     }
 
     public function testCreateUrl()
@@ -192,7 +214,7 @@ public function testCreateUrl()
         ]);
 
         $this->assertEquals('/index.php?r=site%2Findex&sort=-age%2C-name', $sort->createUrl('age'));
-        $this->assertEquals('/index.php?r=site%2Findex&sort=name%2Cage', $sort->createUrl('name'));
+        $this->assertEquals('/index.php?r=site%2Findex&sort=age', $sort->createUrl('name'));
     }
 
     /**
diff --git a/tests/framework/db/ActiveQueryTest.php b/tests/framework/db/ActiveQueryTest.php
index 2fd9fdea8a4..50b8a6eda3c 100644
--- a/tests/framework/db/ActiveQueryTest.php
+++ b/tests/framework/db/ActiveQueryTest.php
@@ -53,7 +53,7 @@ public function testTriggerInitEvent()
     }
 
     /**
-     * @todo: tests for internal logic of prepare()
+     * @todo tests for internal logic of prepare()
      */
     public function testPrepare()
     {
@@ -72,7 +72,7 @@ public function testPopulate_EmptyRows()
     }
 
     /**
-     * @todo: tests for internal logic of populate()
+     * @todo tests for internal logic of populate()
      */
     public function testPopulate_FilledRows()
     {
@@ -83,7 +83,7 @@ public function testPopulate_FilledRows()
     }
 
     /**
-     * @todo: tests for internal logic of one()
+     * @todo tests for internal logic of one()
      */
     public function testOne()
     {
@@ -93,7 +93,7 @@ public function testOne()
     }
 
     /**
-     * @todo: test internal logic of createCommand()
+     * @todo test internal logic of createCommand()
      */
     public function testCreateCommand()
     {
@@ -103,7 +103,7 @@ public function testCreateCommand()
     }
 
     /**
-     * @todo: tests for internal logic of queryScalar()
+     * @todo tests for internal logic of queryScalar()
      */
     public function testQueryScalar()
     {
@@ -113,7 +113,7 @@ public function testQueryScalar()
     }
 
     /**
-     * @todo: tests for internal logic of joinWith()
+     * @todo tests for internal logic of joinWith()
      */
     public function testJoinWith()
     {
@@ -125,7 +125,7 @@ public function testJoinWith()
     }
 
     /**
-     * @todo: tests for internal logic of innerJoinWith()
+     * @todo tests for internal logic of innerJoinWith()
      */
     public function testInnerJoinWith()
     {
@@ -157,7 +157,7 @@ public function testBuildJoinWithRemoveDuplicateJoinByTableName()
     }
 
     /**
-     * @todo: tests for the regex inside getQueryTableName
+     * @todo tests for the regex inside getQueryTableName
      */
     public function testGetQueryTableName_from_not_set()
     {
@@ -231,7 +231,7 @@ public function testOrOnCondition_on_set()
     }
 
     /**
-     * @todo: tests for internal logic of viaTable()
+     * @todo tests for internal logic of viaTable()
      */
     public function testViaTable()
     {
diff --git a/tests/framework/db/ActiveRecordTest.php b/tests/framework/db/ActiveRecordTest.php
index 1bf82bc3549..0088a9091a0 100644
--- a/tests/framework/db/ActiveRecordTest.php
+++ b/tests/framework/db/ActiveRecordTest.php
@@ -35,6 +35,7 @@
 use yiiunit\data\ar\Profile;
 use yiiunit\data\ar\ProfileWithConstructor;
 use yiiunit\data\ar\Type;
+use yiiunit\data\ar\CroppedType;
 use yiiunit\framework\ar\ActiveRecordTestTrait;
 use yiiunit\framework\db\cubrid\ActiveRecordTest as CubridActiveRecordTest;
 use yiiunit\TestCase;
@@ -1344,7 +1345,6 @@ public function testDefaultValues()
         $this->assertEquals(1.23, $model->float_col2);
         $this->assertEquals(33.22, $model->numeric_col);
         $this->assertEquals(true, $model->bool_col2);
-
         if ($this instanceof CubridActiveRecordTest) {
             // cubrid has non-standard timestamp representation
             $this->assertEquals('12:00:00 AM 01/01/2002', $model->time);
@@ -1354,15 +1354,18 @@ public function testDefaultValues()
 
         $model = new Type();
         $model->char_col2 = 'not something';
-
         $model->loadDefaultValues();
         $this->assertEquals('not something', $model->char_col2);
 
         $model = new Type();
         $model->char_col2 = 'not something';
-
         $model->loadDefaultValues(false);
         $this->assertEquals('something', $model->char_col2);
+        
+        // Cropped model with 2 attributes/columns
+        $model = new CroppedType();
+        $model->loadDefaultValues();
+        $this->assertEquals(['int_col2' => 1], $model->toArray());
     }
 
     public function testUnlinkAllViaTable()
diff --git a/tests/framework/filters/auth/BasicAuthTest.php b/tests/framework/filters/auth/BasicAuthTest.php
index 1bde8a853f8..f5d552493e5 100644
--- a/tests/framework/filters/auth/BasicAuthTest.php
+++ b/tests/framework/filters/auth/BasicAuthTest.php
@@ -90,8 +90,8 @@ public function testHttpBasicAuthCustom($token, $login)
 
     /**
      * This tests checks, that:
-     *  - HttpBasicAuth does not call `auth` closure, when user is already authenticated
-     *  - HttpBasicAuth does not switch identity, when the user identity to be set is the same as current user's one
+     *  - HttpBasicAuth does not call `auth` closure, when a user is already authenticated
+     *  - HttpBasicAuth does not switch identity, even when the user identity to be set is the same as current user's one
      *
      * @dataProvider tokenProvider
      * @param string|null $token
@@ -102,28 +102,22 @@ public function testHttpBasicAuthIssue15658($token, $login)
         $_SERVER['PHP_AUTH_USER'] = $login;
         $_SERVER['PHP_AUTH_PW'] = 'y0u7h1nk175r34l?';
 
-        // Login user and set fake identity ID to session
-        if ($login !== null) {
-            Yii::$app->user->login(UserIdentity::findIdentity($login));
-        }
-
+        $user = Yii::$app->user;
         $session = Yii::$app->session;
-        $idParam = Yii::$app->user->idParam;
-        $idValue = 'should not be changed';
-        $session->set($idParam, $idValue);
+        $user->login(UserIdentity::findIdentity('user1'));
+        $identity = $user->getIdentity();
+        $sessionId = $session->getId();
 
         $filter = [
             'class' => HttpBasicAuth::className(),
             'auth' => function ($username, $password) {
-                if ($username !== null) {
-                    $this->fail('Authentication closure should not be called when user is already authenticated');
-                }
-                return null;
+                $this->fail('Authentication closure should not be called when user is already authenticated');
             },
         ];
-        $this->ensureFilterApplies($token, $login, $filter);
+        $this->ensureFilterApplies('token1', 'user1', $filter);
 
-        $this->assertSame($idValue, $session->get($idParam));
+        $this->assertSame($identity, $user->getIdentity());
+        $this->assertSame($sessionId, $session->getId());
         $session->destroy();
     }
 
diff --git a/tests/framework/helpers/ArrayHelperTest.php b/tests/framework/helpers/ArrayHelperTest.php
index 538bb8af78c..614d074af78 100644
--- a/tests/framework/helpers/ArrayHelperTest.php
+++ b/tests/framework/helpers/ArrayHelperTest.php
@@ -114,6 +114,13 @@ public function testToArray()
                 },
             ],
         ]));
+
+        // DateTime test
+        $this->assertEquals([
+            'date' => '2021-09-13 15:16:17.000000',
+            'timezone_type' => 3,
+            'timezone' => 'UTC',
+        ], ArrayHelper::toArray(new \DateTime('2021-09-13 15:16:17', new \DateTimeZone('UTC'))));
     }
 
     public function testRemove()
diff --git a/tests/framework/helpers/InflectorTest.php b/tests/framework/helpers/InflectorTest.php
index eaadb1c8650..dd56d86e597 100644
--- a/tests/framework/helpers/InflectorTest.php
+++ b/tests/framework/helpers/InflectorTest.php
@@ -117,6 +117,10 @@ public function testCamel2words()
         $this->assertEquals('Generate Csrf', Inflector::camel2words('generateCSRF'));
         $this->assertEquals('Generate Csrf Token', Inflector::camel2words('generateCSRFToken'));
         $this->assertEquals('Csrf Token Generator', Inflector::camel2words('CSRFTokenGenerator'));
+        $this->assertEquals('Foo Bar', Inflector::camel2words('foo bar'));
+        $this->assertEquals('Foo Bar', Inflector::camel2words('foo BAR'));
+        $this->assertEquals('Foo Bar', Inflector::camel2words('Foo Bar'));
+        $this->assertEquals('Foo Bar', Inflector::camel2words('FOO BAR'));
     }
 
     public function testCamel2id()
diff --git a/tests/framework/helpers/JsonTest.php b/tests/framework/helpers/JsonTest.php
index 9695af91c0f..3db445f5af8 100644
--- a/tests/framework/helpers/JsonTest.php
+++ b/tests/framework/helpers/JsonTest.php
@@ -7,15 +7,15 @@
 
 namespace yiiunit\framework\helpers;
 
-use yii\base\DynamicModel;
-use yii\helpers\BaseJson;
 use yii\helpers\Json;
 use yii\web\JsExpression;
 use yiiunit\framework\web\Post;
+use yiiunit\framework\models\JsonModel;
 use yiiunit\TestCase;
 
 /**
  * @group helpers
+ * @coversDefaultClass \yii\helpers\Json
  */
 class JsonTest extends TestCase
 {
@@ -23,17 +23,17 @@ protected function setUp()
     {
         parent::setUp();
 
-        // destroy application, Helper must work without Yii::$app
+        // destroy application, helper must work without Yii::$app
         $this->destroyApplication();
     }
 
     public function testEncode()
     {
         // Arrayable data encoding
-        $dataArrayable = $this->getMockBuilder('yii\\base\\Arrayable')->getMock();
+        $dataArrayable = $this->getMockBuilder('\yii\base\Arrayable')->getMock();
         $dataArrayable->method('toArray')->willReturn([]);
         $actual = Json::encode($dataArrayable);
-        $this->assertSame('{}', $actual);
+        $this->assertSame('[]', $actual);
 
         // basic data encoding
         $data = '1';
@@ -46,11 +46,21 @@ public function testEncode()
         $this->assertSame('{"a":1,"b":2}', Json::encode($data));
 
         // simple object encoding
-        $data = new \stdClass();
-        $data->a = 1;
-        $data->b = 2;
+        $data = (object) ['a' => 1, 'b' => 2];
         $this->assertSame('{"a":1,"b":2}', Json::encode($data));
 
+        // simple object with zero indexed keys encoding
+        $data = (object) [
+            0 => 1,
+            1 => 2
+        ];
+        $default = Json::$keepObjectType;
+        Json::$keepObjectType = true;
+        $this->assertSame('{"0":1,"1":2}', Json::encode($data));
+        Json::$keepObjectType = false;
+        $this->assertSame('[1,2]', Json::encode($data));
+        Json::$keepObjectType = $default;
+
         // empty data encoding
         $data = [];
         $this->assertSame('[]', Json::encode($data));
@@ -66,9 +76,7 @@ public function testEncode()
         $expression1 = 'function (a) {}';
         $expression2 = 'function (b) {}';
         $data = [
-            'a' => [
-                1, new JsExpression($expression1),
-            ],
+            'a' => [1, new JsExpression($expression1)],
             'b' => new JsExpression($expression2),
         ];
         $this->assertSame("{\"a\":[1,$expression1],\"b\":$expression2}", Json::encode($data));
@@ -80,7 +88,7 @@ public function testEncode()
         // JsonSerializable
         $data = new JsonModel();
         $this->assertSame('{"json":"serializable"}', Json::encode($data));
-        // @see https://github.com/yiisoft/yii2/issues/12043
+        // https://github.com/yiisoft/yii2/issues/12043
         $data = new JsonModel();
         $data->data = [];
         $this->assertSame('[]', Json::encode($data));
@@ -106,10 +114,8 @@ public function testHtmlEncode()
         $this->assertSame('{"a":1,"b":2}', Json::htmlEncode($data));
 
         // simple object encoding
-        $data = new \stdClass();
-        $data->a = 1;
-        $data->b = 2;
-        $this->assertSame('{"a":1,"b":2}', Json::htmlEncode($data));
+        $data = (object) ['a' => 1, 'b' => 'c'];
+        $this->assertSame('{"a":1,"b":"c"}', Json::htmlEncode($data));
 
         // expression encoding
         $expression = 'function () {}';
@@ -120,9 +126,7 @@ public function testHtmlEncode()
         $expression1 = 'function (a) {}';
         $expression2 = 'function (b) {}';
         $data = [
-            'a' => [
-                1, new JsExpression($expression1),
-            ],
+            'a' => [1, new JsExpression($expression1)],
             'b' => new JsExpression($expression2),
         ];
         $this->assertSame("{\"a\":[1,$expression1],\"b\":$expression2}", Json::htmlEncode($data));
@@ -147,6 +151,18 @@ public function testHtmlEncode()
         $document = simplexml_load_string($xml);
         $this->assertSame('{"apiKey":"ieu2iqw4o","methodProperties":{"FindByString":"Kiev"}}', Json::encode($document));
 
+        // SimpleXMLElement with empty tag
+        $xml = '<?xml version="1.0" encoding="UTF-8"?>
+<parent>
+  <child1/>
+  <child2>
+    <subElement>sub</subElement>
+  </child2>
+</parent>';
+
+        $document = simplexml_load_string($xml);
+        $this->assertSame('{"child1":{},"child2":{"subElement":"sub"}}', Json::encode($document));
+
         $postsStack = new \SplStack();
         $postsStack->push(new Post(915, 'record1'));
         $postsStack->push(new Post(456, 'record2'));
@@ -171,40 +187,44 @@ public function testDecode()
 
         // exception
         $json = '{"a":1,"b":2';
-        $this->expectException('yii\base\InvalidParamException');
+        $this->expectException('\yii\base\InvalidArgumentException');
         Json::decode($json);
     }
 
     /**
-     * @expectedException \yii\base\InvalidParamException
+     * @expectedException \yii\base\InvalidArgumentException
      * @expectedExceptionMessage Invalid JSON data.
+     * @covers ::decode
      */
     public function testDecodeInvalidParamException()
     {
         Json::decode([]);
     }
 
+    /**
+     * @covers ::decode
+     */
     public function testHandleJsonError()
     {
-        // Basic syntax error
+        // basic syntax error
         try {
             $json = "{'a': '1'}";
             Json::decode($json);
-        } catch (\yii\base\InvalidParamException $e) {
-            $this->assertSame(BaseJson::$jsonErrorMessages['JSON_ERROR_SYNTAX'], $e->getMessage());
+        } catch (\yii\base\InvalidArgumentException $e) {
+            $this->assertSame(Json::$jsonErrorMessages['JSON_ERROR_SYNTAX'], $e->getMessage());
         }
 
-        // Unsupported type since PHP 5.5
+        // unsupported type since PHP 5.5
         try {
             $fp = fopen('php://stdin', 'r');
             $data = ['a' => $fp];
             Json::encode($data);
             fclose($fp);
-        } catch (\yii\base\InvalidParamException $e) {
+        } catch (\yii\base\InvalidArgumentException $e) {
             if (PHP_VERSION_ID >= 50500) {
-                $this->assertSame(BaseJson::$jsonErrorMessages['JSON_ERROR_UNSUPPORTED_TYPE'], $e->getMessage());
+                $this->assertSame(Json::$jsonErrorMessages['JSON_ERROR_UNSUPPORTED_TYPE'], $e->getMessage());
             } else {
-                $this->assertSame(BaseJson::$jsonErrorMessages['JSON_ERROR_SYNTAX'], $e->getMessage());
+                $this->assertSame(Json::$jsonErrorMessages['JSON_ERROR_SYNTAX'], $e->getMessage());
             }
         }
     }
@@ -222,7 +242,8 @@ public function testErrorSummary()
     }
 
     /**
-     * @link https://github.com/yiisoft/yii2/issues/17760
+     * @see https://github.com/yiisoft/yii2/issues/17760
+     * @covers ::encode
      */
     public function testEncodeDateTime()
     {
@@ -231,6 +252,9 @@ public function testEncodeDateTime()
         $this->assertEquals('{"date":"2014-10-12 00:00:00.000000","timezone_type":3,"timezone":"UTC"}', $output);
     }
 
+    /**
+     * @covers ::encode
+     */
     public function testPrettyPrint()
     {
         $defaultValue = Json::$prettyPrint;
@@ -262,26 +286,3 @@ public function testPrettyPrint()
         Json::$prettyPrint = $defaultValue;
     }
 }
-
-class JsonModel extends DynamicModel implements \JsonSerializable
-{
-    public $data = ['json' => 'serializable'];
-
-    public function jsonSerialize()
-    {
-        return $this->data;
-    }
-
-    public function rules()
-    {
-        return [
-            ['name', 'required'],
-            ['name', 'string', 'max' => 100]
-        ];
-    }
-
-    public function init()
-    {
-       $this->defineAttribute('name');
-    }
-}
diff --git a/tests/framework/helpers/StringHelperTest.php b/tests/framework/helpers/StringHelperTest.php
index faac9bf6f93..9ec2dc1f8d1 100644
--- a/tests/framework/helpers/StringHelperTest.php
+++ b/tests/framework/helpers/StringHelperTest.php
@@ -104,7 +104,7 @@ public function testBasename()
         $this->assertEquals('file', StringHelper::basename('/path/to/filete\st', 'te\st'));
         $this->assertEquals('st', StringHelper::basename('/path/to/filete\st', 'te/st'));
 
-        // https://secure.php.net/manual/en/function.basename.php#72254
+        // https://www.php.net/manual/en/function.basename.php#72254
         $this->assertEquals('foo', StringHelper::basename('/bar/foo/'));
         $this->assertEquals('foo', StringHelper::basename('\\bar\\foo\\'));
     }
@@ -438,6 +438,8 @@ public function dataProviderMb_ucwords()
             ['0', '0'],
             [null, ''],
             ['здесь我 multibyte我 строка', 'Здесь我 Multibyte我 Строка'],
+            ['p0 upload', 'P0 Upload'],
+            ['p5 upload', 'P5 Upload'],
         ];
     }
 
@@ -450,4 +452,26 @@ public function testMb_ucwords($string, $expectedResult)
     {
         $this->assertSame($expectedResult, StringHelper::mb_ucwords($string));
     }
+
+    /**
+     * @param string $string
+     * @param string $expectedResult
+     * @dataProvider dataProviderDirname
+     */
+    public function testDirname($string, $expectedResult)
+    {
+        $this->assertSame($expectedResult, StringHelper::dirname($string));
+    }
+
+    public function dataProviderDirname()
+    {
+        return [
+            ['\\foo\\bar\\test', '\foo\bar'],
+            ['\\foo/bar\\test', '\foo/bar'],
+            ['\\foo\\bar\\test\\', '\foo\bar'],
+            ['foo/bar/test', 'foo/bar'],
+            ['foo', ''],
+            ['', ''],
+        ];
+    }
 }
diff --git a/tests/framework/models/JsonModel.php b/tests/framework/models/JsonModel.php
new file mode 100644
index 00000000000..f30dfce67f8
--- /dev/null
+++ b/tests/framework/models/JsonModel.php
@@ -0,0 +1,50 @@
+<?php
+/**
+ * @link http://www.yiiframework.com/
+ * @copyright Copyright (c) 2008 Yii Software LLC
+ * @license http://www.yiiframework.com/license/
+ */
+
+namespace yiiunit\framework\models;
+
+use yii\base\DynamicModel;
+
+/**
+ * JSON serializable model for tests.
+ *
+ * {@inheritdoc}
+ */
+class JsonModel extends DynamicModel implements \JsonSerializable
+{
+    /**
+     * @var array
+     */
+    public $data = ['json' => 'serializable'];
+
+    /**
+     * @return array
+     */
+    public function jsonSerialize()
+    {
+        return $this->data;
+    }
+
+    /**
+     * @inheritdoc
+     */
+    public function init()
+    {
+       $this->defineAttribute('name');
+    }
+
+    /**
+     * @inheritdoc
+     */
+    public function rules()
+    {
+        return [
+            ['name', 'required'],
+            ['name', 'string', 'max' => 100]
+        ];
+    }
+}
diff --git a/tests/framework/web/HeaderCollectionTest.php b/tests/framework/web/HeaderCollectionTest.php
new file mode 100644
index 00000000000..7fe9c889f54
--- /dev/null
+++ b/tests/framework/web/HeaderCollectionTest.php
@@ -0,0 +1,27 @@
+<?php
+/**
+ * @link http://www.yiiframework.com/
+ * @copyright Copyright (c) 2008 Yii Software LLC
+ * @license http://www.yiiframework.com/license/
+ */
+
+namespace yiiunit\framework\web;
+
+use yii\web\HeaderCollection;
+use yiiunit\TestCase;
+
+/**
+ * @group web
+ */
+class HeaderCollectionTest extends TestCase
+{
+    public function testFromArray()
+    {
+        $headerCollection = new HeaderCollection();
+        $location = 'my-test-location';
+        $headerCollection->fromArray([
+            'Location' => [$location],
+        ]);
+        $this->assertEquals($location, $headerCollection->get('Location'));
+    }
+}
diff --git a/tests/framework/web/JsonResponseFormatterTest.php b/tests/framework/web/JsonResponseFormatterTest.php
index ad2943d19ef..9fa248a0b66 100644
--- a/tests/framework/web/JsonResponseFormatterTest.php
+++ b/tests/framework/web/JsonResponseFormatterTest.php
@@ -7,6 +7,7 @@
 
 namespace yiiunit\framework\web;
 
+use yii\helpers\Json;
 use yii\web\JsonResponseFormatter;
 use yiiunit\framework\web\stubs\ModelStub;
 
@@ -207,4 +208,46 @@ public function testFormatFilledContent()
         $this->formatter->format($this->response);
         $this->assertEquals($content, $this->response->content);
     }
+
+    /**
+     * Formatter configuration keepObjectType affects how zero-indexed objects are encoded
+     */
+    public function testFormatZeroIndexedObjectKeepObject()
+    {
+        $formatter = $this->getFormatterInstance([
+            'keepObjectType' => true,
+        ]);
+        $this->response->data = (object)['test'];
+        $formatter->format($this->response);
+        $this->assertEquals('{"0":"test"}', $this->response->content);
+    }
+
+    /**
+     * Formatter configuration keepObjectType affects how zero-indexed objects are encoded
+     */
+    public function testFormatZeroIndexedObjectAllowArray()
+    {
+        $formatter = $this->getFormatterInstance([
+            'keepObjectType' => false,
+        ]);
+        $this->response->data = (object)['test'];
+        $formatter->format($this->response);
+        $this->assertEquals('["test"]', $this->response->content);
+    }
+
+    /**
+     * Formatter configuration keepObjectType reverts Json::$keepObjectType to its previous value
+     */
+    public function testFormatCleanupKeepObjectType()
+    {
+        $default = Json::$keepObjectType;
+        Json::$keepObjectType = false;
+        $formatter = $this->getFormatterInstance([
+            'keepObjectType' => true,
+        ]);
+        $this->response->data = (object)['test'];
+        $formatter->format($this->response);
+        $this->assertFalse(Json::$keepObjectType);
+        Json::$keepObjectType = $default;
+    }
 }
diff --git a/tests/framework/web/Post.php b/tests/framework/web/Post.php
index a2b3a6b0110..61255097ba7 100644
--- a/tests/framework/web/Post.php
+++ b/tests/framework/web/Post.php
@@ -9,14 +9,30 @@
 
 use yii\base\BaseObject;
 
+/**
+ * @inheritdoc
+ */
 class Post extends BaseObject
 {
+    /**
+     * @var int
+     */
     public $id;
+    /**
+     * @var string
+     */
     public $title;
 
-    public function __construct($id, $title)
+    /**
+     * @param int $id
+     * @param string $title
+     * @param array $config
+     */
+    public function __construct($id, $title, $config = [])
     {
         $this->id = $id;
         $this->title = $title;
+
+        parent::__construct($config);
     }
 }
diff --git a/tests/framework/web/XmlResponseFormatterTest.php b/tests/framework/web/XmlResponseFormatterTest.php
index 947c50af004..20a63f81769 100644
--- a/tests/framework/web/XmlResponseFormatterTest.php
+++ b/tests/framework/web/XmlResponseFormatterTest.php
@@ -46,6 +46,7 @@ public function formatScalarDataProvider()
             [true, "<response>true</response>\n"],
             [false, "<response>false</response>\n"],
             ['<>', "<response>&lt;&gt;</response>\n"],
+            ['a&b', "<response>a&amp;b</response>\n"],
         ]);
     }
 
@@ -58,6 +59,10 @@ public function formatArrayDataProvider()
                 'a' => 1,
                 'b' => 'abc',
             ], "<response><a>1</a><b>abc</b></response>\n"],
+            [
+                ['image:loc' => 'url'],
+                "<response><image:loc>url</image:loc></response>\n"
+            ],
             [[
                 1,
                 'abc',
@@ -79,7 +84,7 @@ public function formatArrayDataProvider()
                 'b:c' => 'b:c',
                 'a b c' => 'a b c',
                 'äøñ' => 'äøñ',
-            ], "<response><item>1</item><item>2015-06-18</item><item>b:c</item><item>a b c</item><äøñ>äøñ</äøñ></response>\n"],
+            ], "<response><item>1</item><item>2015-06-18</item><b:c>b:c</b:c><item>a b c</item><äøñ>äøñ</äøñ></response>\n"],
         ]);
     }
 
@@ -162,4 +167,13 @@ public function testNoObjectTags()
         $formatter->format($this->response);
         $this->assertEquals($this->xmlHead . "<response><id>123</id><title>abc</title></response>\n", $this->response->content);
     }
+
+    public function testObjectTagToLowercase()
+    {
+        $formatter = $this->getFormatterInstance(['objectTagToLowercase' => true]);
+
+        $this->response->data = new Post(123, 'abc');
+        $formatter->format($this->response);
+        $this->assertEquals($this->xmlHead . "<response><post><id>123</id><title>abc</title></post></response>\n", $this->response->content);
+    }
 }
diff --git a/tests/framework/widgets/ActiveFieldTest.php b/tests/framework/widgets/ActiveFieldTest.php
index ecb4cdc6b2d..d4d94d12911 100644
--- a/tests/framework/widgets/ActiveFieldTest.php
+++ b/tests/framework/widgets/ActiveFieldTest.php
@@ -78,7 +78,7 @@ public function testRenderNoContent()
     }
 
     /**
-     * @todo    discuss|review  Expected HTML shouldn't be wrapped only by the $content?
+     * @todo discuss|review Expected HTML shouldn't be wrapped only by the $content?
      */
     public function testRenderWithCallableContent()
     {
@@ -530,6 +530,62 @@ public function testAriaInvalidAttribute()
         $this->assertEqualsWithoutLE($expectedValue, $actualValue);
     }
 
+    public function testTabularAriaAttributes()
+    {
+        $this->activeField->attribute = '[0]' . $this->attributeName;
+        $this->activeField->addAriaAttributes = true;
+
+        $expectedValue = <<<'EOD'
+<div class="form-group field-activefieldtestmodel-0-attributename">
+<label class="control-label" for="activefieldtestmodel-0-attributename">Attribute Name</label>
+<input type="text" id="activefieldtestmodel-0-attributename" class="form-control" name="ActiveFieldTestModel[0][attributeName]">
+<div class="hint-block">Hint for attributeName attribute</div>
+<div class="help-block"></div>
+</div>
+EOD;
+
+        $actualValue = $this->activeField->render();
+        $this->assertEqualsWithoutLE($expectedValue, $actualValue);
+    }
+
+    public function testTabularAriaRequiredAttribute()
+    {
+        $this->activeField->attribute = '[0]' . $this->attributeName;
+        $this->activeField->addAriaAttributes = true;
+        $this->helperModel->addRule([$this->attributeName], 'required');
+
+        $expectedValue = <<<'EOD'
+<div class="form-group field-activefieldtestmodel-0-attributename required">
+<label class="control-label" for="activefieldtestmodel-0-attributename">Attribute Name</label>
+<input type="text" id="activefieldtestmodel-0-attributename" class="form-control" name="ActiveFieldTestModel[0][attributeName]" aria-required="true">
+<div class="hint-block">Hint for attributeName attribute</div>
+<div class="help-block"></div>
+</div>
+EOD;
+
+        $actualValue = $this->activeField->render();
+        $this->assertEqualsWithoutLE($expectedValue, $actualValue);
+    }
+
+    public function testTabularAriaInvalidAttribute()
+    {
+        $this->activeField->attribute = '[0]' . $this->attributeName;
+        $this->activeField->addAriaAttributes = true;
+        $this->helperModel->addError($this->attributeName, 'Some error');
+
+        $expectedValue = <<<'EOD'
+<div class="form-group field-activefieldtestmodel-0-attributename has-error">
+<label class="control-label" for="activefieldtestmodel-0-attributename">Attribute Name</label>
+<input type="text" id="activefieldtestmodel-0-attributename" class="form-control" name="ActiveFieldTestModel[0][attributeName]" aria-invalid="true">
+<div class="hint-block">Hint for attributeName attribute</div>
+<div class="help-block">Some error</div>
+</div>
+EOD;
+
+        $actualValue = $this->activeField->render();
+        $this->assertEqualsWithoutLE($expectedValue, $actualValue);
+    }
+
     public function testEmptyTag()
     {
         $this->activeField->options = ['tag' => false];
diff --git a/tests/js/tests/yii.validation.test.js b/tests/js/tests/yii.validation.test.js
index e5196d309b4..3fa08f45278 100644
--- a/tests/js/tests/yii.validation.test.js
+++ b/tests/js/tests/yii.validation.test.js
@@ -1307,7 +1307,7 @@ describe('yii.validation', function () {
 
     describe('captcha validator', function () {
         // Converted using yii\captcha\CaptchaAction generateValidationHash() method
-        var hashes = {'Code': 379, 'code': 411};
+        var hashes = {'Code': 1497, 'code': 1529};
         var caseInSensitiveData = {
             'valid code in lowercase': ['code', true],
             'valid code in uppercase': ['CODE', true],
